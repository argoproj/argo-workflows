// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/workflow/workflow.proto

// Workflow Service
//
// Workflow Service API performs CRUD actions against application resources

package workflow

import (
	context "context"
	fmt "fmt"
	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	v11 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowCreateRequest struct {
	Namespace            string             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Workflow             *v1alpha1.Workflow `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	InstanceID           string             `protobuf:"bytes,3,opt,name=instanceID,proto3" json:"instanceID,omitempty"`
	ServerDryRun         bool               `protobuf:"varint,4,opt,name=serverDryRun,proto3" json:"serverDryRun,omitempty"`
	CreateOptions        *v1.CreateOptions  `protobuf:"bytes,5,opt,name=createOptions,proto3" json:"createOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowCreateRequest) Reset()         { *m = WorkflowCreateRequest{} }
func (m *WorkflowCreateRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowCreateRequest) ProtoMessage()    {}
func (*WorkflowCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{0}
}

func (m *WorkflowCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowCreateRequest.Unmarshal(m, b)
}
func (m *WorkflowCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowCreateRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowCreateRequest.Merge(m, src)
}
func (m *WorkflowCreateRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowCreateRequest.Size(m)
}
func (m *WorkflowCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowCreateRequest proto.InternalMessageInfo

func (m *WorkflowCreateRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowCreateRequest) GetWorkflow() *v1alpha1.Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func (m *WorkflowCreateRequest) GetInstanceID() string {
	if m != nil {
		return m.InstanceID
	}
	return ""
}

func (m *WorkflowCreateRequest) GetServerDryRun() bool {
	if m != nil {
		return m.ServerDryRun
	}
	return false
}

func (m *WorkflowCreateRequest) GetCreateOptions() *v1.CreateOptions {
	if m != nil {
		return m.CreateOptions
	}
	return nil
}

type WorkflowGetRequest struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string         `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	GetOptions           *v1.GetOptions `protobuf:"bytes,3,opt,name=getOptions,proto3" json:"getOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *WorkflowGetRequest) Reset()         { *m = WorkflowGetRequest{} }
func (m *WorkflowGetRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowGetRequest) ProtoMessage()    {}
func (*WorkflowGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{1}
}

func (m *WorkflowGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowGetRequest.Unmarshal(m, b)
}
func (m *WorkflowGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowGetRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowGetRequest.Merge(m, src)
}
func (m *WorkflowGetRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowGetRequest.Size(m)
}
func (m *WorkflowGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowGetRequest proto.InternalMessageInfo

func (m *WorkflowGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowGetRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowGetRequest) GetGetOptions() *v1.GetOptions {
	if m != nil {
		return m.GetOptions
	}
	return nil
}

type WorkflowListRequest struct {
	Namespace            string          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ListOptions          *v1.ListOptions `protobuf:"bytes,2,opt,name=listOptions,proto3" json:"listOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WorkflowListRequest) Reset()         { *m = WorkflowListRequest{} }
func (m *WorkflowListRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowListRequest) ProtoMessage()    {}
func (*WorkflowListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{2}
}

func (m *WorkflowListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowListRequest.Unmarshal(m, b)
}
func (m *WorkflowListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowListRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowListRequest.Merge(m, src)
}
func (m *WorkflowListRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowListRequest.Size(m)
}
func (m *WorkflowListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowListRequest proto.InternalMessageInfo

func (m *WorkflowListRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowListRequest) GetListOptions() *v1.ListOptions {
	if m != nil {
		return m.ListOptions
	}
	return nil
}

type WorkflowResubmitRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Memoized             bool     `protobuf:"varint,3,opt,name=memoized,proto3" json:"memoized,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowResubmitRequest) Reset()         { *m = WorkflowResubmitRequest{} }
func (m *WorkflowResubmitRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowResubmitRequest) ProtoMessage()    {}
func (*WorkflowResubmitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{3}
}

func (m *WorkflowResubmitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowResubmitRequest.Unmarshal(m, b)
}
func (m *WorkflowResubmitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowResubmitRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowResubmitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowResubmitRequest.Merge(m, src)
}
func (m *WorkflowResubmitRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowResubmitRequest.Size(m)
}
func (m *WorkflowResubmitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowResubmitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowResubmitRequest proto.InternalMessageInfo

func (m *WorkflowResubmitRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowResubmitRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowResubmitRequest) GetMemoized() bool {
	if m != nil {
		return m.Memoized
	}
	return false
}

type WorkflowRetryRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowRetryRequest) Reset()         { *m = WorkflowRetryRequest{} }
func (m *WorkflowRetryRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowRetryRequest) ProtoMessage()    {}
func (*WorkflowRetryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{4}
}

func (m *WorkflowRetryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowRetryRequest.Unmarshal(m, b)
}
func (m *WorkflowRetryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowRetryRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowRetryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowRetryRequest.Merge(m, src)
}
func (m *WorkflowRetryRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowRetryRequest.Size(m)
}
func (m *WorkflowRetryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowRetryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowRetryRequest proto.InternalMessageInfo

func (m *WorkflowRetryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowRetryRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type WorkflowResumeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowResumeRequest) Reset()         { *m = WorkflowResumeRequest{} }
func (m *WorkflowResumeRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowResumeRequest) ProtoMessage()    {}
func (*WorkflowResumeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{5}
}

func (m *WorkflowResumeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowResumeRequest.Unmarshal(m, b)
}
func (m *WorkflowResumeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowResumeRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowResumeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowResumeRequest.Merge(m, src)
}
func (m *WorkflowResumeRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowResumeRequest.Size(m)
}
func (m *WorkflowResumeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowResumeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowResumeRequest proto.InternalMessageInfo

func (m *WorkflowResumeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowResumeRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type WorkflowTerminateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowTerminateRequest) Reset()         { *m = WorkflowTerminateRequest{} }
func (m *WorkflowTerminateRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowTerminateRequest) ProtoMessage()    {}
func (*WorkflowTerminateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{6}
}

func (m *WorkflowTerminateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowTerminateRequest.Unmarshal(m, b)
}
func (m *WorkflowTerminateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowTerminateRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowTerminateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowTerminateRequest.Merge(m, src)
}
func (m *WorkflowTerminateRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowTerminateRequest.Size(m)
}
func (m *WorkflowTerminateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowTerminateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowTerminateRequest proto.InternalMessageInfo

func (m *WorkflowTerminateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowTerminateRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type WorkflowSuspendRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowSuspendRequest) Reset()         { *m = WorkflowSuspendRequest{} }
func (m *WorkflowSuspendRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowSuspendRequest) ProtoMessage()    {}
func (*WorkflowSuspendRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{7}
}

func (m *WorkflowSuspendRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowSuspendRequest.Unmarshal(m, b)
}
func (m *WorkflowSuspendRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowSuspendRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowSuspendRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowSuspendRequest.Merge(m, src)
}
func (m *WorkflowSuspendRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowSuspendRequest.Size(m)
}
func (m *WorkflowSuspendRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowSuspendRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowSuspendRequest proto.InternalMessageInfo

func (m *WorkflowSuspendRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowSuspendRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

type WorkflowLogRequest struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	PodName              string             `protobuf:"bytes,3,opt,name=podName,proto3" json:"podName,omitempty"`
	LogOptions           *v11.PodLogOptions `protobuf:"bytes,4,opt,name=logOptions,proto3" json:"logOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowLogRequest) Reset()         { *m = WorkflowLogRequest{} }
func (m *WorkflowLogRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowLogRequest) ProtoMessage()    {}
func (*WorkflowLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{8}
}

func (m *WorkflowLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowLogRequest.Unmarshal(m, b)
}
func (m *WorkflowLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowLogRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowLogRequest.Merge(m, src)
}
func (m *WorkflowLogRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowLogRequest.Size(m)
}
func (m *WorkflowLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowLogRequest proto.InternalMessageInfo

func (m *WorkflowLogRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowLogRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowLogRequest) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *WorkflowLogRequest) GetLogOptions() *v11.PodLogOptions {
	if m != nil {
		return m.LogOptions
	}
	return nil
}

type WorkflowDeleteRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            string            `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	DeleteOptions        *v1.DeleteOptions `protobuf:"bytes,3,opt,name=deleteOptions,proto3" json:"deleteOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WorkflowDeleteRequest) Reset()         { *m = WorkflowDeleteRequest{} }
func (m *WorkflowDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowDeleteRequest) ProtoMessage()    {}
func (*WorkflowDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{9}
}

func (m *WorkflowDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowDeleteRequest.Unmarshal(m, b)
}
func (m *WorkflowDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowDeleteRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowDeleteRequest.Merge(m, src)
}
func (m *WorkflowDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowDeleteRequest.Size(m)
}
func (m *WorkflowDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowDeleteRequest proto.InternalMessageInfo

func (m *WorkflowDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *WorkflowDeleteRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowDeleteRequest) GetDeleteOptions() *v1.DeleteOptions {
	if m != nil {
		return m.DeleteOptions
	}
	return nil
}

type WorkflowDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowDeleteResponse) Reset()         { *m = WorkflowDeleteResponse{} }
func (m *WorkflowDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*WorkflowDeleteResponse) ProtoMessage()    {}
func (*WorkflowDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{10}
}

func (m *WorkflowDeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowDeleteResponse.Unmarshal(m, b)
}
func (m *WorkflowDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowDeleteResponse.Marshal(b, m, deterministic)
}
func (m *WorkflowDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowDeleteResponse.Merge(m, src)
}
func (m *WorkflowDeleteResponse) XXX_Size() int {
	return xxx_messageInfo_WorkflowDeleteResponse.Size(m)
}
func (m *WorkflowDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowDeleteResponse proto.InternalMessageInfo

type WatchWorkflowsRequest struct {
	Namespace            string          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ListOptions          *v1.ListOptions `protobuf:"bytes,2,opt,name=listOptions,proto3" json:"listOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *WatchWorkflowsRequest) Reset()         { *m = WatchWorkflowsRequest{} }
func (m *WatchWorkflowsRequest) String() string { return proto.CompactTextString(m) }
func (*WatchWorkflowsRequest) ProtoMessage()    {}
func (*WatchWorkflowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{11}
}

func (m *WatchWorkflowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchWorkflowsRequest.Unmarshal(m, b)
}
func (m *WatchWorkflowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchWorkflowsRequest.Marshal(b, m, deterministic)
}
func (m *WatchWorkflowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchWorkflowsRequest.Merge(m, src)
}
func (m *WatchWorkflowsRequest) XXX_Size() int {
	return xxx_messageInfo_WatchWorkflowsRequest.Size(m)
}
func (m *WatchWorkflowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchWorkflowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchWorkflowsRequest proto.InternalMessageInfo

func (m *WatchWorkflowsRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WatchWorkflowsRequest) GetListOptions() *v1.ListOptions {
	if m != nil {
		return m.ListOptions
	}
	return nil
}

type WorkflowWatchEvent struct {
	// the type of change
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// the workflow
	Object               *v1alpha1.Workflow `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowWatchEvent) Reset()         { *m = WorkflowWatchEvent{} }
func (m *WorkflowWatchEvent) String() string { return proto.CompactTextString(m) }
func (*WorkflowWatchEvent) ProtoMessage()    {}
func (*WorkflowWatchEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{12}
}

func (m *WorkflowWatchEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowWatchEvent.Unmarshal(m, b)
}
func (m *WorkflowWatchEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowWatchEvent.Marshal(b, m, deterministic)
}
func (m *WorkflowWatchEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowWatchEvent.Merge(m, src)
}
func (m *WorkflowWatchEvent) XXX_Size() int {
	return xxx_messageInfo_WorkflowWatchEvent.Size(m)
}
func (m *WorkflowWatchEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowWatchEvent.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowWatchEvent proto.InternalMessageInfo

func (m *WorkflowWatchEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *WorkflowWatchEvent) GetObject() *v1alpha1.Workflow {
	if m != nil {
		return m.Object
	}
	return nil
}

type LogEntry struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogEntry) Reset()         { *m = LogEntry{} }
func (m *LogEntry) String() string { return proto.CompactTextString(m) }
func (*LogEntry) ProtoMessage()    {}
func (*LogEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{13}
}

func (m *LogEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEntry.Unmarshal(m, b)
}
func (m *LogEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEntry.Marshal(b, m, deterministic)
}
func (m *LogEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEntry.Merge(m, src)
}
func (m *LogEntry) XXX_Size() int {
	return xxx_messageInfo_LogEntry.Size(m)
}
func (m *LogEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEntry.DiscardUnknown(m)
}

var xxx_messageInfo_LogEntry proto.InternalMessageInfo

func (m *LogEntry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type WorkflowLintRequest struct {
	Namespace            string             `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Workflow             *v1alpha1.Workflow `protobuf:"bytes,2,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WorkflowLintRequest) Reset()         { *m = WorkflowLintRequest{} }
func (m *WorkflowLintRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowLintRequest) ProtoMessage()    {}
func (*WorkflowLintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2af0e6384e310358, []int{14}
}

func (m *WorkflowLintRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowLintRequest.Unmarshal(m, b)
}
func (m *WorkflowLintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowLintRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowLintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowLintRequest.Merge(m, src)
}
func (m *WorkflowLintRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowLintRequest.Size(m)
}
func (m *WorkflowLintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowLintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowLintRequest proto.InternalMessageInfo

func (m *WorkflowLintRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *WorkflowLintRequest) GetWorkflow() *v1alpha1.Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkflowCreateRequest)(nil), "workflow.WorkflowCreateRequest")
	proto.RegisterType((*WorkflowGetRequest)(nil), "workflow.WorkflowGetRequest")
	proto.RegisterType((*WorkflowListRequest)(nil), "workflow.WorkflowListRequest")
	proto.RegisterType((*WorkflowResubmitRequest)(nil), "workflow.WorkflowResubmitRequest")
	proto.RegisterType((*WorkflowRetryRequest)(nil), "workflow.WorkflowRetryRequest")
	proto.RegisterType((*WorkflowResumeRequest)(nil), "workflow.WorkflowResumeRequest")
	proto.RegisterType((*WorkflowTerminateRequest)(nil), "workflow.WorkflowTerminateRequest")
	proto.RegisterType((*WorkflowSuspendRequest)(nil), "workflow.WorkflowSuspendRequest")
	proto.RegisterType((*WorkflowLogRequest)(nil), "workflow.WorkflowLogRequest")
	proto.RegisterType((*WorkflowDeleteRequest)(nil), "workflow.WorkflowDeleteRequest")
	proto.RegisterType((*WorkflowDeleteResponse)(nil), "workflow.WorkflowDeleteResponse")
	proto.RegisterType((*WatchWorkflowsRequest)(nil), "workflow.WatchWorkflowsRequest")
	proto.RegisterType((*WorkflowWatchEvent)(nil), "workflow.WorkflowWatchEvent")
	proto.RegisterType((*LogEntry)(nil), "workflow.LogEntry")
	proto.RegisterType((*WorkflowLintRequest)(nil), "workflow.WorkflowLintRequest")
}

func init() { proto.RegisterFile("server/workflow/workflow.proto", fileDescriptor_2af0e6384e310358) }

var fileDescriptor_2af0e6384e310358 = []byte{
	// 1030 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x97, 0x4d, 0x6f, 0xdc, 0xc4,
	0x1b, 0xc0, 0x35, 0x69, 0xfe, 0xed, 0xf6, 0x49, 0xb3, 0xfd, 0x33, 0xbc, 0xad, 0xac, 0x34, 0x4d,
	0x87, 0x16, 0x56, 0x69, 0x63, 0x67, 0x93, 0x02, 0xa5, 0x12, 0x87, 0x92, 0x54, 0xa1, 0x68, 0x05,
	0x95, 0x0b, 0x42, 0xe5, 0xe6, 0x78, 0x07, 0xc7, 0xcd, 0x7a, 0xc6, 0xd8, 0xb3, 0x5b, 0x2d, 0x55,
	0x40, 0x70, 0x42, 0x1c, 0xb8, 0x70, 0xa9, 0xe0, 0x08, 0x48, 0x48, 0x48, 0x20, 0x3e, 0x0b, 0x5f,
	0x01, 0x89, 0xaf, 0x81, 0x66, 0xec, 0x19, 0xdb, 0xd9, 0xed, 0xca, 0xc4, 0x95, 0x7a, 0x1b, 0xcf,
	0x78, 0x9e, 0xe7, 0xe7, 0xe7, 0xdd, 0xb0, 0x9a, 0xd2, 0x64, 0x4c, 0x13, 0xe7, 0x21, 0x4f, 0x0e,
	0x3f, 0x1d, 0xf2, 0x87, 0x66, 0x61, 0xc7, 0x09, 0x17, 0x1c, 0xb7, 0xf4, 0xb3, 0xb5, 0x12, 0x70,
	0x1e, 0x0c, 0xa9, 0xe3, 0xc5, 0xa1, 0xe3, 0x31, 0xc6, 0x85, 0x27, 0x42, 0xce, 0xd2, 0xec, 0x3d,
	0xeb, 0xfa, 0xe1, 0x8d, 0xd4, 0x0e, 0xb9, 0x3c, 0x8d, 0x3c, 0xff, 0x20, 0x64, 0x34, 0x99, 0x38,
	0xf1, 0x61, 0x20, 0x37, 0x52, 0x27, 0xa2, 0xc2, 0x73, 0xc6, 0x3d, 0x27, 0xa0, 0x8c, 0x26, 0x9e,
	0xa0, 0x83, 0xfc, 0xd6, 0x4e, 0x10, 0x8a, 0x83, 0xd1, 0xbe, 0xed, 0xf3, 0xc8, 0xf1, 0x92, 0x80,
	0xc7, 0x09, 0x7f, 0xa0, 0x16, 0xc5, 0x55, 0x03, 0x36, 0xee, 0x79, 0xc3, 0xf8, 0xc0, 0x9b, 0x16,
	0x42, 0x0a, 0xd5, 0x8e, 0xcf, 0x13, 0x3a, 0x43, 0x11, 0xf9, 0x63, 0x01, 0x5e, 0xfc, 0x38, 0x97,
	0xb4, 0x93, 0x50, 0x4f, 0x50, 0x97, 0x7e, 0x36, 0xa2, 0xa9, 0xc0, 0x2b, 0x70, 0x96, 0x79, 0x11,
	0x4d, 0x63, 0xcf, 0xa7, 0x1d, 0xb4, 0x86, 0xba, 0x67, 0xdd, 0x62, 0x03, 0xdf, 0x07, 0x63, 0x80,
	0xce, 0xc2, 0x1a, 0xea, 0x2e, 0x6d, 0xbd, 0x6d, 0x17, 0xcc, 0xb6, 0x66, 0x56, 0x0b, 0x3b, 0x3e,
	0x0c, 0x6c, 0xc9, 0x6c, 0x1b, 0x1b, 0x6a, 0x66, 0x5b, 0xeb, 0x76, 0x8d, 0x38, 0xbc, 0x0a, 0x10,
	0xb2, 0x54, 0x78, 0xcc, 0xa7, 0x77, 0x76, 0x3b, 0xa7, 0x94, 0xe6, 0xd2, 0x0e, 0x26, 0x70, 0x2e,
	0xf3, 0xcd, 0x6e, 0x32, 0x71, 0x47, 0xac, 0xb3, 0xb8, 0x86, 0xba, 0x2d, 0xb7, 0xb2, 0x87, 0xef,
	0xc3, 0xb2, 0xaf, 0xbe, 0xe6, 0x83, 0x58, 0x39, 0xa3, 0xf3, 0x3f, 0xc5, 0xb8, 0x6d, 0x67, 0x26,
	0xb1, 0xcb, 0xde, 0x28, 0xf0, 0xa4, 0x37, 0xec, 0x71, 0xcf, 0xde, 0x29, 0x5f, 0x75, 0xab, 0x92,
	0xc8, 0x63, 0x04, 0x58, 0x53, 0xef, 0x51, 0xa1, 0xcd, 0x85, 0x61, 0x51, 0x5a, 0x27, 0xb7, 0x94,
	0x5a, 0x57, 0x4d, 0xb8, 0x70, 0xdc, 0x84, 0x77, 0x01, 0x02, 0x2a, 0x34, 0xe0, 0x29, 0x05, 0xb8,
	0x59, 0x0f, 0x70, 0xcf, 0xdc, 0x73, 0x4b, 0x32, 0xc8, 0x37, 0x08, 0x9e, 0xd7, 0x68, 0xfd, 0x30,
	0x15, 0xf5, 0x5c, 0x79, 0x0f, 0x96, 0x86, 0x61, 0x6a, 0x40, 0x32, 0x6f, 0xf6, 0xea, 0x81, 0xf4,
	0x8b, 0x8b, 0x6e, 0x59, 0x0a, 0x09, 0xe0, 0x65, 0xe3, 0x5a, 0x9a, 0x8e, 0xf6, 0xa3, 0xb0, 0x81,
	0xa5, 0x2c, 0x68, 0x45, 0x34, 0xe2, 0xe1, 0xe7, 0x74, 0xa0, 0xec, 0xd4, 0x72, 0xcd, 0x33, 0x79,
	0x17, 0x5e, 0x28, 0x14, 0x89, 0x64, 0x72, 0x62, 0x2d, 0xe4, 0x4e, 0x91, 0x09, 0x12, 0x39, 0xa2,
	0x27, 0x17, 0xd5, 0x87, 0x8e, 0x16, 0xf5, 0x21, 0x4d, 0xa2, 0x90, 0x95, 0xf2, 0xea, 0xbf, 0x4b,
	0x7b, 0x0f, 0x5e, 0xd2, 0xd2, 0xee, 0x8d, 0xd2, 0x98, 0xb2, 0xc1, 0xc9, 0x65, 0xfd, 0x54, 0x8a,
	0xde, 0x3e, 0x0f, 0x4e, 0xee, 0x93, 0x0e, 0x9c, 0x89, 0xf9, 0xe0, 0x7d, 0x79, 0x29, 0x4b, 0x51,
	0xfd, 0x88, 0x6f, 0x01, 0x0c, 0x79, 0xa0, 0xc3, 0x69, 0x51, 0x85, 0xd3, 0xa5, 0x52, 0x38, 0xd9,
	0xb2, 0x16, 0xc9, 0xe0, 0xb9, 0xcb, 0x07, 0x7d, 0xf3, 0xa2, 0x5b, 0xba, 0x44, 0x7e, 0x46, 0x85,
	0x2f, 0x76, 0xe9, 0x90, 0x36, 0xb0, 0x9e, 0x2c, 0x05, 0x03, 0x25, 0xa2, 0x9a, 0x69, 0x35, 0x4b,
	0xc1, 0x6e, 0xf9, 0xaa, 0x5b, 0x95, 0x44, 0x3a, 0x85, 0x63, 0x34, 0x65, 0x1a, 0x73, 0x96, 0x52,
	0xf2, 0xad, 0xfc, 0x00, 0x4f, 0xf8, 0x07, 0xfa, 0x3c, 0x7d, 0x86, 0xb9, 0xf8, 0x65, 0xe1, 0x72,
	0xc5, 0x74, 0x7b, 0x4c, 0x99, 0xb2, 0xa4, 0x98, 0xc4, 0xc6, 0x92, 0x72, 0x8d, 0x3f, 0x82, 0xd3,
	0x7c, 0xff, 0x01, 0xf5, 0xc5, 0xd3, 0xa9, 0xe9, 0xb9, 0x30, 0x72, 0x19, 0x5a, 0x7d, 0x1e, 0xdc,
	0x66, 0x22, 0x99, 0xc8, 0xb8, 0xf1, 0x39, 0x13, 0x94, 0x89, 0x5c, 0xb3, 0x7e, 0x24, 0xdf, 0x55,
	0xaa, 0x17, 0x13, 0xcf, 0xba, 0x11, 0x6d, 0xfd, 0xd3, 0x86, 0xf3, 0x26, 0xf1, 0x68, 0x32, 0x0e,
	0x7d, 0x8a, 0x7f, 0x40, 0xd0, 0xce, 0xda, 0x83, 0x3e, 0xc1, 0x17, 0x0b, 0x69, 0x33, 0x3b, 0xa9,
	0xd5, 0x0c, 0x88, 0x74, 0xbf, 0xfe, 0xeb, 0xef, 0xef, 0x17, 0x08, 0xb9, 0xa0, 0x1a, 0xf9, 0xb8,
	0x67, 0x3a, 0x7f, 0xea, 0x3c, 0x32, 0x76, 0x38, 0xba, 0x89, 0xd6, 0xf1, 0x63, 0x04, 0x4b, 0x7b,
	0x54, 0x18, 0xb2, 0x95, 0x69, 0xb2, 0xa2, 0x63, 0x35, 0xc5, 0xba, 0xa6, 0xb0, 0x5e, 0xc5, 0x97,
	0xe7, 0x62, 0x65, 0xeb, 0x23, 0x89, 0xb6, 0x2c, 0x03, 0xd4, 0xe4, 0x03, 0xbe, 0x30, 0x0d, 0x57,
	0xea, 0x59, 0xd6, 0xad, 0x46, 0x74, 0x52, 0x12, 0xb9, 0xa2, 0x08, 0x2f, 0xe2, 0xf9, 0x86, 0xc3,
	0x5f, 0x40, 0xbb, 0x9a, 0xaa, 0x15, 0x8f, 0xce, 0x4a, 0x62, 0x6b, 0x86, 0x61, 0x8b, 0xcc, 0x22,
	0x57, 0x95, 0xde, 0x2b, 0xf8, 0x95, 0xe3, 0x7a, 0x37, 0xa8, 0x3c, 0xaf, 0x68, 0xdf, 0x44, 0xf8,
	0x2b, 0x04, 0xed, 0xac, 0x7c, 0xcc, 0x0b, 0xa9, 0x4a, 0x19, 0xb4, 0xd6, 0x9e, 0xfc, 0x42, 0x5e,
	0x81, 0x72, 0xf7, 0xac, 0xd7, 0x73, 0xcf, 0x2f, 0x08, 0x96, 0x55, 0xfb, 0x34, 0x08, 0xab, 0xd3,
	0x1a, 0xca, 0xfd, 0xb5, 0x69, 0xf4, 0xbc, 0xae, 0xf0, 0x1c, 0x6b, 0xbd, 0x0e, 0x9e, 0x93, 0x48,
	0xcd, 0x32, 0xc2, 0x7f, 0x47, 0xf0, 0x7f, 0x3d, 0x4f, 0x18, 0xd4, 0x4b, 0xb3, 0x50, 0x2b, 0x33,
	0x47, 0x53, 0xda, 0x1b, 0x8a, 0x76, 0xcb, 0xda, 0xa8, 0x49, 0x9b, 0x29, 0x97, 0xc0, 0xbf, 0x22,
	0x68, 0x67, 0xd3, 0xc4, 0x3c, 0xe7, 0x56, 0xe6, 0x8d, 0xa6, 0xb0, 0x6f, 0x28, 0xd8, 0x4d, 0xeb,
	0x6a, 0x6d, 0xd8, 0x88, 0x4a, 0xd4, 0xdf, 0x10, 0x9c, 0xcf, 0xe7, 0x0b, 0xc3, 0x3a, 0x23, 0xce,
	0xaa, 0x23, 0x48, 0x53, 0xd8, 0x37, 0x15, 0x6c, 0xcf, 0xba, 0x56, 0x0b, 0x36, 0xcd, 0x74, 0x4b,
	0xda, 0x3f, 0x11, 0x3c, 0x67, 0x66, 0x2b, 0xc3, 0x4b, 0xa6, 0x79, 0x8f, 0x0f, 0x60, 0x4d, 0x89,
	0xdf, 0x52, 0xc4, 0xdb, 0x96, 0x5d, 0x8b, 0x58, 0x68, 0xed, 0x92, 0xf9, 0x47, 0x04, 0xe7, 0x64,
	0x67, 0x33, 0xb8, 0x33, 0x6b, 0x20, 0x7b, 0x5a, 0x51, 0xbb, 0xa1, 0x48, 0x5f, 0x23, 0x64, 0x3e,
	0xe9, 0x30, 0x64, 0x2a, 0x54, 0x27, 0x70, 0x26, 0x9b, 0xc8, 0xd2, 0x59, 0x8d, 0xa3, 0x18, 0x16,
	0x2d, 0x5c, 0x9c, 0xea, 0xb6, 0x4e, 0x6e, 0x2a, 0x5d, 0xd7, 0xf1, 0x56, 0x2d, 0xab, 0x3c, 0xca,
	0x67, 0xc5, 0x23, 0x67, 0xc8, 0x83, 0x4d, 0xf4, 0xce, 0xfa, 0x27, 0xdd, 0x27, 0xfe, 0xf0, 0x1e,
	0xfb, 0x0f, 0xdf, 0x3f, 0xad, 0x7e, 0x5c, 0xb7, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x16, 0x8e,
	0x60, 0xc4, 0xa1, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowServiceClient is the client API for WorkflowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowServiceClient interface {
	CreateWorkflow(ctx context.Context, in *WorkflowCreateRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	GetWorkflow(ctx context.Context, in *WorkflowGetRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	ListWorkflows(ctx context.Context, in *WorkflowListRequest, opts ...grpc.CallOption) (*v1alpha1.WorkflowList, error)
	WatchWorkflows(ctx context.Context, in *WatchWorkflowsRequest, opts ...grpc.CallOption) (WorkflowService_WatchWorkflowsClient, error)
	DeleteWorkflow(ctx context.Context, in *WorkflowDeleteRequest, opts ...grpc.CallOption) (*WorkflowDeleteResponse, error)
	RetryWorkflow(ctx context.Context, in *WorkflowRetryRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	ResubmitWorkflow(ctx context.Context, in *WorkflowResubmitRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	ResumeWorkflow(ctx context.Context, in *WorkflowResumeRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	SuspendWorkflow(ctx context.Context, in *WorkflowSuspendRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	TerminateWorkflow(ctx context.Context, in *WorkflowTerminateRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	LintWorkflow(ctx context.Context, in *WorkflowLintRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error)
	PodLogs(ctx context.Context, in *WorkflowLogRequest, opts ...grpc.CallOption) (WorkflowService_PodLogsClient, error)
}

type workflowServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowServiceClient(cc *grpc.ClientConn) WorkflowServiceClient {
	return &workflowServiceClient{cc}
}

func (c *workflowServiceClient) CreateWorkflow(ctx context.Context, in *WorkflowCreateRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/CreateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflow(ctx context.Context, in *WorkflowGetRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/GetWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ListWorkflows(ctx context.Context, in *WorkflowListRequest, opts ...grpc.CallOption) (*v1alpha1.WorkflowList, error) {
	out := new(v1alpha1.WorkflowList)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/ListWorkflows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) WatchWorkflows(ctx context.Context, in *WatchWorkflowsRequest, opts ...grpc.CallOption) (WorkflowService_WatchWorkflowsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowService_serviceDesc.Streams[0], "/workflow.WorkflowService/WatchWorkflows", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowServiceWatchWorkflowsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowService_WatchWorkflowsClient interface {
	Recv() (*WorkflowWatchEvent, error)
	grpc.ClientStream
}

type workflowServiceWatchWorkflowsClient struct {
	grpc.ClientStream
}

func (x *workflowServiceWatchWorkflowsClient) Recv() (*WorkflowWatchEvent, error) {
	m := new(WorkflowWatchEvent)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *workflowServiceClient) DeleteWorkflow(ctx context.Context, in *WorkflowDeleteRequest, opts ...grpc.CallOption) (*WorkflowDeleteResponse, error) {
	out := new(WorkflowDeleteResponse)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/DeleteWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RetryWorkflow(ctx context.Context, in *WorkflowRetryRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/RetryWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ResubmitWorkflow(ctx context.Context, in *WorkflowResubmitRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/ResubmitWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ResumeWorkflow(ctx context.Context, in *WorkflowResumeRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/ResumeWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) SuspendWorkflow(ctx context.Context, in *WorkflowSuspendRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/SuspendWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) TerminateWorkflow(ctx context.Context, in *WorkflowTerminateRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/TerminateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) LintWorkflow(ctx context.Context, in *WorkflowLintRequest, opts ...grpc.CallOption) (*v1alpha1.Workflow, error) {
	out := new(v1alpha1.Workflow)
	err := c.cc.Invoke(ctx, "/workflow.WorkflowService/LintWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) PodLogs(ctx context.Context, in *WorkflowLogRequest, opts ...grpc.CallOption) (WorkflowService_PodLogsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WorkflowService_serviceDesc.Streams[1], "/workflow.WorkflowService/PodLogs", opts...)
	if err != nil {
		return nil, err
	}
	x := &workflowServicePodLogsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WorkflowService_PodLogsClient interface {
	Recv() (*LogEntry, error)
	grpc.ClientStream
}

type workflowServicePodLogsClient struct {
	grpc.ClientStream
}

func (x *workflowServicePodLogsClient) Recv() (*LogEntry, error) {
	m := new(LogEntry)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WorkflowServiceServer is the server API for WorkflowService service.
type WorkflowServiceServer interface {
	CreateWorkflow(context.Context, *WorkflowCreateRequest) (*v1alpha1.Workflow, error)
	GetWorkflow(context.Context, *WorkflowGetRequest) (*v1alpha1.Workflow, error)
	ListWorkflows(context.Context, *WorkflowListRequest) (*v1alpha1.WorkflowList, error)
	WatchWorkflows(*WatchWorkflowsRequest, WorkflowService_WatchWorkflowsServer) error
	DeleteWorkflow(context.Context, *WorkflowDeleteRequest) (*WorkflowDeleteResponse, error)
	RetryWorkflow(context.Context, *WorkflowRetryRequest) (*v1alpha1.Workflow, error)
	ResubmitWorkflow(context.Context, *WorkflowResubmitRequest) (*v1alpha1.Workflow, error)
	ResumeWorkflow(context.Context, *WorkflowResumeRequest) (*v1alpha1.Workflow, error)
	SuspendWorkflow(context.Context, *WorkflowSuspendRequest) (*v1alpha1.Workflow, error)
	TerminateWorkflow(context.Context, *WorkflowTerminateRequest) (*v1alpha1.Workflow, error)
	LintWorkflow(context.Context, *WorkflowLintRequest) (*v1alpha1.Workflow, error)
	PodLogs(*WorkflowLogRequest, WorkflowService_PodLogsServer) error
}

// UnimplementedWorkflowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkflowServiceServer struct {
}

func (*UnimplementedWorkflowServiceServer) CreateWorkflow(ctx context.Context, req *WorkflowCreateRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflow(ctx context.Context, req *WorkflowGetRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) ListWorkflows(ctx context.Context, req *WorkflowListRequest) (*v1alpha1.WorkflowList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWorkflows not implemented")
}
func (*UnimplementedWorkflowServiceServer) WatchWorkflows(req *WatchWorkflowsRequest, srv WorkflowService_WatchWorkflowsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchWorkflows not implemented")
}
func (*UnimplementedWorkflowServiceServer) DeleteWorkflow(ctx context.Context, req *WorkflowDeleteRequest) (*WorkflowDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) RetryWorkflow(ctx context.Context, req *WorkflowRetryRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetryWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) ResubmitWorkflow(ctx context.Context, req *WorkflowResubmitRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResubmitWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) ResumeWorkflow(ctx context.Context, req *WorkflowResumeRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) SuspendWorkflow(ctx context.Context, req *WorkflowSuspendRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuspendWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) TerminateWorkflow(ctx context.Context, req *WorkflowTerminateRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) LintWorkflow(ctx context.Context, req *WorkflowLintRequest) (*v1alpha1.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LintWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) PodLogs(req *WorkflowLogRequest, srv WorkflowService_PodLogsServer) error {
	return status.Errorf(codes.Unimplemented, "method PodLogs not implemented")
}

func RegisterWorkflowServiceServer(s *grpc.Server, srv WorkflowServiceServer) {
	s.RegisterService(&_WorkflowService_serviceDesc, srv)
}

func _WorkflowService_CreateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/CreateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).CreateWorkflow(ctx, req.(*WorkflowCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/GetWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflow(ctx, req.(*WorkflowGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ListWorkflows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ListWorkflows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/ListWorkflows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ListWorkflows(ctx, req.(*WorkflowListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_WatchWorkflows_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchWorkflowsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowServiceServer).WatchWorkflows(m, &workflowServiceWatchWorkflowsServer{stream})
}

type WorkflowService_WatchWorkflowsServer interface {
	Send(*WorkflowWatchEvent) error
	grpc.ServerStream
}

type workflowServiceWatchWorkflowsServer struct {
	grpc.ServerStream
}

func (x *workflowServiceWatchWorkflowsServer) Send(m *WorkflowWatchEvent) error {
	return x.ServerStream.SendMsg(m)
}

func _WorkflowService_DeleteWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).DeleteWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/DeleteWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).DeleteWorkflow(ctx, req.(*WorkflowDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RetryWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowRetryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RetryWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/RetryWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RetryWorkflow(ctx, req.(*WorkflowRetryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ResubmitWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowResubmitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ResubmitWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/ResubmitWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ResubmitWorkflow(ctx, req.(*WorkflowResubmitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ResumeWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowResumeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ResumeWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/ResumeWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ResumeWorkflow(ctx, req.(*WorkflowResumeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_SuspendWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowSuspendRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).SuspendWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/SuspendWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).SuspendWorkflow(ctx, req.(*WorkflowSuspendRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_TerminateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowTerminateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).TerminateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/TerminateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).TerminateWorkflow(ctx, req.(*WorkflowTerminateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_LintWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowLintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).LintWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/workflow.WorkflowService/LintWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).LintWorkflow(ctx, req.(*WorkflowLintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_PodLogs_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WorkflowLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WorkflowServiceServer).PodLogs(m, &workflowServicePodLogsServer{stream})
}

type WorkflowService_PodLogsServer interface {
	Send(*LogEntry) error
	grpc.ServerStream
}

type workflowServicePodLogsServer struct {
	grpc.ServerStream
}

func (x *workflowServicePodLogsServer) Send(m *LogEntry) error {
	return x.ServerStream.SendMsg(m)
}

var _WorkflowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "workflow.WorkflowService",
	HandlerType: (*WorkflowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWorkflow",
			Handler:    _WorkflowService_CreateWorkflow_Handler,
		},
		{
			MethodName: "GetWorkflow",
			Handler:    _WorkflowService_GetWorkflow_Handler,
		},
		{
			MethodName: "ListWorkflows",
			Handler:    _WorkflowService_ListWorkflows_Handler,
		},
		{
			MethodName: "DeleteWorkflow",
			Handler:    _WorkflowService_DeleteWorkflow_Handler,
		},
		{
			MethodName: "RetryWorkflow",
			Handler:    _WorkflowService_RetryWorkflow_Handler,
		},
		{
			MethodName: "ResubmitWorkflow",
			Handler:    _WorkflowService_ResubmitWorkflow_Handler,
		},
		{
			MethodName: "ResumeWorkflow",
			Handler:    _WorkflowService_ResumeWorkflow_Handler,
		},
		{
			MethodName: "SuspendWorkflow",
			Handler:    _WorkflowService_SuspendWorkflow_Handler,
		},
		{
			MethodName: "TerminateWorkflow",
			Handler:    _WorkflowService_TerminateWorkflow_Handler,
		},
		{
			MethodName: "LintWorkflow",
			Handler:    _WorkflowService_LintWorkflow_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchWorkflows",
			Handler:       _WorkflowService_WatchWorkflows_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PodLogs",
			Handler:       _WorkflowService_PodLogs_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server/workflow/workflow.proto",
}
