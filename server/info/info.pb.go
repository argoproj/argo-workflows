// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: server/info/info.proto

package info

import (
	context "context"
	fmt "fmt"
	_ "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "k8s.io/api/core/v1"
	_ "k8s.io/apimachinery/pkg/apis/meta/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc6e4252b6544a4e, []int{0}
}
func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

type InfoResponse struct {
	ManagedNamespace     string   `protobuf:"bytes,1,opt,name=managedNamespace,proto3" json:"managedNamespace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoResponse) Reset()         { *m = InfoResponse{} }
func (m *InfoResponse) String() string { return proto.CompactTextString(m) }
func (*InfoResponse) ProtoMessage()    {}
func (*InfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bc6e4252b6544a4e, []int{1}
}
func (m *InfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoResponse.Unmarshal(m, b)
}
func (m *InfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoResponse.Marshal(b, m, deterministic)
}
func (m *InfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoResponse.Merge(m, src)
}
func (m *InfoResponse) XXX_Size() int {
	return xxx_messageInfo_InfoResponse.Size(m)
}
func (m *InfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InfoResponse proto.InternalMessageInfo

func (m *InfoResponse) GetManagedNamespace() string {
	if m != nil {
		return m.ManagedNamespace
	}
	return ""
}

func init() {
	proto.RegisterType((*GetInfoRequest)(nil), "info.GetInfoRequest")
	proto.RegisterType((*InfoResponse)(nil), "info.InfoResponse")
}

func init() { proto.RegisterFile("server/info/info.proto", fileDescriptor_bc6e4252b6544a4e) }

var fileDescriptor_bc6e4252b6544a4e = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xa9, 0x88, 0x62, 0x2c, 0xa5, 0x84, 0x22, 0xb2, 0x78, 0x90, 0x45, 0x44, 0x3c, 0x6c,
	0x58, 0xf5, 0x20, 0x1e, 0xf5, 0x20, 0xbd, 0x78, 0xa8, 0x17, 0xf1, 0x36, 0xdd, 0xce, 0x66, 0xe3,
	0xee, 0x66, 0x62, 0x92, 0x6e, 0xf1, 0xea, 0x2b, 0xf8, 0x68, 0xbe, 0x82, 0x0f, 0x22, 0x9b, 0x2d,
	0xb4, 0x52, 0x7b, 0x09, 0x93, 0x3f, 0xf9, 0xe7, 0x4b, 0xfe, 0x61, 0x47, 0x0e, 0x6d, 0x83, 0x56,
	0x28, 0x9d, 0x53, 0x58, 0x12, 0x63, 0xc9, 0x13, 0xdf, 0x6d, 0xeb, 0xe8, 0x44, 0x12, 0xc9, 0x0a,
	0x05, 0x18, 0x25, 0x40, 0x6b, 0xf2, 0xe0, 0x15, 0x69, 0xd7, 0xdd, 0x89, 0x6e, 0xca, 0x5b, 0x97,
	0x28, 0x6a, 0x4f, 0x6b, 0xc8, 0x0a, 0xa5, 0xd1, 0x7e, 0x08, 0x53, 0xca, 0x56, 0x70, 0xa2, 0x46,
	0x0f, 0xa2, 0x49, 0x85, 0x44, 0x8d, 0x16, 0x3c, 0xce, 0x96, 0xae, 0x07, 0xa9, 0x7c, 0x31, 0x9f,
	0x26, 0x19, 0xd5, 0x02, 0xac, 0x24, 0x63, 0xe9, 0x2d, 0x14, 0x2b, 0xeb, 0x82, 0x6c, 0x99, 0x57,
	0xb4, 0x10, 0x4d, 0x0a, 0x95, 0x29, 0x60, 0xb3, 0x49, 0xbc, 0x42, 0x8b, 0x8c, 0x2c, 0xfe, 0x03,
	0x8a, 0x87, 0x6c, 0xf0, 0x88, 0x7e, 0xac, 0x73, 0x9a, 0xe0, 0xfb, 0x1c, 0x9d, 0x8f, 0xef, 0x58,
	0xbf, 0xdb, 0x3a, 0x43, 0xda, 0x21, 0xbf, 0x64, 0xc3, 0x1a, 0x34, 0x48, 0x9c, 0x3d, 0x41, 0x8d,
	0xce, 0x40, 0x86, 0xc7, 0xbd, 0xd3, 0xde, 0xc5, 0xc1, 0x64, 0x43, 0xbf, 0x7a, 0x61, 0x87, 0xad,
	0xf7, 0x19, 0x6d, 0xa3, 0x32, 0xe4, 0x63, 0xb6, 0xbf, 0x6c, 0xce, 0x47, 0x49, 0xc8, 0xed, 0x2f,
	0x2b, 0xe2, 0x9d, 0xba, 0xce, 0x8b, 0x47, 0x9f, 0xdf, 0x3f, 0x5f, 0x3b, 0x03, 0xde, 0x0f, 0xef,
	0x6e, 0xd2, 0x10, 0xf8, 0xfd, 0xf9, 0xeb, 0xd9, 0xd6, 0x48, 0xd6, 0xa6, 0x33, 0xdd, 0x0b, 0xdf,
	0xba, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc5, 0x64, 0x4a, 0x59, 0xb3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InfoServiceClient is the client API for InfoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InfoServiceClient interface {
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*InfoResponse, error)
}

type infoServiceClient struct {
	cc *grpc.ClientConn
}

func NewInfoServiceClient(cc *grpc.ClientConn) InfoServiceClient {
	return &infoServiceClient{cc}
}

func (c *infoServiceClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*InfoResponse, error) {
	out := new(InfoResponse)
	err := c.cc.Invoke(ctx, "/info.InfoService/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InfoServiceServer is the server API for InfoService service.
type InfoServiceServer interface {
	GetInfo(context.Context, *GetInfoRequest) (*InfoResponse, error)
}

// UnimplementedInfoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedInfoServiceServer struct {
}

func (*UnimplementedInfoServiceServer) GetInfo(ctx context.Context, req *GetInfoRequest) (*InfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterInfoServiceServer(s *grpc.Server, srv InfoServiceServer) {
	s.RegisterService(&_InfoService_serviceDesc, srv)
}

func _InfoService_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InfoServiceServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/info.InfoService/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InfoServiceServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _InfoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "info.InfoService",
	HandlerType: (*InfoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _InfoService_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/info/info.proto",
}
