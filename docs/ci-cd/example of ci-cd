ARGO is a continuous integration and delivery tool for Kubernetes. Major purpose of using ARGO is that it maintains the desired state of the application in Kubernetes manifests in an automated manner. ARGO uses GITOPS pattern mechanism for proper versioning of the application states, version, upgrades, deployments and rollbacks. ARGO CD is implemented as kubernetes controller
which continuously monitors running applications and compares the current, live state against the desired target state

CI in ARGO: Lets take a simple example in which developer commits the code, Build and Pushes to repository. ARGO takes care of CI process using below process:
•   Use webhook to start build (i.e. WorkflowEventBinding).
•   Build the CLI.
•   Updating tags.
•   Build images using Buildkit (see template).
•   Run test and collect test report.
•   Run coverage and collect report.
CD in ARGO: ARGO follows pattern of GITOPS for Kubernetes deployments keeping GIT as the only source of truth.
•   Tag and push tag.
•   Keeps a regular check on git commits, whenever ARGO finds a discrepancy between current behaviour and git commit, immediately synchronize the application and deploy to the cluster which is specified with config management
•    Automated deployment of applications to specified target environments
•   Support for multiple config management/templating tools (Kustomize, Helm, Jsonnet, plain-YAML)
•   Ability to manage and deploy to multiple clusters
•   SSO Integration
•   Multi-tenancy and RBAC policies for authorization
•   Rollback/Roll-anywhere to any application configuration committed in Git repository
•   Health status analysis of application resources
•   Automated configuration drift detection and visualization
•   Automated or manual syncing of applications to its desired state
•   Web UI which provides real-time view of application activity
•   CLI for automation and CI integration
•   Webhook integration (GitHub, BitBucket, GitLab)
•   Access tokens for automation
•   PreSync, Sync, PostSync hooks to support complex application rollouts (e.g.blue/green & canary upgrades)
•   Audit trails for application events and API calls
•   Rollouts, Workflows and Events
•   Parameter overrides for overriding helm parameters in Git