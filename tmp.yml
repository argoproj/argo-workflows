apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: retry-barebones
spec:
  entrypoint: main
  templates:
    - name: main
      inputs:
        parameters:
          - name: numbers
            value: |
              ["one", "two", "three"]
      dag:
        tasks:
          - name: whalesay-before-process
            template: whalesay
            arguments:
              parameters:
                - name: message
                  value: "HELLO ALL"

          - name: process
            template: process
            withParam: "{{inputs.parameters.numbers}}"
            dependencies:
              - whalesay-before-process
            arguments:
              parameters:
                - name: message
                  value: "{{item}}"

          - name: whalesay-after-process
            template: whalesay
            dependencies:
              - process
            arguments:
              parameters:
                - name: message
                  value: "Root: {{tasks.process.outputs.parameters.output}}"
                  # On retry there are extra values in the output, duplicated multiple times based on retry count

    - name: process
      # this fixes the behaviour
      inputs:
        parameters:
          - name: message
      outputs:
        parameters:
          - name: output
            valueFrom:
              parameter: "{{tasks.step2.outputs.parameters.output}}"
      dag:
        tasks:
          - name: step0
            template: whalesay
            arguments:
              parameters:
                - name: message
                  value: "{{inputs.parameters.message}}"

          - name: step1
            template: whalesay
            dependencies:
              - step0
            arguments:
              parameters:
                - name: message
                  value: "{{inputs.parameters.message}}"
                - name: always-pass
                  value: "false"

          - name: step2
            template: whalesay
            dependencies:
              - step1
            arguments:
              parameters:
                - name: message
                  value: "{{tasks.step1.outputs.parameters.output}}"

    - name: whalesay
      inputs:
        parameters:
          - name: message
          - name: always-pass
            value: "true"
      outputs:
        parameters:
          - name: output
            valueFrom:
              path: /tmp/output.txt
      script:
        command: [ python ]
        image: python:alpine
        imagePullPolicy: IfNotPresent
        source: |
          import random
          import os
          msg = '{{inputs.parameters.message}}'
          print(msg)

          if '{{inputs.parameters.always-pass}}' == 'true':
            a = -1
          else:
            a = random.randint(1,10)

          if a > 0 and a <= 5:
            raise Exception(msg)

          with open('/tmp/output.txt', 'w') as o:
            o.write('random' + msg + ' : ' +str(a))