tasks:
  build:
    dependencies: build-controller build-argo
  build-argo:
    command: make ./dist/argo
    dependencies: go-deps
    env:
      STATIC_FILES: "false"
    mutex: build
  build-controller:
    command: make ./dist/workflow-controller
    dependencies: go-deps
    mutex: build
  controller:
    command: ./dist/workflow-controller
    dependencies: install build-controller port-forward
    env:
      ALWAYS_OFFLOAD_NODE_STATUS: "false"
      ARCHIVED_WORKFLOW_GC_PERIOD: 30s
      ARGO_EXECUTOR_PLUGINS: "false"
      ARGO_LOGLEVEL: info
      ARGO_MANAGED_NAMESPACE: argo
      ARGO_NAMESPACE: argo
      ARGO_NAMESPACED: "true"
      ARGO_PROGRESS_PATCH_TICK_DURATION: 7s
      ARGO_REMOVE_PVC_PROTECTION_FINALIZER: "true"
      DEFAULT_REQUEUE_TIME: 1s
      LEADER_ELECTION_IDENTITY: local
      OFFLOAD_NODE_STATUS_TTL: 30s
      UPPERIO_DB_DEBUG: "1"
      WORKFLOW_GC_PERIOD: 30s
    ports: "9090"
  example:
    command: kubectl create -f examples/hello-world.yaml
    dependencies: install
    mutex: docker
  executor:
    command: make argoexec-image
    mutex: docker
  go-deps:
    command: go mod download
  install:
    command: sh -c "make install PROFILE=$PROFILE"
    dependencies: go-deps
    env:
      PROFILE: minimal
    mutex: docker
  port-forward:
    command: ./hack/port-forward.sh
    dependencies: install
    ports: "9000"
  pre-up:
    dependencies: build install executor example
  server:
    command: ./dist/argo server
    dependencies: build-argo port-forward
    env:
      ARGO_AUTH_MODE: hybrid
      ARGO_LOGLEVEL: info
      ARGO_MANAGED_NAMESPACE: argo
      ARGO_NAMESPACE: argo
      ARGO_NAMESPACED: "true"
      ARGO_SECURE: "false"
      ARGO_X_FRAME_OPTIONS: SAMEORIGIN
      UPPERIO_DB_DEBUG: "1"
    ports: "2746"
  ui:
    command: yarn start
    dependencies: ui-deps
    ports: "8080"
    workingDir: ui
  ui-deps:
    command: yarn install
    workingDir: ui
  up:
    command: sleep 999999
    dependencies: pre-up controller server ui
