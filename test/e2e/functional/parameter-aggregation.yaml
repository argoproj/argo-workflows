# Example workflow to demonstrate parameter aggregation.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: parameter-aggregation-
spec:
  entrypoint: parameter-aggregation
  volumes:
    - name: workdir
      emptyDir: {}
  templates:
  - name: parameter-aggregation
    steps:
    # First loop through a list of numbers and determine if the number is odd or even. This is
    # captured in output parameter 'evenness'. (e.g. {"num": "4", "evenness": "even"})
    - - name: odd-or-even
        template: odd-or-even
        arguments:
          parameters:
          - name: num
            value: "{{item}}"
        withItems: [1, 2, 3, 4]
    # Next, for each even number, divide it by two (using a script template).
    # Skip odd numbers using a `when` clause.
    - - name: divide-by-2
        template: divide-by-2
        arguments:
          parameters:
          - name: num
            value: "{{item.num}}"
        withParam: "{{steps.odd-or-even.outputs.parameters}}"
        when: "{{item.evenness}} == even"
    # Finally, print all numbers processed in the previous step
    - - name: print
        template: whalesay
        arguments:
          parameters:
          - name: message
            value: "{{item}}"
        withParam: "{{steps.divide-by-2.outputs.result}}"

  # odd-or-even accepts a number and returns whether or not that number is odd or even
  - name: odd-or-even
    inputs:
      parameters:
      - name: num
    container:
      image: alpine:latest
      command: [sh, -xc]
      args:
      - |
        sleep 1 &&
        echo {{inputs.parameters.num}} > /mnt/vol/num &&
        if [ $(({{inputs.parameters.num}}%2)) -eq 0 ]; then
          echo "even" > /mnt/vol/even;
        else
          echo "odd" > /mnt/vol/even;
        fi
      volumeMounts:
        - name: workdir
          mountPath: /mnt/vol
    outputs:
      parameters:
      - name: num
        valueFrom:
          path: /mnt/vol/num
      - name: evenness
        valueFrom:
          path: /mnt/vol/even

  # divide-by-2 divides a number in half
  - name: divide-by-2
    inputs:
      parameters:
      - name: num
    script:
      image: alpine:latest
      command: [sh, -x]
      source: |
        #!/bin/sh
        echo $(({{inputs.parameters.num}}/2))

  # whalesay prints a number using whalesay
  - name: whalesay
    inputs:
      parameters:
      - name: message
    container:
      image: docker/whalesay:latest
      command: [cowsay]
      args: ["{{inputs.parameters.message}}"]
