apiVersion: v1
kind: ConfigMap
metadata:
  name: workflow-controller-configmap
data:
  containerRuntimeExecutor: pns
  # Soft-limit for the maximum number of pods in each phase.
  # The actual enforced limit maybe actually be a bit lower or higher:
  # * Under high-load, the pod informer that we rely on for pod phase data will get out of date.
  # * If two workflows reconcile at the same time, this can result in excess pods being created.
  # When happens, future scheduling will be limited, until the number of pods drops below the limit.
  # The start-up cost of a pod is higher than running costs. So you should typically be looking to set
  # the pending limit to control this, and it should probably be a lower than the running limit.
  resourceLimits: |
    Pending: 3
    Running: 10
  # Soft rate-limit for creation of pods.
  # When pod creation is throttled by this, the workflow will get re-queued.
  # The workflow may not be reconciled for up to 10s (by default), therefore no more pods may be created for 10s.
  # In this example, we throttle to 10 creates per second.
  resourceRateLimit: |
    limit: 10
    burst: 1
  workflowDefaults: |
    spec:
      activeDeadlineSeconds: 300
      ttlStrategy:
        secondsAfterCompletion: 600
  executor: |
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 10m
        memory: 64Mi
      limits:
        cpu: 500m
        memory: 128Mi