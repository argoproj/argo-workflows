name: Regression report
description: File a regression report
labels: [ "bug", "regression", "triage" ]
body:
  - type: textarea
    id: what-happened
    attributes:
      label: What happened?
      description: Also tell us, what did you expect to happen?
      placeholder: Tell us what you see!
    validations:
      required: true
  - type: textarea
    id: version
    attributes:
      label: Version
      description: What version are you running?
    validations:
      required: true
  - type: textarea
    id: working-version
    attributes:
      label: Version
      description: What version was it working in?
    validations:
      required: true
  - type: textarea
    id: kubernetes-provider
    attributes:
      label: Provider
      description: What Kubernetes provider are you using?
    validations:
      required: true
  - type: dropdown
    id: executor
    attributes:
      label: What executor are you using?
      multiple: true
      options:
        - Docker (deprecated)
        - K8SAPI
        - Kubelet
        - PNS
        - Emissary
    validations:
      required: true
  - type: textarea
    id: logs
    attributes:
      label: Workflow
      description: Either a workflow that reproduces the bug, or paste you whole workflow YAML, including status.
      render: yaml
      value: |
        # Either a workflow that reproduces the bug, or paste you whole workflow YAML, including status, something like:
        kubectl get wf -o yaml ${workflow}
    validations:
      required: true
  - type: textarea
    id: logs
    attributes:
      label: Relevant log output
      description: Please copy and paste any relevant log output. This will be automatically formatted into code, so no need for backticks.
      render: shell
      value: |
        # Logs from the workflow controller:
        kubectl logs -n argo deploy/workflow-controller | grep ${workflow}

        # The workflow's pods that are problematic:
        kubectl get pod -o yaml -l workflows.argoproj.io/workflow=${workflow},workflow.argoproj.io/phase!=Succeeded

        # Logs from in your workflow's wait container, something like:
        kubectl logs -c wait -l workflows.argoproj.io/workflow=${workflow},workflow.argoproj.io/phase!=Succeeded
