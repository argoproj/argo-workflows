name: test
on: 
  push:
    branches:
      - 'master' 
  pull_request:
    branches:
      - 'master'

jobs:
  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore go build cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.12'
      - name: Add bins to PATH
        run: |
          echo "::add-path::/home/runner/go/bin"
          echo "::add-path::/usr/local/bin"
      - name: install-kustomize
        run: |
            cd /usr/local/bin && curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | sudo bash
            kustomize version
      - name: Install and start K3S v1.0.1
        run: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.0.1 INSTALL_K3S_EXEC=--docker K3S_KUBECONFIG_MODE=644 sh -
      - name: Pre-pull images
        env:
          GOPATH: /home/runner/go
        run: make pull-build-images test-images &
      - name: Download all Go modules
        run: |
          go mod download
      - name: Create Kubeconfig
        run: |
          mkdir -p ~/.kube
          until stat /etc/rancher/k3s/k3s.yaml ; do sleep 10s ; done
          cat /etc/rancher/k3s/k3s.yaml | sed "s/127.0.0.1/$(hostname)/g" > ~/.kube/config
          echo "- name: fake_token_user" >> ~/.kube/config
          echo "  user:" >> ~/.kube/config
          echo "    token: xxxxxx" >> ~/.kube/config
      - name: Start Argo
        env:
          GOPATH: /home/runner/go
        run: |
          echo '127.0.0.1 dex'      | sudo tee -a /etc/hosts
          echo '127.0.0.1 minio'    | sudo tee -a /etc/hosts
          echo '127.0.0.1 postgres' | sudo tee -a /etc/hosts
          echo '127.0.0.1 mysql'    | sudo tee -a /etc/hosts
          mkdir dist
          KUBECONFIG=~/.kube/config make start PROFILE=$PROFILE E2E_EXECUTOR=docker DEV_IMAGE=true &
      - name: Wait for Argo Server to be ready
        env:
          GOPATH: /home/runner/go
        run: make wait
      - name: Run tests
        env:
          GOPATH: /home/runner/go
        run: |
          trap 'make test-results/junit.xml' EXIT
          make smoke test-e2e

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore go build cache
        uses: actions/cache@v1
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Setup Golang
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.12'
      - name: Add bins to PATH
        run: |
          echo "::add-path::/home/runner/go/bin"
          echo "::add-path::/usr/local/bin"
      - name: Download all Go modules
        run: |
          go mod download
      - name: install-kustomize
        run: |
            cd /usr/local/bin && curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | sudo bash
            kustomize version
      - name: Run tests
        env:
          GOPATH: /home/runner/go
        run: |
          trap 'make test-results/junit.xml' EXIT
          make test
