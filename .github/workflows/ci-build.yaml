name: CI
on:
  push:
    branches:
      - "master"
      - "release-*"
      - "!release-2.8"
  pull_request:
    branches:
      - "master"

jobs:

  tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.15.7"
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-v2-${{ hashFiles('**/go.mod') }}
      - run: go mod download -x
      - run: make server/static/files.go STATIC_FILES=false
      - run: go build -v ./...
      - run: make test STATIC_FILES=false

  codegen:
    name: Codegen
    runs-on: ubuntu-20.04
    needs: [ tests ]
    timeout-minutes: 10
    env:
      GOPATH: /home/runner/go
      PROTOC_ZIP: protoc-3.11.1-linux-x86_64.zip
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "1.15.7"
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/go-build
          key: GOCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/pkg/mod
          key: GOMODCACHE-v2-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: /home/runner/go/bin
          key: go-bin-v1-${{ hashFiles('**/go.mod') }}
      - uses: actions/cache@v2
        with:
          path: protoc-3.11.1-linux-x86_64.zip
          key: protoc-3.11.1-linux-x86_64.zip
      - name: Install protoc
        run: |
          set -eux -o pipefail
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.11.1/$PROTOC_ZIP
          sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
          sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
          sudo chmod +x /usr/local/bin/protoc
          sudo find /usr/local/include -type f | xargs sudo chmod a+r
          sudo find /usr/local/include -type d | xargs sudo chmod a+rx
          ls /usr/local/include/google/protobuf/
      - run: git fetch --tags
      - name: Create links
        run: |
          mkdir -p /home/runner/go/src/github.com/argoproj
          ln -s "$PWD" /home/runner/go/src/github.com/argoproj/argo-workflows
      - run: make codegen -B STATIC_FILES=false
      - run: make lint STATIC_FILES=false
      - run: make validate-examples STATIC_FILES=false
      - run: git diff --exit-code
