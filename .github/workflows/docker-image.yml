name: Docker Image CI

on:
  push:
    tags:
      - v*
    branches:
      - master

defaults:
  run:
    shell: bash

jobs:
  build-linux:
    name: Build & Push Linux Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      - name: Build & Push Linux Docker Images
        env:
          DOCKERIO_ORG: ${{ secrets.DOCKERIO_ORG }}
        # https://github.com/marketplace/actions/docker-buildx#build-and-push-to-dockerhub
        run: |
          /usr/bin/docker pull -q multiarch/qemu-user-static:latest
          /usr/bin/docker run --rm --privileged multiarch/qemu-user-static:latest --reset -p yes --credential yes
          /usr/bin/docker buildx create --name builder --driver docker-container --use
          /usr/bin/docker buildx inspect --bootstrap

          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi
          targets="workflow-controller argoexec argocli"
          for target in $targets; do
            docker buildx build \
              --output "type=image,push=true" \
              --platform="linux/amd64,linux/arm64" \
              --target $target \
              --tag "${DOCKERIO_ORG}/${target}:${tag}-linux" \
              --tag "${DOCKERIO_ORG}/${target}:${tag}" .
          done
          /usr/bin/docker buildx rm builder

  build-windows:
    name: Build & Push Windows Docker Images
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      - name: Build & Push Windows Docker Images
        env:
          DOCKERIO_ORG: ${{ secrets.DOCKERIO_ORG }}
        run: |
          docker_org=$DOCKERIO_ORG

          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi

          targets="argoexec"
          for target in $targets; do
            image_name="${docker_org}/${target}:${tag}-windows"
            docker build --target $target -t $image_name -f Dockerfile.windows .
            docker push $image_name
          done

  push-images:
    name: Push Multiarch Image
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        uses: Azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKERIO_USERNAME }}
          password: ${{ secrets.DOCKERIO_PASSWORD }}
      - name: Push Multiarch Image
        env:
          DOCKERIO_ORG: ${{ secrets.DOCKERIO_ORG }}
        run: |
          echo $(jq -c '. + { "experimental": "enabled" }' ${DOCKER_CONFIG}/config.json) > ${DOCKER_CONFIG}/config.json

          docker_org=$DOCKERIO_ORG

          tag=$(basename $GITHUB_REF)
          if [ $tag = "master" ]; then
            tag="latest"
          fi

          targets="argoexec"
          for target in $targets; do
            image_name="${docker_org}/${target}:${tag}"

            docker manifest create $image_name -a ${image_name}-windows

            docker manifest push $image_name
          done