{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='version', url='', help=''),
  '#withBuildDate':: d.fn(help='', args=[d.arg(name='buildDate', type=d.T.string)]),
  withBuildDate(buildDate): { buildDate: buildDate },
  '#withCompiler':: d.fn(help='', args=[d.arg(name='compiler', type=d.T.string)]),
  withCompiler(compiler): { compiler: compiler },
  '#withGitCommit':: d.fn(help='', args=[d.arg(name='gitCommit', type=d.T.string)]),
  withGitCommit(gitCommit): { gitCommit: gitCommit },
  '#withGitTag':: d.fn(help='', args=[d.arg(name='gitTag', type=d.T.string)]),
  withGitTag(gitTag): { gitTag: gitTag },
  '#withGitTreeState':: d.fn(help='', args=[d.arg(name='gitTreeState', type=d.T.string)]),
  withGitTreeState(gitTreeState): { gitTreeState: gitTreeState },
  '#withGoVersion':: d.fn(help='', args=[d.arg(name='goVersion', type=d.T.string)]),
  withGoVersion(goVersion): { goVersion: goVersion },
  '#withPlatform':: d.fn(help='', args=[d.arg(name='platform', type=d.T.string)]),
  withPlatform(platform): { platform: platform },
  '#withVersion':: d.fn(help='', args=[d.arg(name='version', type=d.T.string)]),
  withVersion(version): { version: version },
  '#mixin': 'ignore',
  mixin: self,
}
