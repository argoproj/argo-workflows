// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkflowOpLister helps list WorkflowOps.
type WorkflowOpLister interface {
	// List lists all WorkflowOps in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowOp, err error)
	// WorkflowOps returns an object that can list and get WorkflowOps.
	WorkflowOps(namespace string) WorkflowOpNamespaceLister
	WorkflowOpListerExpansion
}

// workflowOpLister implements the WorkflowOpLister interface.
type workflowOpLister struct {
	indexer cache.Indexer
}

// NewWorkflowOpLister returns a new WorkflowOpLister.
func NewWorkflowOpLister(indexer cache.Indexer) WorkflowOpLister {
	return &workflowOpLister{indexer: indexer}
}

// List lists all WorkflowOps in the indexer.
func (s *workflowOpLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowOp, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowOp))
	})
	return ret, err
}

// WorkflowOps returns an object that can list and get WorkflowOps.
func (s *workflowOpLister) WorkflowOps(namespace string) WorkflowOpNamespaceLister {
	return workflowOpNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkflowOpNamespaceLister helps list and get WorkflowOps.
type WorkflowOpNamespaceLister interface {
	// List lists all WorkflowOps in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowOp, err error)
	// Get retrieves the WorkflowOp from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WorkflowOp, error)
	WorkflowOpNamespaceListerExpansion
}

// workflowOpNamespaceLister implements the WorkflowOpNamespaceLister
// interface.
type workflowOpNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkflowOps in the indexer for a given namespace.
func (s workflowOpNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowOp, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowOp))
	})
	return ret, err
}

// Get retrieves the WorkflowOp from the indexer for a given namespace and name.
func (s workflowOpNamespaceLister) Get(name string) (*v1alpha1.WorkflowOp, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workflowop"), name)
	}
	return obj.(*v1alpha1.WorkflowOp), nil
}
