// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// WorkflowEventLister helps list WorkflowEvents.
type WorkflowEventLister interface {
	// List lists all WorkflowEvents in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowEvent, err error)
	// WorkflowEvents returns an object that can list and get WorkflowEvents.
	WorkflowEvents(namespace string) WorkflowEventNamespaceLister
	WorkflowEventListerExpansion
}

// workflowEventLister implements the WorkflowEventLister interface.
type workflowEventLister struct {
	indexer cache.Indexer
}

// NewWorkflowEventLister returns a new WorkflowEventLister.
func NewWorkflowEventLister(indexer cache.Indexer) WorkflowEventLister {
	return &workflowEventLister{indexer: indexer}
}

// List lists all WorkflowEvents in the indexer.
func (s *workflowEventLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowEvent, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowEvent))
	})
	return ret, err
}

// WorkflowEvents returns an object that can list and get WorkflowEvents.
func (s *workflowEventLister) WorkflowEvents(namespace string) WorkflowEventNamespaceLister {
	return workflowEventNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// WorkflowEventNamespaceLister helps list and get WorkflowEvents.
type WorkflowEventNamespaceLister interface {
	// List lists all WorkflowEvents in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.WorkflowEvent, err error)
	// Get retrieves the WorkflowEvent from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.WorkflowEvent, error)
	WorkflowEventNamespaceListerExpansion
}

// workflowEventNamespaceLister implements the WorkflowEventNamespaceLister
// interface.
type workflowEventNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all WorkflowEvents in the indexer for a given namespace.
func (s workflowEventNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.WorkflowEvent, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.WorkflowEvent))
	})
	return ret, err
}

// Get retrieves the WorkflowEvent from the indexer for a given namespace and name.
func (s workflowEventNamespaceLister) Get(name string) (*v1alpha1.WorkflowEvent, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("workflowevent"), name)
	}
	return obj.(*v1alpha1.WorkflowEvent), nil
}
