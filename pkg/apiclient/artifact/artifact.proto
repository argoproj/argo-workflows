syntax = "proto3";
option go_package = "github.com/argoproj/argo/pkg/apiclient/artifact";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";

// Artifact Service
//
// Artifact Service API performs CRUD actions against application resources
package artifact;

message ArtifactListRequest {
    string namespace = 1;
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 2;
    // Fields to be included or excluded in the response. e.g. "items.spec,items.status.phase", "-items.status.nodes"
    string fields = 3;
}

service ArtifactService {
    rpc ListArtifacts (ArtifactListRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.ArtifactStuff) {
        option (google.api.http).get = "/api/v1/artifacts/{namespace}";
    }
}
