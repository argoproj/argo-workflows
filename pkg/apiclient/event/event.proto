syntax = "proto3";
option go_package = "github.com/argoproj/argo/pkg/apiclient/event";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1/generated.proto";

package event;

message EventRequest {
    // this can be empty - i.e. the client has cluster scoped permissions and want this dispatched to all workflows in
    // all namespaces, or if set - only to workflows in the specified namespace
    string namespace = 1;
    // the event itself can be any data
    github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.Item event = 2;
}

message EventResponse {
}

service EventService {
    rpc ReceiveEvent (EventRequest) returns (EventResponse) {
        option (google.api.http) = {
			post: "/api/v1/events/{namespace}"
			//  we're doing something different with this endpoint - the whole body is the event
			body: "event"
		};
    }
}