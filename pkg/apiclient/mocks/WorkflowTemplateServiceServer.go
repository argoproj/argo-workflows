// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"

	workflowtemplate "github.com/argoproj/argo/pkg/apiclient/workflowtemplate"
)

// WorkflowTemplateServiceServer is an autogenerated mock type for the WorkflowTemplateServiceServer type
type WorkflowTemplateServiceServer struct {
	mock.Mock
}

// CreateWorkflowTemplate provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) CreateWorkflowTemplate(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateCreateRequest) (*v1alpha1.WorkflowTemplate, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1alpha1.WorkflowTemplate
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateCreateRequest) *v1alpha1.WorkflowTemplate); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.WorkflowTemplate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateCreateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteWorkflowTemplate provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) DeleteWorkflowTemplate(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateDeleteRequest) (*workflowtemplate.WorkflowTemplateDeleteResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *workflowtemplate.WorkflowTemplateDeleteResponse
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateDeleteRequest) *workflowtemplate.WorkflowTemplateDeleteResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*workflowtemplate.WorkflowTemplateDeleteResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateDeleteRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetWorkflowTemplate provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) GetWorkflowTemplate(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateGetRequest) (*v1alpha1.WorkflowTemplate, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1alpha1.WorkflowTemplate
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateGetRequest) *v1alpha1.WorkflowTemplate); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.WorkflowTemplate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateGetRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// LintWorkflowTemplate provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) LintWorkflowTemplate(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateLintRequest) (*v1alpha1.WorkflowTemplate, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1alpha1.WorkflowTemplate
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateLintRequest) *v1alpha1.WorkflowTemplate); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.WorkflowTemplate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateLintRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListWorkflowTemplates provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) ListWorkflowTemplates(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateListRequest) (*v1alpha1.WorkflowTemplateList, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1alpha1.WorkflowTemplateList
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateListRequest) *v1alpha1.WorkflowTemplateList); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.WorkflowTemplateList)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateListRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWorkflowTemplate provides a mock function with given fields: _a0, _a1
func (_m *WorkflowTemplateServiceServer) UpdateWorkflowTemplate(_a0 context.Context, _a1 *workflowtemplate.WorkflowTemplateUpdateRequest) (*v1alpha1.WorkflowTemplate, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *v1alpha1.WorkflowTemplate
	if rf, ok := ret.Get(0).(func(context.Context, *workflowtemplate.WorkflowTemplateUpdateRequest) *v1alpha1.WorkflowTemplate); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1alpha1.WorkflowTemplate)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *workflowtemplate.WorkflowTemplateUpdateRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
