// Code generated by mockery v1.1.1. DO NOT EDIT.

package mocks

import (
	clusterworkflowtemplate "github.com/argoproj/argo/pkg/apiclient/clusterworkflowtemplate"
	cronworkflow "github.com/argoproj/argo/pkg/apiclient/cronworkflow"

	info "github.com/argoproj/argo/pkg/apiclient/info"

	mock "github.com/stretchr/testify/mock"

	workflow "github.com/argoproj/argo/pkg/apiclient/workflow"

	workflowarchive "github.com/argoproj/argo/pkg/apiclient/workflowarchive"

	workflowtemplate "github.com/argoproj/argo/pkg/apiclient/workflowtemplate"
)

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// NewArchivedWorkflowServiceClient provides a mock function with given fields:
func (_m *Client) NewArchivedWorkflowServiceClient() (workflowarchive.ArchivedWorkflowServiceClient, error) {
	ret := _m.Called()

	var r0 workflowarchive.ArchivedWorkflowServiceClient
	if rf, ok := ret.Get(0).(func() workflowarchive.ArchivedWorkflowServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(workflowarchive.ArchivedWorkflowServiceClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewClusterWorkflowTemplateServiceClient provides a mock function with given fields:
func (_m *Client) NewClusterWorkflowTemplateServiceClient() clusterworkflowtemplate.ClusterWorkflowTemplateServiceClient {
	ret := _m.Called()

	var r0 clusterworkflowtemplate.ClusterWorkflowTemplateServiceClient
	if rf, ok := ret.Get(0).(func() clusterworkflowtemplate.ClusterWorkflowTemplateServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(clusterworkflowtemplate.ClusterWorkflowTemplateServiceClient)
		}
	}

	return r0
}

// NewCronWorkflowServiceClient provides a mock function with given fields:
func (_m *Client) NewCronWorkflowServiceClient() cronworkflow.CronWorkflowServiceClient {
	ret := _m.Called()

	var r0 cronworkflow.CronWorkflowServiceClient
	if rf, ok := ret.Get(0).(func() cronworkflow.CronWorkflowServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(cronworkflow.CronWorkflowServiceClient)
		}
	}

	return r0
}

// NewInfoServiceClient provides a mock function with given fields:
func (_m *Client) NewInfoServiceClient() (info.InfoServiceClient, error) {
	ret := _m.Called()

	var r0 info.InfoServiceClient
	if rf, ok := ret.Get(0).(func() info.InfoServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(info.InfoServiceClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewWorkflowServiceClient provides a mock function with given fields:
func (_m *Client) NewWorkflowServiceClient() workflow.WorkflowServiceClient {
	ret := _m.Called()

	var r0 workflow.WorkflowServiceClient
	if rf, ok := ret.Get(0).(func() workflow.WorkflowServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(workflow.WorkflowServiceClient)
		}
	}

	return r0
}

// NewWorkflowTemplateServiceClient provides a mock function with given fields:
func (_m *Client) NewWorkflowTemplateServiceClient() workflowtemplate.WorkflowTemplateServiceClient {
	ret := _m.Called()

	var r0 workflowtemplate.WorkflowTemplateServiceClient
	if rf, ok := ret.Get(0).(func() workflowtemplate.WorkflowTemplateServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(workflowtemplate.WorkflowTemplateServiceClient)
		}
	}

	return r0
}
