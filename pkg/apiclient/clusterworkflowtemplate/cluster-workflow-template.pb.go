// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pkg/apiclient/clusterworkflowtemplate/cluster-workflow-template.proto

// Workflow Service
//
// Workflow Service API performs CRUD actions against application resources

package clusterworkflowtemplate

import (
	context "context"
	fmt "fmt"
	v1alpha1 "github.com/argoproj/argo-workflows/v3/pkg/apis/workflow/v1alpha1"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ClusterWorkflowTemplateCreateRequest struct {
	Template             *v1alpha1.ClusterWorkflowTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	CreateOptions        *v1.CreateOptions                 `protobuf:"bytes,2,opt,name=createOptions,proto3" json:"createOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ClusterWorkflowTemplateCreateRequest) Reset()         { *m = ClusterWorkflowTemplateCreateRequest{} }
func (m *ClusterWorkflowTemplateCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateCreateRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{0}
}
func (m *ClusterWorkflowTemplateCreateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateCreateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateCreateRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateCreateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateCreateRequest proto.InternalMessageInfo

func (m *ClusterWorkflowTemplateCreateRequest) GetTemplate() *v1alpha1.ClusterWorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *ClusterWorkflowTemplateCreateRequest) GetCreateOptions() *v1.CreateOptions {
	if m != nil {
		return m.CreateOptions
	}
	return nil
}

type ClusterWorkflowTemplateGetRequest struct {
	Name                 string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GetOptions           *v1.GetOptions `protobuf:"bytes,2,opt,name=getOptions,proto3" json:"getOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ClusterWorkflowTemplateGetRequest) Reset()         { *m = ClusterWorkflowTemplateGetRequest{} }
func (m *ClusterWorkflowTemplateGetRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateGetRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{1}
}
func (m *ClusterWorkflowTemplateGetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateGetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateGetRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateGetRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateGetRequest proto.InternalMessageInfo

func (m *ClusterWorkflowTemplateGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterWorkflowTemplateGetRequest) GetGetOptions() *v1.GetOptions {
	if m != nil {
		return m.GetOptions
	}
	return nil
}

type ClusterWorkflowTemplateListRequest struct {
	ListOptions          *v1.ListOptions `protobuf:"bytes,1,opt,name=listOptions,proto3" json:"listOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ClusterWorkflowTemplateListRequest) Reset()         { *m = ClusterWorkflowTemplateListRequest{} }
func (m *ClusterWorkflowTemplateListRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateListRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{2}
}
func (m *ClusterWorkflowTemplateListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateListRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateListRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateListRequest proto.InternalMessageInfo

func (m *ClusterWorkflowTemplateListRequest) GetListOptions() *v1.ListOptions {
	if m != nil {
		return m.ListOptions
	}
	return nil
}

type ClusterWorkflowTemplateUpdateRequest struct {
	// DEPRECATED: This field is ignored.
	Name                 string                            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // Deprecated: Do not use.
	Template             *v1alpha1.ClusterWorkflowTemplate `protobuf:"bytes,2,opt,name=template,proto3" json:"template,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ClusterWorkflowTemplateUpdateRequest) Reset()         { *m = ClusterWorkflowTemplateUpdateRequest{} }
func (m *ClusterWorkflowTemplateUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateUpdateRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{3}
}
func (m *ClusterWorkflowTemplateUpdateRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateUpdateRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateUpdateRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateUpdateRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateUpdateRequest proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *ClusterWorkflowTemplateUpdateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterWorkflowTemplateUpdateRequest) GetTemplate() *v1alpha1.ClusterWorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

type ClusterWorkflowTemplateDeleteRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	DeleteOptions        *v1.DeleteOptions `protobuf:"bytes,2,opt,name=deleteOptions,proto3" json:"deleteOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClusterWorkflowTemplateDeleteRequest) Reset()         { *m = ClusterWorkflowTemplateDeleteRequest{} }
func (m *ClusterWorkflowTemplateDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateDeleteRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{4}
}
func (m *ClusterWorkflowTemplateDeleteRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateDeleteRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateDeleteRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateDeleteRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateDeleteRequest proto.InternalMessageInfo

func (m *ClusterWorkflowTemplateDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClusterWorkflowTemplateDeleteRequest) GetDeleteOptions() *v1.DeleteOptions {
	if m != nil {
		return m.DeleteOptions
	}
	return nil
}

type ClusterWorkflowTemplateDeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClusterWorkflowTemplateDeleteResponse) Reset()         { *m = ClusterWorkflowTemplateDeleteResponse{} }
func (m *ClusterWorkflowTemplateDeleteResponse) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateDeleteResponse) ProtoMessage()    {}
func (*ClusterWorkflowTemplateDeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{5}
}
func (m *ClusterWorkflowTemplateDeleteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateDeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateDeleteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateDeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateDeleteResponse.Merge(m, src)
}
func (m *ClusterWorkflowTemplateDeleteResponse) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateDeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateDeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateDeleteResponse proto.InternalMessageInfo

type ClusterWorkflowTemplateLintRequest struct {
	Template             *v1alpha1.ClusterWorkflowTemplate `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	CreateOptions        *v1.CreateOptions                 `protobuf:"bytes,2,opt,name=createOptions,proto3" json:"createOptions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ClusterWorkflowTemplateLintRequest) Reset()         { *m = ClusterWorkflowTemplateLintRequest{} }
func (m *ClusterWorkflowTemplateLintRequest) String() string { return proto.CompactTextString(m) }
func (*ClusterWorkflowTemplateLintRequest) ProtoMessage()    {}
func (*ClusterWorkflowTemplateLintRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_688d96b5f613e598, []int{6}
}
func (m *ClusterWorkflowTemplateLintRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClusterWorkflowTemplateLintRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClusterWorkflowTemplateLintRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClusterWorkflowTemplateLintRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClusterWorkflowTemplateLintRequest.Merge(m, src)
}
func (m *ClusterWorkflowTemplateLintRequest) XXX_Size() int {
	return m.Size()
}
func (m *ClusterWorkflowTemplateLintRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClusterWorkflowTemplateLintRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClusterWorkflowTemplateLintRequest proto.InternalMessageInfo

func (m *ClusterWorkflowTemplateLintRequest) GetTemplate() *v1alpha1.ClusterWorkflowTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *ClusterWorkflowTemplateLintRequest) GetCreateOptions() *v1.CreateOptions {
	if m != nil {
		return m.CreateOptions
	}
	return nil
}

func init() {
	proto.RegisterType((*ClusterWorkflowTemplateCreateRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateCreateRequest")
	proto.RegisterType((*ClusterWorkflowTemplateGetRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateGetRequest")
	proto.RegisterType((*ClusterWorkflowTemplateListRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateListRequest")
	proto.RegisterType((*ClusterWorkflowTemplateUpdateRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateUpdateRequest")
	proto.RegisterType((*ClusterWorkflowTemplateDeleteRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateDeleteRequest")
	proto.RegisterType((*ClusterWorkflowTemplateDeleteResponse)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateDeleteResponse")
	proto.RegisterType((*ClusterWorkflowTemplateLintRequest)(nil), "clusterworkflowtemplate.ClusterWorkflowTemplateLintRequest")
}

func init() {
	proto.RegisterFile("pkg/apiclient/clusterworkflowtemplate/cluster-workflow-template.proto", fileDescriptor_688d96b5f613e598)
}

var fileDescriptor_688d96b5f613e598 = []byte{
	// 671 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0x66, 0x16, 0x11, 0x9d, 0xd2, 0xcb, 0x1c, 0xb4, 0xc4, 0x76, 0xd1, 0xa1, 0x52, 0x5d, 0xed,
	0xc4, 0xb4, 0x3d, 0x48, 0x45, 0x0f, 0x6d, 0xa5, 0x1e, 0x2a, 0x4a, 0xea, 0x0f, 0x2a, 0x88, 0x4c,
	0xd3, 0x31, 0x1b, 0x37, 0x9b, 0x89, 0x99, 0xd9, 0x94, 0x22, 0x5e, 0xbc, 0x79, 0xf2, 0x20, 0xfe,
	0x29, 0xfe, 0x0f, 0x1e, 0x15, 0xff, 0x01, 0x59, 0x44, 0xf4, 0xe4, 0x4d, 0x3c, 0x4a, 0x26, 0x3f,
	0x17, 0x9d, 0x36, 0xbb, 0x74, 0x7b, 0xf0, 0x16, 0x66, 0xe6, 0xbd, 0xf7, 0x7d, 0xef, 0x7d, 0xf3,
	0x65, 0xe0, 0xcd, 0xb0, 0xe3, 0x9a, 0x34, 0xf4, 0x1c, 0xdf, 0x63, 0x81, 0x34, 0x1d, 0xbf, 0x27,
	0x24, 0x8b, 0x76, 0x79, 0xd4, 0x79, 0xea, 0xf3, 0x5d, 0xc9, 0xba, 0xa1, 0x4f, 0x25, 0xcb, 0xd7,
	0xe7, 0xf3, 0x8d, 0xf9, 0x7c, 0x87, 0x84, 0x11, 0x97, 0x1c, 0x9d, 0xd6, 0x04, 0x1a, 0xd3, 0x2e,
	0xe7, 0xae, 0xcf, 0x92, 0x12, 0x26, 0x0d, 0x02, 0x2e, 0xa9, 0xf4, 0x78, 0x20, 0xd2, 0x30, 0x63,
	0xa9, 0x73, 0x55, 0x10, 0x8f, 0x27, 0xbb, 0x5d, 0xea, 0xb4, 0xbd, 0x80, 0x45, 0x7b, 0x66, 0x86,
	0x48, 0x98, 0x5d, 0x26, 0xa9, 0x19, 0x5b, 0xa6, 0xcb, 0x02, 0x16, 0x51, 0xc9, 0x76, 0xb2, 0xa8,
	0xdb, 0xae, 0x27, 0xdb, 0xbd, 0x6d, 0xe2, 0xf0, 0xae, 0x49, 0x23, 0x97, 0x87, 0x11, 0x7f, 0xa6,
	0x3e, 0x0a, 0x78, 0xa2, 0x4c, 0x92, 0x2f, 0x99, 0xb1, 0x45, 0xfd, 0xb0, 0x4d, 0xff, 0x4a, 0x87,
	0x7f, 0x03, 0x38, 0xbb, 0x9a, 0xc2, 0x7f, 0x98, 0x1d, 0xbe, 0x97, 0xc1, 0x5f, 0x8d, 0x18, 0x95,
	0xcc, 0x66, 0xcf, 0x7b, 0x4c, 0x48, 0xd4, 0x83, 0x27, 0x72, 0x5e, 0x53, 0xe0, 0x2c, 0xb8, 0x30,
	0xb1, 0xb0, 0x45, 0x4a, 0x28, 0x24, 0x87, 0xa2, 0x3e, 0x9e, 0x14, 0x50, 0x48, 0xbc, 0x48, 0xc2,
	0x8e, 0x4b, 0x12, 0x34, 0x24, 0x5f, 0x25, 0x39, 0x1a, 0xa2, 0xa9, 0x6c, 0x17, 0xa5, 0xd0, 0x16,
	0x9c, 0x74, 0x14, 0x8e, 0x3b, 0xa1, 0xea, 0xdd, 0x54, 0x43, 0xd5, 0x5e, 0x24, 0x69, 0xf3, 0x48,
	0xb5, 0x79, 0x65, 0xa5, 0xa4, 0x79, 0x24, 0xb6, 0xc8, 0x6a, 0x35, 0xd4, 0x1e, 0xcc, 0x84, 0x5f,
	0x03, 0x78, 0x4e, 0x03, 0x60, 0x9d, 0xc9, 0x9c, 0x37, 0x82, 0xc7, 0x02, 0xda, 0x4d, 0x39, 0x9f,
	0xb4, 0xd5, 0x37, 0xba, 0x0b, 0xa1, 0xcb, 0xe4, 0x20, 0xa2, 0x2b, 0xf5, 0x10, 0xad, 0x17, 0x71,
	0x76, 0x25, 0x07, 0xde, 0x83, 0x58, 0x03, 0x65, 0xc3, 0x13, 0x05, 0x96, 0x4d, 0x38, 0xe1, 0x7b,
	0xa2, 0x28, 0x9c, 0x8e, 0xc1, 0xaa, 0x57, 0x78, 0xa3, 0x0c, 0xb4, 0xab, 0x59, 0xf0, 0x7b, 0xbd,
	0x02, 0xee, 0x87, 0x3b, 0x15, 0x05, 0x9c, 0xaa, 0x76, 0x62, 0xa5, 0x31, 0x05, 0xb2, 0x6e, 0x54,
	0x95, 0xd1, 0x38, 0x32, 0x65, 0xe0, 0x77, 0x7a, 0xdc, 0x6b, 0xcc, 0x67, 0x25, 0xee, 0x7f, 0x4d,
	0x70, 0x0b, 0x4e, 0xee, 0xa8, 0x43, 0x23, 0xc9, 0x6a, 0xad, 0x1a, 0x6a, 0x0f, 0x66, 0xc2, 0x73,
	0xf0, 0xfc, 0x01, 0xb0, 0x44, 0xc8, 0x03, 0xc1, 0xf0, 0x2f, 0xb0, 0xcf, 0xd0, 0x03, 0xf9, 0xdf,
	0x5e, 0xbc, 0x85, 0x37, 0x13, 0xb0, 0xa9, 0x01, 0xb0, 0xc9, 0xa2, 0xd8, 0x73, 0x18, 0xfa, 0x0e,
	0xe0, 0x4c, 0x9a, 0x43, 0x73, 0x10, 0x5d, 0x27, 0x1a, 0xd7, 0x25, 0x75, 0xec, 0xcc, 0x18, 0x5f,
	0x0f, 0xf1, 0xfc, 0xab, 0xcf, 0x5f, 0xdf, 0x36, 0xe6, 0x30, 0x56, 0xbe, 0x1f, 0x5b, 0xfa, 0xff,
	0x87, 0x58, 0x06, 0x2d, 0xf4, 0x0d, 0x40, 0x63, 0x9d, 0x49, 0x1d, 0xcf, 0xe5, 0x61, 0x79, 0x96,
	0xde, 0x35, 0x4e, 0x92, 0x96, 0x22, 0x79, 0x09, 0x5d, 0x3c, 0x98, 0xa4, 0xf9, 0x22, 0xb9, 0x72,
	0x2f, 0x13, 0xa2, 0xd3, 0x89, 0x0b, 0x69, 0x52, 0x0a, 0x74, 0x6d, 0x58, 0xaa, 0x15, 0x6f, 0x34,
	0x1e, 0x8f, 0x8d, 0x6b, 0x52, 0x05, 0xb7, 0x14, 0xdf, 0x59, 0x54, 0x63, 0xa8, 0xe8, 0x27, 0x80,
	0x33, 0xa9, 0x75, 0x1e, 0x9a, 0x78, 0x07, 0x9c, 0x78, 0x9c, 0x73, 0x5d, 0x52, 0x3c, 0x89, 0x51,
	0x7f, 0xae, 0x89, 0x86, 0x3f, 0x01, 0x38, 0x93, 0xba, 0xdb, 0xa1, 0x31, 0x1e, 0xf0, 0x70, 0xe3,
	0xc6, 0xa8, 0xe1, 0x99, 0xd7, 0x66, 0x72, 0x6d, 0x0d, 0x21, 0xd7, 0x1f, 0x00, 0x9e, 0x49, 0x7c,
	0x58, 0xc7, 0x68, 0x04, 0xb5, 0x06, 0x47, 0x71, 0x33, 0x17, 0x14, 0xd5, 0xcb, 0x78, 0xae, 0x06,
	0x55, 0xdf, 0x0b, 0xe4, 0x32, 0x68, 0xad, 0x3c, 0xf8, 0xd0, 0x6f, 0x82, 0x8f, 0xfd, 0x26, 0xf8,
	0xd2, 0x6f, 0x82, 0x47, 0xb7, 0xea, 0x3f, 0x31, 0xf7, 0x7f, 0x39, 0x6f, 0x1f, 0x57, 0x8f, 0xcc,
	0xc5, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x0f, 0x8e, 0xa4, 0x69, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ClusterWorkflowTemplateServiceClient is the client API for ClusterWorkflowTemplateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClusterWorkflowTemplateServiceClient interface {
	CreateClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateCreateRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error)
	GetClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateGetRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error)
	ListClusterWorkflowTemplates(ctx context.Context, in *ClusterWorkflowTemplateListRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplateList, error)
	UpdateClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateUpdateRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error)
	DeleteClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateDeleteRequest, opts ...grpc.CallOption) (*ClusterWorkflowTemplateDeleteResponse, error)
	LintClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateLintRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error)
}

type clusterWorkflowTemplateServiceClient struct {
	cc *grpc.ClientConn
}

func NewClusterWorkflowTemplateServiceClient(cc *grpc.ClientConn) ClusterWorkflowTemplateServiceClient {
	return &clusterWorkflowTemplateServiceClient{cc}
}

func (c *clusterWorkflowTemplateServiceClient) CreateClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateCreateRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error) {
	out := new(v1alpha1.ClusterWorkflowTemplate)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/CreateClusterWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterWorkflowTemplateServiceClient) GetClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateGetRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error) {
	out := new(v1alpha1.ClusterWorkflowTemplate)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/GetClusterWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterWorkflowTemplateServiceClient) ListClusterWorkflowTemplates(ctx context.Context, in *ClusterWorkflowTemplateListRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplateList, error) {
	out := new(v1alpha1.ClusterWorkflowTemplateList)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/ListClusterWorkflowTemplates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterWorkflowTemplateServiceClient) UpdateClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateUpdateRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error) {
	out := new(v1alpha1.ClusterWorkflowTemplate)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/UpdateClusterWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterWorkflowTemplateServiceClient) DeleteClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateDeleteRequest, opts ...grpc.CallOption) (*ClusterWorkflowTemplateDeleteResponse, error) {
	out := new(ClusterWorkflowTemplateDeleteResponse)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/DeleteClusterWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *clusterWorkflowTemplateServiceClient) LintClusterWorkflowTemplate(ctx context.Context, in *ClusterWorkflowTemplateLintRequest, opts ...grpc.CallOption) (*v1alpha1.ClusterWorkflowTemplate, error) {
	out := new(v1alpha1.ClusterWorkflowTemplate)
	err := c.cc.Invoke(ctx, "/clusterworkflowtemplate.ClusterWorkflowTemplateService/LintClusterWorkflowTemplate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClusterWorkflowTemplateServiceServer is the server API for ClusterWorkflowTemplateService service.
type ClusterWorkflowTemplateServiceServer interface {
	CreateClusterWorkflowTemplate(context.Context, *ClusterWorkflowTemplateCreateRequest) (*v1alpha1.ClusterWorkflowTemplate, error)
	GetClusterWorkflowTemplate(context.Context, *ClusterWorkflowTemplateGetRequest) (*v1alpha1.ClusterWorkflowTemplate, error)
	ListClusterWorkflowTemplates(context.Context, *ClusterWorkflowTemplateListRequest) (*v1alpha1.ClusterWorkflowTemplateList, error)
	UpdateClusterWorkflowTemplate(context.Context, *ClusterWorkflowTemplateUpdateRequest) (*v1alpha1.ClusterWorkflowTemplate, error)
	DeleteClusterWorkflowTemplate(context.Context, *ClusterWorkflowTemplateDeleteRequest) (*ClusterWorkflowTemplateDeleteResponse, error)
	LintClusterWorkflowTemplate(context.Context, *ClusterWorkflowTemplateLintRequest) (*v1alpha1.ClusterWorkflowTemplate, error)
}

// UnimplementedClusterWorkflowTemplateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedClusterWorkflowTemplateServiceServer struct {
}

func (*UnimplementedClusterWorkflowTemplateServiceServer) CreateClusterWorkflowTemplate(ctx context.Context, req *ClusterWorkflowTemplateCreateRequest) (*v1alpha1.ClusterWorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateClusterWorkflowTemplate not implemented")
}
func (*UnimplementedClusterWorkflowTemplateServiceServer) GetClusterWorkflowTemplate(ctx context.Context, req *ClusterWorkflowTemplateGetRequest) (*v1alpha1.ClusterWorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetClusterWorkflowTemplate not implemented")
}
func (*UnimplementedClusterWorkflowTemplateServiceServer) ListClusterWorkflowTemplates(ctx context.Context, req *ClusterWorkflowTemplateListRequest) (*v1alpha1.ClusterWorkflowTemplateList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClusterWorkflowTemplates not implemented")
}
func (*UnimplementedClusterWorkflowTemplateServiceServer) UpdateClusterWorkflowTemplate(ctx context.Context, req *ClusterWorkflowTemplateUpdateRequest) (*v1alpha1.ClusterWorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateClusterWorkflowTemplate not implemented")
}
func (*UnimplementedClusterWorkflowTemplateServiceServer) DeleteClusterWorkflowTemplate(ctx context.Context, req *ClusterWorkflowTemplateDeleteRequest) (*ClusterWorkflowTemplateDeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteClusterWorkflowTemplate not implemented")
}
func (*UnimplementedClusterWorkflowTemplateServiceServer) LintClusterWorkflowTemplate(ctx context.Context, req *ClusterWorkflowTemplateLintRequest) (*v1alpha1.ClusterWorkflowTemplate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LintClusterWorkflowTemplate not implemented")
}

func RegisterClusterWorkflowTemplateServiceServer(s *grpc.Server, srv ClusterWorkflowTemplateServiceServer) {
	s.RegisterService(&_ClusterWorkflowTemplateService_serviceDesc, srv)
}

func _ClusterWorkflowTemplateService_CreateClusterWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).CreateClusterWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/CreateClusterWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).CreateClusterWorkflowTemplate(ctx, req.(*ClusterWorkflowTemplateCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterWorkflowTemplateService_GetClusterWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).GetClusterWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/GetClusterWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).GetClusterWorkflowTemplate(ctx, req.(*ClusterWorkflowTemplateGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterWorkflowTemplateService_ListClusterWorkflowTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).ListClusterWorkflowTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/ListClusterWorkflowTemplates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).ListClusterWorkflowTemplates(ctx, req.(*ClusterWorkflowTemplateListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterWorkflowTemplateService_UpdateClusterWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).UpdateClusterWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/UpdateClusterWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).UpdateClusterWorkflowTemplate(ctx, req.(*ClusterWorkflowTemplateUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterWorkflowTemplateService_DeleteClusterWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).DeleteClusterWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/DeleteClusterWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).DeleteClusterWorkflowTemplate(ctx, req.(*ClusterWorkflowTemplateDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ClusterWorkflowTemplateService_LintClusterWorkflowTemplate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClusterWorkflowTemplateLintRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClusterWorkflowTemplateServiceServer).LintClusterWorkflowTemplate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clusterworkflowtemplate.ClusterWorkflowTemplateService/LintClusterWorkflowTemplate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClusterWorkflowTemplateServiceServer).LintClusterWorkflowTemplate(ctx, req.(*ClusterWorkflowTemplateLintRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ClusterWorkflowTemplateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clusterworkflowtemplate.ClusterWorkflowTemplateService",
	HandlerType: (*ClusterWorkflowTemplateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateClusterWorkflowTemplate",
			Handler:    _ClusterWorkflowTemplateService_CreateClusterWorkflowTemplate_Handler,
		},
		{
			MethodName: "GetClusterWorkflowTemplate",
			Handler:    _ClusterWorkflowTemplateService_GetClusterWorkflowTemplate_Handler,
		},
		{
			MethodName: "ListClusterWorkflowTemplates",
			Handler:    _ClusterWorkflowTemplateService_ListClusterWorkflowTemplates_Handler,
		},
		{
			MethodName: "UpdateClusterWorkflowTemplate",
			Handler:    _ClusterWorkflowTemplateService_UpdateClusterWorkflowTemplate_Handler,
		},
		{
			MethodName: "DeleteClusterWorkflowTemplate",
			Handler:    _ClusterWorkflowTemplateService_DeleteClusterWorkflowTemplate_Handler,
		},
		{
			MethodName: "LintClusterWorkflowTemplate",
			Handler:    _ClusterWorkflowTemplateService_LintClusterWorkflowTemplate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pkg/apiclient/clusterworkflowtemplate/cluster-workflow-template.proto",
}

func (m *ClusterWorkflowTemplateCreateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateCreateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateCreateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CreateOptions != nil {
		{
			size, err := m.CreateOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Template != nil {
		{
			size, err := m.Template.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateGetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateGetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateGetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GetOptions != nil {
		{
			size, err := m.GetOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ListOptions != nil {
		{
			size, err := m.ListOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateUpdateRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateUpdateRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateUpdateRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Template != nil {
		{
			size, err := m.Template.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateDeleteRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateDeleteRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateDeleteRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DeleteOptions != nil {
		{
			size, err := m.DeleteOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateDeleteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateDeleteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateDeleteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *ClusterWorkflowTemplateLintRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClusterWorkflowTemplateLintRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClusterWorkflowTemplateLintRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CreateOptions != nil {
		{
			size, err := m.CreateOptions.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Template != nil {
		{
			size, err := m.Template.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintClusterWorkflowTemplate(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintClusterWorkflowTemplate(dAtA []byte, offset int, v uint64) int {
	offset -= sovClusterWorkflowTemplate(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ClusterWorkflowTemplateCreateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Template != nil {
		l = m.Template.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.CreateOptions != nil {
		l = m.CreateOptions.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateGetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.GetOptions != nil {
		l = m.GetOptions.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ListOptions != nil {
		l = m.ListOptions.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateUpdateRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.Template != nil {
		l = m.Template.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateDeleteRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.DeleteOptions != nil {
		l = m.DeleteOptions.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateDeleteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClusterWorkflowTemplateLintRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Template != nil {
		l = m.Template.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.CreateOptions != nil {
		l = m.CreateOptions.Size()
		n += 1 + l + sovClusterWorkflowTemplate(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovClusterWorkflowTemplate(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozClusterWorkflowTemplate(x uint64) (n int) {
	return sovClusterWorkflowTemplate(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ClusterWorkflowTemplateCreateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateCreateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateCreateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Template == nil {
				m.Template = &v1alpha1.ClusterWorkflowTemplate{}
			}
			if err := m.Template.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateOptions == nil {
				m.CreateOptions = &v1.CreateOptions{}
			}
			if err := m.CreateOptions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateGetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateGetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateGetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GetOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GetOptions == nil {
				m.GetOptions = &v1.GetOptions{}
			}
			if err := m.GetOptions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ListOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ListOptions == nil {
				m.ListOptions = &v1.ListOptions{}
			}
			if err := m.ListOptions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateUpdateRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateUpdateRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateUpdateRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Template == nil {
				m.Template = &v1alpha1.ClusterWorkflowTemplate{}
			}
			if err := m.Template.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateDeleteRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateDeleteRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateDeleteRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeleteOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeleteOptions == nil {
				m.DeleteOptions = &v1.DeleteOptions{}
			}
			if err := m.DeleteOptions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateDeleteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateDeleteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateDeleteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClusterWorkflowTemplateLintRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateLintRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ClusterWorkflowTemplateLintRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Template", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Template == nil {
				m.Template = &v1alpha1.ClusterWorkflowTemplate{}
			}
			if err := m.Template.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreateOptions", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CreateOptions == nil {
				m.CreateOptions = &v1.CreateOptions{}
			}
			if err := m.CreateOptions.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipClusterWorkflowTemplate(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthClusterWorkflowTemplate
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipClusterWorkflowTemplate(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowClusterWorkflowTemplate
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowClusterWorkflowTemplate
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthClusterWorkflowTemplate
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupClusterWorkflowTemplate
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthClusterWorkflowTemplate
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthClusterWorkflowTemplate        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowClusterWorkflowTemplate          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupClusterWorkflowTemplate = fmt.Errorf("proto: unexpected end of group")
)
