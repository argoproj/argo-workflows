syntax = "proto3";
option go_package = "github.com/argoproj/argo/pkg/apiclient/workflowarchive";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1/generated.proto";
import "k8s.io/api/core/v1/generated.proto";

package workflowarchive;

message ListArchivedWorkflowsRequest {
    k8s.io.apimachinery.pkg.apis.meta.v1.ListOptions listOptions = 1;
}
message GetArchivedWorkflowRequest {
    string uid = 1;
}
message DeleteArchivedWorkflowRequest {
    string uid = 1;
}
message ArchivedWorkflowDeletedResponse {
}

service ArchivedWorkflowService {
    rpc ListArchivedWorkflows (ListArchivedWorkflowsRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.WorkflowList) {
        option (google.api.http).get = "/api/v1/archived-workflows";
    }
    rpc GetArchivedWorkflow (GetArchivedWorkflowRequest) returns (github.com.argoproj.argo.pkg.apis.workflow.v1alpha1.Workflow) {
        option (google.api.http).get = "/api/v1/archived-workflows/{uid}";
    }
    rpc DeleteArchivedWorkflow (DeleteArchivedWorkflowRequest) returns (ArchivedWorkflowDeletedResponse) {
        option (google.api.http).delete = "/api/v1/archived-workflows/{uid}";
    }
}