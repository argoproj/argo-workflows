# coding: utf-8

"""
    Argo Server API

    You can get examples of requests and responses by using the CLI with `--gloglevel=9`, e.g. `argo list --gloglevel=9`  # noqa: E501

    The version of the OpenAPI document: VERSION
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from argo_workflows.configuration import Configuration


class IoArgoprojEventsV1alpha1TriggerParameter(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'dest': 'str',
        'operation': 'str',
        'src': 'IoArgoprojEventsV1alpha1TriggerParameterSource'
    }

    attribute_map = {
        'dest': 'dest',
        'operation': 'operation',
        'src': 'src'
    }

    def __init__(self, dest=None, operation=None, src=None, local_vars_configuration=None):  # noqa: E501
        """IoArgoprojEventsV1alpha1TriggerParameter - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._dest = None
        self._operation = None
        self._src = None
        self.discriminator = None

        if dest is not None:
            self.dest = dest
        if operation is not None:
            self.operation = operation
        if src is not None:
            self.src = src

    @property
    def dest(self):
        """Gets the dest of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501

        Dest is the JSONPath of a resource key. A path is a series of keys separated by a dot. The colon character can be escaped with '.' The -1 key can be used to append a value to an existing array. See https://github.com/tidwall/sjson#path-syntax for more information about how this is used.  # noqa: E501

        :return: The dest of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :rtype: str
        """
        return self._dest

    @dest.setter
    def dest(self, dest):
        """Sets the dest of this IoArgoprojEventsV1alpha1TriggerParameter.

        Dest is the JSONPath of a resource key. A path is a series of keys separated by a dot. The colon character can be escaped with '.' The -1 key can be used to append a value to an existing array. See https://github.com/tidwall/sjson#path-syntax for more information about how this is used.  # noqa: E501

        :param dest: The dest of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :type: str
        """

        self._dest = dest

    @property
    def operation(self):
        """Gets the operation of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501

        Operation is what to do with the existing value at Dest, whether to 'prepend', 'overwrite', or 'append' it.  # noqa: E501

        :return: The operation of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :rtype: str
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this IoArgoprojEventsV1alpha1TriggerParameter.

        Operation is what to do with the existing value at Dest, whether to 'prepend', 'overwrite', or 'append' it.  # noqa: E501

        :param operation: The operation of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :type: str
        """

        self._operation = operation

    @property
    def src(self):
        """Gets the src of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501


        :return: The src of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :rtype: IoArgoprojEventsV1alpha1TriggerParameterSource
        """
        return self._src

    @src.setter
    def src(self, src):
        """Sets the src of this IoArgoprojEventsV1alpha1TriggerParameter.


        :param src: The src of this IoArgoprojEventsV1alpha1TriggerParameter.  # noqa: E501
        :type: IoArgoprojEventsV1alpha1TriggerParameterSource
        """

        self._src = src

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IoArgoprojEventsV1alpha1TriggerParameter):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, IoArgoprojEventsV1alpha1TriggerParameter):
            return True

        return self.to_dict() != other.to_dict()
