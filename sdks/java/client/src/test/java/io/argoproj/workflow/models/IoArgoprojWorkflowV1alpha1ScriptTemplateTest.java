/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IoArgoprojWorkflowV1alpha1ScriptTemplate
 */
public class IoArgoprojWorkflowV1alpha1ScriptTemplateTest {
    private final IoArgoprojWorkflowV1alpha1ScriptTemplate model = new IoArgoprojWorkflowV1alpha1ScriptTemplate();

    /**
     * Model tests for IoArgoprojWorkflowV1alpha1ScriptTemplate
     */
    @Test
    public void testIoArgoprojWorkflowV1alpha1ScriptTemplate() {
        // TODO: test IoArgoprojWorkflowV1alpha1ScriptTemplate
    }

    /**
     * Test the property 'args'
     */
    @Test
    public void argsTest() {
        // TODO: test args
    }

    /**
     * Test the property 'command'
     */
    @Test
    public void commandTest() {
        // TODO: test command
    }

    /**
     * Test the property 'env'
     */
    @Test
    public void envTest() {
        // TODO: test env
    }

    /**
     * Test the property 'envFrom'
     */
    @Test
    public void envFromTest() {
        // TODO: test envFrom
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'imagePullPolicy'
     */
    @Test
    public void imagePullPolicyTest() {
        // TODO: test imagePullPolicy
    }

    /**
     * Test the property 'lifecycle'
     */
    @Test
    public void lifecycleTest() {
        // TODO: test lifecycle
    }

    /**
     * Test the property 'livenessProbe'
     */
    @Test
    public void livenessProbeTest() {
        // TODO: test livenessProbe
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'ports'
     */
    @Test
    public void portsTest() {
        // TODO: test ports
    }

    /**
     * Test the property 'readinessProbe'
     */
    @Test
    public void readinessProbeTest() {
        // TODO: test readinessProbe
    }

    /**
     * Test the property 'resources'
     */
    @Test
    public void resourcesTest() {
        // TODO: test resources
    }

    /**
     * Test the property 'securityContext'
     */
    @Test
    public void securityContextTest() {
        // TODO: test securityContext
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'startupProbe'
     */
    @Test
    public void startupProbeTest() {
        // TODO: test startupProbe
    }

    /**
     * Test the property 'stdin'
     */
    @Test
    public void stdinTest() {
        // TODO: test stdin
    }

    /**
     * Test the property 'stdinOnce'
     */
    @Test
    public void stdinOnceTest() {
        // TODO: test stdinOnce
    }

    /**
     * Test the property 'terminationMessagePath'
     */
    @Test
    public void terminationMessagePathTest() {
        // TODO: test terminationMessagePath
    }

    /**
     * Test the property 'terminationMessagePolicy'
     */
    @Test
    public void terminationMessagePolicyTest() {
        // TODO: test terminationMessagePolicy
    }

    /**
     * Test the property 'tty'
     */
    @Test
    public void ttyTest() {
        // TODO: test tty
    }

    /**
     * Test the property 'volumeDevices'
     */
    @Test
    public void volumeDevicesTest() {
        // TODO: test volumeDevices
    }

    /**
     * Test the property 'volumeMounts'
     */
    @Test
    public void volumeMountsTest() {
        // TODO: test volumeMounts
    }

    /**
     * Test the property 'workingDir'
     */
    @Test
    public void workingDirTest() {
        // TODO: test workingDir
    }

}
