/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1Inputs;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1MemoizationStatus;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1Outputs;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1TemplateRef;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IoArgoprojWorkflowV1alpha1NodeStatus
 */
public class IoArgoprojWorkflowV1alpha1NodeStatusTest {
    private final IoArgoprojWorkflowV1alpha1NodeStatus model = new IoArgoprojWorkflowV1alpha1NodeStatus();

    /**
     * Model tests for IoArgoprojWorkflowV1alpha1NodeStatus
     */
    @Test
    public void testIoArgoprojWorkflowV1alpha1NodeStatus() {
        // TODO: test IoArgoprojWorkflowV1alpha1NodeStatus
    }

    /**
     * Test the property 'boundaryID'
     */
    @Test
    public void boundaryIDTest() {
        // TODO: test boundaryID
    }

    /**
     * Test the property 'children'
     */
    @Test
    public void childrenTest() {
        // TODO: test children
    }

    /**
     * Test the property 'daemoned'
     */
    @Test
    public void daemonedTest() {
        // TODO: test daemoned
    }

    /**
     * Test the property 'displayName'
     */
    @Test
    public void displayNameTest() {
        // TODO: test displayName
    }

    /**
     * Test the property 'estimatedDuration'
     */
    @Test
    public void estimatedDurationTest() {
        // TODO: test estimatedDuration
    }

    /**
     * Test the property 'finishedAt'
     */
    @Test
    public void finishedAtTest() {
        // TODO: test finishedAt
    }

    /**
     * Test the property 'hostNodeName'
     */
    @Test
    public void hostNodeNameTest() {
        // TODO: test hostNodeName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'inputs'
     */
    @Test
    public void inputsTest() {
        // TODO: test inputs
    }

    /**
     * Test the property 'memoizationStatus'
     */
    @Test
    public void memoizationStatusTest() {
        // TODO: test memoizationStatus
    }

    /**
     * Test the property 'message'
     */
    @Test
    public void messageTest() {
        // TODO: test message
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'outboundNodes'
     */
    @Test
    public void outboundNodesTest() {
        // TODO: test outboundNodes
    }

    /**
     * Test the property 'outputs'
     */
    @Test
    public void outputsTest() {
        // TODO: test outputs
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'podIP'
     */
    @Test
    public void podIPTest() {
        // TODO: test podIP
    }

    /**
     * Test the property 'progress'
     */
    @Test
    public void progressTest() {
        // TODO: test progress
    }

    /**
     * Test the property 'resourcesDuration'
     */
    @Test
    public void resourcesDurationTest() {
        // TODO: test resourcesDuration
    }

    /**
     * Test the property 'startedAt'
     */
    @Test
    public void startedAtTest() {
        // TODO: test startedAt
    }

    /**
     * Test the property 'synchronizationStatus'
     */
    @Test
    public void synchronizationStatusTest() {
        // TODO: test synchronizationStatus
    }

    /**
     * Test the property 'templateName'
     */
    @Test
    public void templateNameTest() {
        // TODO: test templateName
    }

    /**
     * Test the property 'templateRef'
     */
    @Test
    public void templateRefTest() {
        // TODO: test templateRef
    }

    /**
     * Test the property 'templateScope'
     */
    @Test
    public void templateScopeTest() {
        // TODO: test templateScope
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
