/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1EventSourceFilter;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1WebhookContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IoArgoprojEventsV1alpha1GitlabEventSource
 */
public class IoArgoprojEventsV1alpha1GitlabEventSourceTest {
    private final IoArgoprojEventsV1alpha1GitlabEventSource model = new IoArgoprojEventsV1alpha1GitlabEventSource();

    /**
     * Model tests for IoArgoprojEventsV1alpha1GitlabEventSource
     */
    @Test
    public void testIoArgoprojEventsV1alpha1GitlabEventSource() {
        // TODO: test IoArgoprojEventsV1alpha1GitlabEventSource
    }

    /**
     * Test the property 'accessToken'
     */
    @Test
    public void accessTokenTest() {
        // TODO: test accessToken
    }

    /**
     * Test the property 'deleteHookOnFinish'
     */
    @Test
    public void deleteHookOnFinishTest() {
        // TODO: test deleteHookOnFinish
    }

    /**
     * Test the property 'enableSSLVerification'
     */
    @Test
    public void enableSSLVerificationTest() {
        // TODO: test enableSSLVerification
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'gitlabBaseURL'
     */
    @Test
    public void gitlabBaseURLTest() {
        // TODO: test gitlabBaseURL
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'projectID'
     */
    @Test
    public void projectIDTest() {
        // TODO: test projectID
    }

    /**
     * Test the property 'projects'
     */
    @Test
    public void projectsTest() {
        // TODO: test projects
    }

    /**
     * Test the property 'secretToken'
     */
    @Test
    public void secretTokenTest() {
        // TODO: test secretToken
    }

    /**
     * Test the property 'webhook'
     */
    @Test
    public void webhookTest() {
        // TODO: test webhook
    }

}
