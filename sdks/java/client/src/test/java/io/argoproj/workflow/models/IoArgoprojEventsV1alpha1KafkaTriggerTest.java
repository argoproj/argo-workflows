/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1SASLConfig;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1TLSConfig;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1TriggerParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for IoArgoprojEventsV1alpha1KafkaTrigger
 */
public class IoArgoprojEventsV1alpha1KafkaTriggerTest {
    private final IoArgoprojEventsV1alpha1KafkaTrigger model = new IoArgoprojEventsV1alpha1KafkaTrigger();

    /**
     * Model tests for IoArgoprojEventsV1alpha1KafkaTrigger
     */
    @Test
    public void testIoArgoprojEventsV1alpha1KafkaTrigger() {
        // TODO: test IoArgoprojEventsV1alpha1KafkaTrigger
    }

    /**
     * Test the property 'compress'
     */
    @Test
    public void compressTest() {
        // TODO: test compress
    }

    /**
     * Test the property 'flushFrequency'
     */
    @Test
    public void flushFrequencyTest() {
        // TODO: test flushFrequency
    }

    /**
     * Test the property 'parameters'
     */
    @Test
    public void parametersTest() {
        // TODO: test parameters
    }

    /**
     * Test the property 'partition'
     */
    @Test
    public void partitionTest() {
        // TODO: test partition
    }

    /**
     * Test the property 'partitioningKey'
     */
    @Test
    public void partitioningKeyTest() {
        // TODO: test partitioningKey
    }

    /**
     * Test the property 'payload'
     */
    @Test
    public void payloadTest() {
        // TODO: test payload
    }

    /**
     * Test the property 'requiredAcks'
     */
    @Test
    public void requiredAcksTest() {
        // TODO: test requiredAcks
    }

    /**
     * Test the property 'sasl'
     */
    @Test
    public void saslTest() {
        // TODO: test sasl
    }

    /**
     * Test the property 'tls'
     */
    @Test
    public void tlsTest() {
        // TODO: test tls
    }

    /**
     * Test the property 'topic'
     */
    @Test
    public void topicTest() {
        // TODO: test topic
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
