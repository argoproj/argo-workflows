/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IoArgoprojEventsV1alpha1GithubAppCreds
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IoArgoprojEventsV1alpha1GithubAppCreds {
  public static final String SERIALIZED_NAME_APP_I_D = "appID";
  @SerializedName(SERIALIZED_NAME_APP_I_D)
  private String appID;

  public static final String SERIALIZED_NAME_INSTALLATION_I_D = "installationID";
  @SerializedName(SERIALIZED_NAME_INSTALLATION_I_D)
  private String installationID;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "privateKey";
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  private io.kubernetes.client.openapi.models.V1SecretKeySelector privateKey;


  public IoArgoprojEventsV1alpha1GithubAppCreds appID(String appID) {
    
    this.appID = appID;
    return this;
  }

   /**
   * Get appID
   * @return appID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppID() {
    return appID;
  }


  public void setAppID(String appID) {
    this.appID = appID;
  }


  public IoArgoprojEventsV1alpha1GithubAppCreds installationID(String installationID) {
    
    this.installationID = installationID;
    return this;
  }

   /**
   * Get installationID
   * @return installationID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstallationID() {
    return installationID;
  }


  public void setInstallationID(String installationID) {
    this.installationID = installationID;
  }


  public IoArgoprojEventsV1alpha1GithubAppCreds privateKey(io.kubernetes.client.openapi.models.V1SecretKeySelector privateKey) {
    
    this.privateKey = privateKey;
    return this;
  }

   /**
   * Get privateKey
   * @return privateKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.kubernetes.client.openapi.models.V1SecretKeySelector getPrivateKey() {
    return privateKey;
  }


  public void setPrivateKey(io.kubernetes.client.openapi.models.V1SecretKeySelector privateKey) {
    this.privateKey = privateKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1GithubAppCreds ioArgoprojEventsV1alpha1GithubAppCreds = (IoArgoprojEventsV1alpha1GithubAppCreds) o;
    return Objects.equals(this.appID, ioArgoprojEventsV1alpha1GithubAppCreds.appID) &&
        Objects.equals(this.installationID, ioArgoprojEventsV1alpha1GithubAppCreds.installationID) &&
        Objects.equals(this.privateKey, ioArgoprojEventsV1alpha1GithubAppCreds.privateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appID, installationID, privateKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1GithubAppCreds {\n");
    sb.append("    appID: ").append(toIndentedString(appID)).append("\n");
    sb.append("    installationID: ").append(toIndentedString(installationID)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

