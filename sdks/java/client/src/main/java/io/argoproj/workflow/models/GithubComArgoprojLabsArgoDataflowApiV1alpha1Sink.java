/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1JetStreamSink;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1Log;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {
  public static final String SERIALIZED_NAME_DB = "db";
  @SerializedName(SERIALIZED_NAME_DB)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink db;

  public static final String SERIALIZED_NAME_DEAD_LETTER_QUEUE = "deadLetterQueue";
  @SerializedName(SERIALIZED_NAME_DEAD_LETTER_QUEUE)
  private Boolean deadLetterQueue;

  public static final String SERIALIZED_NAME_HTTP = "http";
  @SerializedName(SERIALIZED_NAME_HTTP)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink http;

  public static final String SERIALIZED_NAME_JETSTREAM = "jetstream";
  @SerializedName(SERIALIZED_NAME_JETSTREAM)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1JetStreamSink jetstream;

  public static final String SERIALIZED_NAME_KAFKA = "kafka";
  @SerializedName(SERIALIZED_NAME_KAFKA)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink kafka;

  public static final String SERIALIZED_NAME_LOG = "log";
  @SerializedName(SERIALIZED_NAME_LOG)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1Log log;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_S3 = "s3";
  @SerializedName(SERIALIZED_NAME_S3)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink s3;

  public static final String SERIALIZED_NAME_STAN = "stan";
  @SerializedName(SERIALIZED_NAME_STAN)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN stan;

  public static final String SERIALIZED_NAME_VOLUME = "volume";
  @SerializedName(SERIALIZED_NAME_VOLUME)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink volume;


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink db(GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink db) {
    
    this.db = db;
    return this;
  }

   /**
   * Get db
   * @return db
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink getDb() {
    return db;
  }


  public void setDb(GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSink db) {
    this.db = db;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink deadLetterQueue(Boolean deadLetterQueue) {
    
    this.deadLetterQueue = deadLetterQueue;
    return this;
  }

   /**
   * Get deadLetterQueue
   * @return deadLetterQueue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getDeadLetterQueue() {
    return deadLetterQueue;
  }


  public void setDeadLetterQueue(Boolean deadLetterQueue) {
    this.deadLetterQueue = deadLetterQueue;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink http(GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink http) {
    
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink getHttp() {
    return http;
  }


  public void setHttp(GithubComArgoprojLabsArgoDataflowApiV1alpha1HTTPSink http) {
    this.http = http;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink jetstream(GithubComArgoprojLabsArgoDataflowApiV1alpha1JetStreamSink jetstream) {
    
    this.jetstream = jetstream;
    return this;
  }

   /**
   * Get jetstream
   * @return jetstream
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1JetStreamSink getJetstream() {
    return jetstream;
  }


  public void setJetstream(GithubComArgoprojLabsArgoDataflowApiV1alpha1JetStreamSink jetstream) {
    this.jetstream = jetstream;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink kafka(GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink kafka) {
    
    this.kafka = kafka;
    return this;
  }

   /**
   * Get kafka
   * @return kafka
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink getKafka() {
    return kafka;
  }


  public void setKafka(GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaSink kafka) {
    this.kafka = kafka;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink log(GithubComArgoprojLabsArgoDataflowApiV1alpha1Log log) {
    
    this.log = log;
    return this;
  }

   /**
   * Get log
   * @return log
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Log getLog() {
    return log;
  }


  public void setLog(GithubComArgoprojLabsArgoDataflowApiV1alpha1Log log) {
    this.log = log;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink s3(GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink s3) {
    
    this.s3 = s3;
    return this;
  }

   /**
   * Get s3
   * @return s3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink getS3() {
    return s3;
  }


  public void setS3(GithubComArgoprojLabsArgoDataflowApiV1alpha1S3Sink s3) {
    this.s3 = s3;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink stan(GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN stan) {
    
    this.stan = stan;
    return this;
  }

   /**
   * Get stan
   * @return stan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN getStan() {
    return stan;
  }


  public void setStan(GithubComArgoprojLabsArgoDataflowApiV1alpha1STAN stan) {
    this.stan = stan;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink volume(GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink volume) {
    
    this.volume = volume;
    return this;
  }

   /**
   * Get volume
   * @return volume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink getVolume() {
    return volume;
  }


  public void setVolume(GithubComArgoprojLabsArgoDataflowApiV1alpha1VolumeSink volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink githubComArgoprojLabsArgoDataflowApiV1alpha1Sink = (GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink) o;
    return Objects.equals(this.db, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.db) &&
        Objects.equals(this.deadLetterQueue, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.deadLetterQueue) &&
        Objects.equals(this.http, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.http) &&
        Objects.equals(this.jetstream, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.jetstream) &&
        Objects.equals(this.kafka, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.kafka) &&
        Objects.equals(this.log, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.log) &&
        Objects.equals(this.name, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.name) &&
        Objects.equals(this.s3, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.s3) &&
        Objects.equals(this.stan, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.stan) &&
        Objects.equals(this.volume, githubComArgoprojLabsArgoDataflowApiV1alpha1Sink.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(db, deadLetterQueue, http, jetstream, kafka, log, name, s3, stan, volume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GithubComArgoprojLabsArgoDataflowApiV1alpha1Sink {\n");
    sb.append("    db: ").append(toIndentedString(db)).append("\n");
    sb.append("    deadLetterQueue: ").append(toIndentedString(deadLetterQueue)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    jetstream: ").append(toIndentedString(jetstream)).append("\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    s3: ").append(toIndentedString(s3)).append("\n");
    sb.append("    stan: ").append(toIndentedString(stan)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

