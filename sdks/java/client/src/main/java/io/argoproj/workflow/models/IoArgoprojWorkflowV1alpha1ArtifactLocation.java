/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1ArtifactoryArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1GCSArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1GitArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1HDFSArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1HTTPArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1OSSArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1RawArtifact;
import io.argoproj.workflow.models.IoArgoprojWorkflowV1alpha1S3Artifact;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.
 */
@ApiModel(description = "ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IoArgoprojWorkflowV1alpha1ArtifactLocation {
  public static final String SERIALIZED_NAME_ARCHIVE_LOGS = "archiveLogs";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_LOGS)
  private Boolean archiveLogs;

  public static final String SERIALIZED_NAME_ARTIFACTORY = "artifactory";
  @SerializedName(SERIALIZED_NAME_ARTIFACTORY)
  private IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory;

  public static final String SERIALIZED_NAME_GCS = "gcs";
  @SerializedName(SERIALIZED_NAME_GCS)
  private IoArgoprojWorkflowV1alpha1GCSArtifact gcs;

  public static final String SERIALIZED_NAME_GIT = "git";
  @SerializedName(SERIALIZED_NAME_GIT)
  private IoArgoprojWorkflowV1alpha1GitArtifact git;

  public static final String SERIALIZED_NAME_HDFS = "hdfs";
  @SerializedName(SERIALIZED_NAME_HDFS)
  private IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs;

  public static final String SERIALIZED_NAME_HTTP = "http";
  @SerializedName(SERIALIZED_NAME_HTTP)
  private IoArgoprojWorkflowV1alpha1HTTPArtifact http;

  public static final String SERIALIZED_NAME_OSS = "oss";
  @SerializedName(SERIALIZED_NAME_OSS)
  private IoArgoprojWorkflowV1alpha1OSSArtifact oss;

  public static final String SERIALIZED_NAME_RAW = "raw";
  @SerializedName(SERIALIZED_NAME_RAW)
  private IoArgoprojWorkflowV1alpha1RawArtifact raw;

  public static final String SERIALIZED_NAME_S3 = "s3";
  @SerializedName(SERIALIZED_NAME_S3)
  private IoArgoprojWorkflowV1alpha1S3Artifact s3;


  public IoArgoprojWorkflowV1alpha1ArtifactLocation archiveLogs(Boolean archiveLogs) {
    
    this.archiveLogs = archiveLogs;
    return this;
  }

   /**
   * ArchiveLogs indicates if the container logs should be archived
   * @return archiveLogs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ArchiveLogs indicates if the container logs should be archived")

  public Boolean getArchiveLogs() {
    return archiveLogs;
  }


  public void setArchiveLogs(Boolean archiveLogs) {
    this.archiveLogs = archiveLogs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation artifactory(IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory) {
    
    this.artifactory = artifactory;
    return this;
  }

   /**
   * Get artifactory
   * @return artifactory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifact getArtifactory() {
    return artifactory;
  }


  public void setArtifactory(IoArgoprojWorkflowV1alpha1ArtifactoryArtifact artifactory) {
    this.artifactory = artifactory;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation gcs(IoArgoprojWorkflowV1alpha1GCSArtifact gcs) {
    
    this.gcs = gcs;
    return this;
  }

   /**
   * Get gcs
   * @return gcs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1GCSArtifact getGcs() {
    return gcs;
  }


  public void setGcs(IoArgoprojWorkflowV1alpha1GCSArtifact gcs) {
    this.gcs = gcs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation git(IoArgoprojWorkflowV1alpha1GitArtifact git) {
    
    this.git = git;
    return this;
  }

   /**
   * Get git
   * @return git
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1GitArtifact getGit() {
    return git;
  }


  public void setGit(IoArgoprojWorkflowV1alpha1GitArtifact git) {
    this.git = git;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation hdfs(IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs) {
    
    this.hdfs = hdfs;
    return this;
  }

   /**
   * Get hdfs
   * @return hdfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1HDFSArtifact getHdfs() {
    return hdfs;
  }


  public void setHdfs(IoArgoprojWorkflowV1alpha1HDFSArtifact hdfs) {
    this.hdfs = hdfs;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation http(IoArgoprojWorkflowV1alpha1HTTPArtifact http) {
    
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1HTTPArtifact getHttp() {
    return http;
  }


  public void setHttp(IoArgoprojWorkflowV1alpha1HTTPArtifact http) {
    this.http = http;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation oss(IoArgoprojWorkflowV1alpha1OSSArtifact oss) {
    
    this.oss = oss;
    return this;
  }

   /**
   * Get oss
   * @return oss
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1OSSArtifact getOss() {
    return oss;
  }


  public void setOss(IoArgoprojWorkflowV1alpha1OSSArtifact oss) {
    this.oss = oss;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation raw(IoArgoprojWorkflowV1alpha1RawArtifact raw) {
    
    this.raw = raw;
    return this;
  }

   /**
   * Get raw
   * @return raw
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1RawArtifact getRaw() {
    return raw;
  }


  public void setRaw(IoArgoprojWorkflowV1alpha1RawArtifact raw) {
    this.raw = raw;
  }


  public IoArgoprojWorkflowV1alpha1ArtifactLocation s3(IoArgoprojWorkflowV1alpha1S3Artifact s3) {
    
    this.s3 = s3;
    return this;
  }

   /**
   * Get s3
   * @return s3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojWorkflowV1alpha1S3Artifact getS3() {
    return s3;
  }


  public void setS3(IoArgoprojWorkflowV1alpha1S3Artifact s3) {
    this.s3 = s3;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ArtifactLocation ioArgoprojWorkflowV1alpha1ArtifactLocation = (IoArgoprojWorkflowV1alpha1ArtifactLocation) o;
    return Objects.equals(this.archiveLogs, ioArgoprojWorkflowV1alpha1ArtifactLocation.archiveLogs) &&
        Objects.equals(this.artifactory, ioArgoprojWorkflowV1alpha1ArtifactLocation.artifactory) &&
        Objects.equals(this.gcs, ioArgoprojWorkflowV1alpha1ArtifactLocation.gcs) &&
        Objects.equals(this.git, ioArgoprojWorkflowV1alpha1ArtifactLocation.git) &&
        Objects.equals(this.hdfs, ioArgoprojWorkflowV1alpha1ArtifactLocation.hdfs) &&
        Objects.equals(this.http, ioArgoprojWorkflowV1alpha1ArtifactLocation.http) &&
        Objects.equals(this.oss, ioArgoprojWorkflowV1alpha1ArtifactLocation.oss) &&
        Objects.equals(this.raw, ioArgoprojWorkflowV1alpha1ArtifactLocation.raw) &&
        Objects.equals(this.s3, ioArgoprojWorkflowV1alpha1ArtifactLocation.s3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(archiveLogs, artifactory, gcs, git, hdfs, http, oss, raw, s3);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ArtifactLocation {\n");
    sb.append("    archiveLogs: ").append(toIndentedString(archiveLogs)).append("\n");
    sb.append("    artifactory: ").append(toIndentedString(artifactory)).append("\n");
    sb.append("    gcs: ").append(toIndentedString(gcs)).append("\n");
    sb.append("    git: ").append(toIndentedString(git)).append("\n");
    sb.append("    hdfs: ").append(toIndentedString(hdfs)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    oss: ").append(toIndentedString(oss)).append("\n");
    sb.append("    raw: ").append(toIndentedString(raw)).append("\n");
    sb.append("    s3: ").append(toIndentedString(s3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

