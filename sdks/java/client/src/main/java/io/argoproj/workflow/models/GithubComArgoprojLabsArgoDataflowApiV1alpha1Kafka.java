/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka {
  public static final String SERIALIZED_NAME_KAFKA_CONFIG = "kafkaConfig";
  @SerializedName(SERIALIZED_NAME_KAFKA_CONFIG)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig kafkaConfig;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TOPIC = "topic";
  @SerializedName(SERIALIZED_NAME_TOPIC)
  private String topic;


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka kafkaConfig(GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig kafkaConfig) {
    
    this.kafkaConfig = kafkaConfig;
    return this;
  }

   /**
   * Get kafkaConfig
   * @return kafkaConfig
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig getKafkaConfig() {
    return kafkaConfig;
  }


  public void setKafkaConfig(GithubComArgoprojLabsArgoDataflowApiV1alpha1KafkaConfig kafkaConfig) {
    this.kafkaConfig = kafkaConfig;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka topic(String topic) {
    
    this.topic = topic;
    return this;
  }

   /**
   * Get topic
   * @return topic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTopic() {
    return topic;
  }


  public void setTopic(String topic) {
    this.topic = topic;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka githubComArgoprojLabsArgoDataflowApiV1alpha1Kafka = (GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka) o;
    return Objects.equals(this.kafkaConfig, githubComArgoprojLabsArgoDataflowApiV1alpha1Kafka.kafkaConfig) &&
        Objects.equals(this.name, githubComArgoprojLabsArgoDataflowApiV1alpha1Kafka.name) &&
        Objects.equals(this.topic, githubComArgoprojLabsArgoDataflowApiV1alpha1Kafka.topic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kafkaConfig, name, topic);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GithubComArgoprojLabsArgoDataflowApiV1alpha1Kafka {\n");
    sb.append("    kafkaConfig: ").append(toIndentedString(kafkaConfig)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

