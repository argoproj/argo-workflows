/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * S3EncryptionOptions used to determine encryption options during s3 operations
 */
@ApiModel(description = "S3EncryptionOptions used to determine encryption options during s3 operations")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IoArgoprojWorkflowV1alpha1S3EncryptionOptions {
  public static final String SERIALIZED_NAME_ENABLE_ENCRYPTION = "enableEncryption";
  @SerializedName(SERIALIZED_NAME_ENABLE_ENCRYPTION)
  private Boolean enableEncryption;

  public static final String SERIALIZED_NAME_KMS_ENCRYPTION_CONTEXT = "kmsEncryptionContext";
  @SerializedName(SERIALIZED_NAME_KMS_ENCRYPTION_CONTEXT)
  private String kmsEncryptionContext;

  public static final String SERIALIZED_NAME_KMS_KEY_ID = "kmsKeyId";
  @SerializedName(SERIALIZED_NAME_KMS_KEY_ID)
  private String kmsKeyId;

  public static final String SERIALIZED_NAME_SERVER_SIDE_CUSTOMER_KEY_SECRET = "serverSideCustomerKeySecret";
  @SerializedName(SERIALIZED_NAME_SERVER_SIDE_CUSTOMER_KEY_SECRET)
  private io.kubernetes.client.openapi.models.V1SecretKeySelector serverSideCustomerKeySecret;


  public IoArgoprojWorkflowV1alpha1S3EncryptionOptions enableEncryption(Boolean enableEncryption) {
    
    this.enableEncryption = enableEncryption;
    return this;
  }

   /**
   * EnableEncryption tells the driver to encrypt objects if set to true. If kmsKeyId and serverSideCustomerKeySecret are not set, SSE-S3 will be used
   * @return enableEncryption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "EnableEncryption tells the driver to encrypt objects if set to true. If kmsKeyId and serverSideCustomerKeySecret are not set, SSE-S3 will be used")

  public Boolean getEnableEncryption() {
    return enableEncryption;
  }


  public void setEnableEncryption(Boolean enableEncryption) {
    this.enableEncryption = enableEncryption;
  }


  public IoArgoprojWorkflowV1alpha1S3EncryptionOptions kmsEncryptionContext(String kmsEncryptionContext) {
    
    this.kmsEncryptionContext = kmsEncryptionContext;
    return this;
  }

   /**
   * KmsEncryptionContext is a json blob that contains an encryption context. See https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context for more information
   * @return kmsEncryptionContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "KmsEncryptionContext is a json blob that contains an encryption context. See https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context for more information")

  public String getKmsEncryptionContext() {
    return kmsEncryptionContext;
  }


  public void setKmsEncryptionContext(String kmsEncryptionContext) {
    this.kmsEncryptionContext = kmsEncryptionContext;
  }


  public IoArgoprojWorkflowV1alpha1S3EncryptionOptions kmsKeyId(String kmsKeyId) {
    
    this.kmsKeyId = kmsKeyId;
    return this;
  }

   /**
   * KMSKeyId tells the driver to encrypt the object using the specified KMS Key.
   * @return kmsKeyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "KMSKeyId tells the driver to encrypt the object using the specified KMS Key.")

  public String getKmsKeyId() {
    return kmsKeyId;
  }


  public void setKmsKeyId(String kmsKeyId) {
    this.kmsKeyId = kmsKeyId;
  }


  public IoArgoprojWorkflowV1alpha1S3EncryptionOptions serverSideCustomerKeySecret(io.kubernetes.client.openapi.models.V1SecretKeySelector serverSideCustomerKeySecret) {
    
    this.serverSideCustomerKeySecret = serverSideCustomerKeySecret;
    return this;
  }

   /**
   * Get serverSideCustomerKeySecret
   * @return serverSideCustomerKeySecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.kubernetes.client.openapi.models.V1SecretKeySelector getServerSideCustomerKeySecret() {
    return serverSideCustomerKeySecret;
  }


  public void setServerSideCustomerKeySecret(io.kubernetes.client.openapi.models.V1SecretKeySelector serverSideCustomerKeySecret) {
    this.serverSideCustomerKeySecret = serverSideCustomerKeySecret;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1S3EncryptionOptions ioArgoprojWorkflowV1alpha1S3EncryptionOptions = (IoArgoprojWorkflowV1alpha1S3EncryptionOptions) o;
    return Objects.equals(this.enableEncryption, ioArgoprojWorkflowV1alpha1S3EncryptionOptions.enableEncryption) &&
        Objects.equals(this.kmsEncryptionContext, ioArgoprojWorkflowV1alpha1S3EncryptionOptions.kmsEncryptionContext) &&
        Objects.equals(this.kmsKeyId, ioArgoprojWorkflowV1alpha1S3EncryptionOptions.kmsKeyId) &&
        Objects.equals(this.serverSideCustomerKeySecret, ioArgoprojWorkflowV1alpha1S3EncryptionOptions.serverSideCustomerKeySecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enableEncryption, kmsEncryptionContext, kmsKeyId, serverSideCustomerKeySecret);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1S3EncryptionOptions {\n");
    sb.append("    enableEncryption: ").append(toIndentedString(enableEncryption)).append("\n");
    sb.append("    kmsEncryptionContext: ").append(toIndentedString(kmsEncryptionContext)).append("\n");
    sb.append("    kmsKeyId: ").append(toIndentedString(kmsKeyId)).append("\n");
    sb.append("    serverSideCustomerKeySecret: ").append(toIndentedString(serverSideCustomerKeySecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

