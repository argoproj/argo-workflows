/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.Duration;
import io.argoproj.workflow.models.GithubComArgoprojLabsArgoDataflowApiV1alpha1Database;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource {
  public static final String SERIALIZED_NAME_COMMIT_INTERVAL = "commitInterval";
  @SerializedName(SERIALIZED_NAME_COMMIT_INTERVAL)
  private Duration commitInterval;

  public static final String SERIALIZED_NAME_DATABASE = "database";
  @SerializedName(SERIALIZED_NAME_DATABASE)
  private GithubComArgoprojLabsArgoDataflowApiV1alpha1Database database;

  public static final String SERIALIZED_NAME_INIT_SCHEMA = "initSchema";
  @SerializedName(SERIALIZED_NAME_INIT_SCHEMA)
  private Boolean initSchema;

  public static final String SERIALIZED_NAME_OFFSET_COLUMN = "offsetColumn";
  @SerializedName(SERIALIZED_NAME_OFFSET_COLUMN)
  private String offsetColumn;

  public static final String SERIALIZED_NAME_POLL_INTERVAL = "pollInterval";
  @SerializedName(SERIALIZED_NAME_POLL_INTERVAL)
  private Duration pollInterval;

  public static final String SERIALIZED_NAME_QUERY = "query";
  @SerializedName(SERIALIZED_NAME_QUERY)
  private String query;


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource commitInterval(Duration commitInterval) {
    
    this.commitInterval = commitInterval;
    return this;
  }

   /**
   * Get commitInterval
   * @return commitInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Duration getCommitInterval() {
    return commitInterval;
  }


  public void setCommitInterval(Duration commitInterval) {
    this.commitInterval = commitInterval;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource database(GithubComArgoprojLabsArgoDataflowApiV1alpha1Database database) {
    
    this.database = database;
    return this;
  }

   /**
   * Get database
   * @return database
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public GithubComArgoprojLabsArgoDataflowApiV1alpha1Database getDatabase() {
    return database;
  }


  public void setDatabase(GithubComArgoprojLabsArgoDataflowApiV1alpha1Database database) {
    this.database = database;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource initSchema(Boolean initSchema) {
    
    this.initSchema = initSchema;
    return this;
  }

   /**
   * Get initSchema
   * @return initSchema
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInitSchema() {
    return initSchema;
  }


  public void setInitSchema(Boolean initSchema) {
    this.initSchema = initSchema;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource offsetColumn(String offsetColumn) {
    
    this.offsetColumn = offsetColumn;
    return this;
  }

   /**
   * Get offsetColumn
   * @return offsetColumn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOffsetColumn() {
    return offsetColumn;
  }


  public void setOffsetColumn(String offsetColumn) {
    this.offsetColumn = offsetColumn;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource pollInterval(Duration pollInterval) {
    
    this.pollInterval = pollInterval;
    return this;
  }

   /**
   * Get pollInterval
   * @return pollInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Duration getPollInterval() {
    return pollInterval;
  }


  public void setPollInterval(Duration pollInterval) {
    this.pollInterval = pollInterval;
  }


  public GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource = (GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource) o;
    return Objects.equals(this.commitInterval, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.commitInterval) &&
        Objects.equals(this.database, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.database) &&
        Objects.equals(this.initSchema, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.initSchema) &&
        Objects.equals(this.offsetColumn, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.offsetColumn) &&
        Objects.equals(this.pollInterval, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.pollInterval) &&
        Objects.equals(this.query, githubComArgoprojLabsArgoDataflowApiV1alpha1DBSource.query);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commitInterval, database, initSchema, offsetColumn, pollInterval, query);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GithubComArgoprojLabsArgoDataflowApiV1alpha1DBSource {\n");
    sb.append("    commitInterval: ").append(toIndentedString(commitInterval)).append("\n");
    sb.append("    database: ").append(toIndentedString(database)).append("\n");
    sb.append("    initSchema: ").append(toIndentedString(initSchema)).append("\n");
    sb.append("    offsetColumn: ").append(toIndentedString(offsetColumn)).append("\n");
    sb.append("    pollInterval: ").append(toIndentedString(pollInterval)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

