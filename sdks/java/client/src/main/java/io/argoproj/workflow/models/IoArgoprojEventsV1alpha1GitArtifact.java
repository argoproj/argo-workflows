/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1GitCreds;
import io.argoproj.workflow.models.IoArgoprojEventsV1alpha1GitRemoteConfig;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * IoArgoprojEventsV1alpha1GitArtifact
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IoArgoprojEventsV1alpha1GitArtifact {
  public static final String SERIALIZED_NAME_BRANCH = "branch";
  @SerializedName(SERIALIZED_NAME_BRANCH)
  private String branch;

  public static final String SERIALIZED_NAME_CLONE_DIRECTORY = "cloneDirectory";
  @SerializedName(SERIALIZED_NAME_CLONE_DIRECTORY)
  private String cloneDirectory;

  public static final String SERIALIZED_NAME_CREDS = "creds";
  @SerializedName(SERIALIZED_NAME_CREDS)
  private IoArgoprojEventsV1alpha1GitCreds creds;

  public static final String SERIALIZED_NAME_FILE_PATH = "filePath";
  @SerializedName(SERIALIZED_NAME_FILE_PATH)
  private String filePath;

  public static final String SERIALIZED_NAME_REF = "ref";
  @SerializedName(SERIALIZED_NAME_REF)
  private String ref;

  public static final String SERIALIZED_NAME_REMOTE = "remote";
  @SerializedName(SERIALIZED_NAME_REMOTE)
  private IoArgoprojEventsV1alpha1GitRemoteConfig remote;

  public static final String SERIALIZED_NAME_SSH_KEY_SECRET = "sshKeySecret";
  @SerializedName(SERIALIZED_NAME_SSH_KEY_SECRET)
  private io.kubernetes.client.openapi.models.V1SecretKeySelector sshKeySecret;

  public static final String SERIALIZED_NAME_TAG = "tag";
  @SerializedName(SERIALIZED_NAME_TAG)
  private String tag;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;


  public IoArgoprojEventsV1alpha1GitArtifact branch(String branch) {
    
    this.branch = branch;
    return this;
  }

   /**
   * Get branch
   * @return branch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBranch() {
    return branch;
  }


  public void setBranch(String branch) {
    this.branch = branch;
  }


  public IoArgoprojEventsV1alpha1GitArtifact cloneDirectory(String cloneDirectory) {
    
    this.cloneDirectory = cloneDirectory;
    return this;
  }

   /**
   * Directory to clone the repository. We clone complete directory because GitArtifact is not limited to any specific Git service providers. Hence we don&#39;t use any specific git provider client.
   * @return cloneDirectory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Directory to clone the repository. We clone complete directory because GitArtifact is not limited to any specific Git service providers. Hence we don't use any specific git provider client.")

  public String getCloneDirectory() {
    return cloneDirectory;
  }


  public void setCloneDirectory(String cloneDirectory) {
    this.cloneDirectory = cloneDirectory;
  }


  public IoArgoprojEventsV1alpha1GitArtifact creds(IoArgoprojEventsV1alpha1GitCreds creds) {
    
    this.creds = creds;
    return this;
  }

   /**
   * Get creds
   * @return creds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojEventsV1alpha1GitCreds getCreds() {
    return creds;
  }


  public void setCreds(IoArgoprojEventsV1alpha1GitCreds creds) {
    this.creds = creds;
  }


  public IoArgoprojEventsV1alpha1GitArtifact filePath(String filePath) {
    
    this.filePath = filePath;
    return this;
  }

   /**
   * Get filePath
   * @return filePath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilePath() {
    return filePath;
  }


  public void setFilePath(String filePath) {
    this.filePath = filePath;
  }


  public IoArgoprojEventsV1alpha1GitArtifact ref(String ref) {
    
    this.ref = ref;
    return this;
  }

   /**
   * Get ref
   * @return ref
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRef() {
    return ref;
  }


  public void setRef(String ref) {
    this.ref = ref;
  }


  public IoArgoprojEventsV1alpha1GitArtifact remote(IoArgoprojEventsV1alpha1GitRemoteConfig remote) {
    
    this.remote = remote;
    return this;
  }

   /**
   * Get remote
   * @return remote
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public IoArgoprojEventsV1alpha1GitRemoteConfig getRemote() {
    return remote;
  }


  public void setRemote(IoArgoprojEventsV1alpha1GitRemoteConfig remote) {
    this.remote = remote;
  }


  public IoArgoprojEventsV1alpha1GitArtifact sshKeySecret(io.kubernetes.client.openapi.models.V1SecretKeySelector sshKeySecret) {
    
    this.sshKeySecret = sshKeySecret;
    return this;
  }

   /**
   * Get sshKeySecret
   * @return sshKeySecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.kubernetes.client.openapi.models.V1SecretKeySelector getSshKeySecret() {
    return sshKeySecret;
  }


  public void setSshKeySecret(io.kubernetes.client.openapi.models.V1SecretKeySelector sshKeySecret) {
    this.sshKeySecret = sshKeySecret;
  }


  public IoArgoprojEventsV1alpha1GitArtifact tag(String tag) {
    
    this.tag = tag;
    return this;
  }

   /**
   * Get tag
   * @return tag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTag() {
    return tag;
  }


  public void setTag(String tag) {
    this.tag = tag;
  }


  public IoArgoprojEventsV1alpha1GitArtifact url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1GitArtifact ioArgoprojEventsV1alpha1GitArtifact = (IoArgoprojEventsV1alpha1GitArtifact) o;
    return Objects.equals(this.branch, ioArgoprojEventsV1alpha1GitArtifact.branch) &&
        Objects.equals(this.cloneDirectory, ioArgoprojEventsV1alpha1GitArtifact.cloneDirectory) &&
        Objects.equals(this.creds, ioArgoprojEventsV1alpha1GitArtifact.creds) &&
        Objects.equals(this.filePath, ioArgoprojEventsV1alpha1GitArtifact.filePath) &&
        Objects.equals(this.ref, ioArgoprojEventsV1alpha1GitArtifact.ref) &&
        Objects.equals(this.remote, ioArgoprojEventsV1alpha1GitArtifact.remote) &&
        Objects.equals(this.sshKeySecret, ioArgoprojEventsV1alpha1GitArtifact.sshKeySecret) &&
        Objects.equals(this.tag, ioArgoprojEventsV1alpha1GitArtifact.tag) &&
        Objects.equals(this.url, ioArgoprojEventsV1alpha1GitArtifact.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branch, cloneDirectory, creds, filePath, ref, remote, sshKeySecret, tag, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1GitArtifact {\n");
    sb.append("    branch: ").append(toIndentedString(branch)).append("\n");
    sb.append("    cloneDirectory: ").append(toIndentedString(cloneDirectory)).append("\n");
    sb.append("    creds: ").append(toIndentedString(creds)).append("\n");
    sb.append("    filePath: ").append(toIndentedString(filePath)).append("\n");
    sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
    sb.append("    remote: ").append(toIndentedString(remote)).append("\n");
    sb.append("    sshKeySecret: ").append(toIndentedString(sshKeySecret)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

