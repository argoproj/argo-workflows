/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.workflow.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NodeSynchronizationStatus stores the status of a node
 */
@ApiModel(description = "NodeSynchronizationStatus stores the status of a node")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus {
  public static final String SERIALIZED_NAME_WAITING = "waiting";
  @SerializedName(SERIALIZED_NAME_WAITING)
  private String waiting;


  public IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus waiting(String waiting) {
    
    this.waiting = waiting;
    return this;
  }

   /**
   * Waiting is the name of the lock that this node is waiting for
   * @return waiting
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Waiting is the name of the lock that this node is waiting for")

  public String getWaiting() {
    return waiting;
  }


  public void setWaiting(String waiting) {
    this.waiting = waiting;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus ioArgoprojWorkflowV1alpha1NodeSynchronizationStatus = (IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus) o;
    return Objects.equals(this.waiting, ioArgoprojWorkflowV1alpha1NodeSynchronizationStatus.waiting);
  }

  @Override
  public int hashCode() {
    return Objects.hash(waiting);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus {\n");
    sb.append("    waiting: ").append(toIndentedString(waiting)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

