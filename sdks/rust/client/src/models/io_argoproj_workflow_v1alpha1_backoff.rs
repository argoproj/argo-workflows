/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojWorkflowV1alpha1Backoff : Backoff is a backoff strategy to use within retryStrategy



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1Backoff {
    /// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")
    #[serde(rename = "duration", skip_serializing_if = "Option::is_none")]
    pub duration: Option<String>,
    #[serde(rename = "factor", skip_serializing_if = "Option::is_none")]
    pub factor: Option<String>,
    /// MaxDuration is the maximum amount of time allowed for a workflow in the backoff strategy
    #[serde(rename = "maxDuration", skip_serializing_if = "Option::is_none")]
    pub max_duration: Option<String>,
}

impl IoArgoprojWorkflowV1alpha1Backoff {
    /// Backoff is a backoff strategy to use within retryStrategy
    pub fn new() -> IoArgoprojWorkflowV1alpha1Backoff {
        IoArgoprojWorkflowV1alpha1Backoff {
            duration: None,
            factor: None,
            max_duration: None,
        }
    }
}


