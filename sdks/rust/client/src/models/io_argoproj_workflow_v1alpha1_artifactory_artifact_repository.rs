/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository : ArtifactoryArtifactRepository defines the controller configuration for an artifactory artifact repository



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {
    #[serde(rename = "passwordSecret", skip_serializing_if = "Option::is_none")]
    pub password_secret: Option<Box<crate::models::SecretKeySelector>>,
    /// RepoURL is the url for artifactory repo.
    #[serde(rename = "repoURL", skip_serializing_if = "Option::is_none")]
    pub repo_url: Option<String>,
    #[serde(rename = "usernameSecret", skip_serializing_if = "Option::is_none")]
    pub username_secret: Option<Box<crate::models::SecretKeySelector>>,
}

impl IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {
    /// ArtifactoryArtifactRepository defines the controller configuration for an artifactory artifact repository
    pub fn new() -> IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {
        IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {
            password_secret: None,
            repo_url: None,
            username_secret: None,
        }
    }
}


