/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// VolumeProjection : Projection that may be projected along with other supported volume types



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct VolumeProjection {
    #[serde(rename = "configMap", skip_serializing_if = "Option::is_none")]
    pub config_map: Option<Box<crate::models::ConfigMapProjection>>,
    #[serde(rename = "downwardAPI", skip_serializing_if = "Option::is_none")]
    pub downward_api: Option<Box<crate::models::DownwardApiProjection>>,
    #[serde(rename = "secret", skip_serializing_if = "Option::is_none")]
    pub secret: Option<Box<crate::models::SecretProjection>>,
    #[serde(rename = "serviceAccountToken", skip_serializing_if = "Option::is_none")]
    pub service_account_token: Option<Box<crate::models::ServiceAccountTokenProjection>>,
}

impl VolumeProjection {
    /// Projection that may be projected along with other supported volume types
    pub fn new() -> VolumeProjection {
        VolumeProjection {
            config_map: None,
            downward_api: None,
            secret: None,
            service_account_token: None,
        }
    }
}


