/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojWorkflowV1alpha1MutexStatus : MutexStatus contains which objects hold  mutex locks, and which objects this workflow is waiting on to release locks.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1MutexStatus {
    /// Holding is a list of mutexes and their respective objects that are held by mutex lock for this io.argoproj.workflow.v1alpha1.
    #[serde(rename = "holding", skip_serializing_if = "Option::is_none")]
    pub holding: Option<Vec<crate::models::IoArgoprojWorkflowV1alpha1MutexHolding>>,
    /// Waiting is a list of mutexes and their respective objects this workflow is waiting for.
    #[serde(rename = "waiting", skip_serializing_if = "Option::is_none")]
    pub waiting: Option<Vec<crate::models::IoArgoprojWorkflowV1alpha1MutexHolding>>,
}

impl IoArgoprojWorkflowV1alpha1MutexStatus {
    /// MutexStatus contains which objects hold  mutex locks, and which objects this workflow is waiting on to release locks.
    pub fn new() -> IoArgoprojWorkflowV1alpha1MutexStatus {
        IoArgoprojWorkflowV1alpha1MutexStatus {
            holding: None,
            waiting: None,
        }
    }
}


