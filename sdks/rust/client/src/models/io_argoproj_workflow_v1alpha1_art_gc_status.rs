/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojWorkflowV1alpha1ArtGcStatus : ArtGCStatus maintains state related to ArtifactGC



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1ArtGcStatus {
    /// if this is true, we already checked to see if we need to do it and we don't
    #[serde(rename = "notSpecified", skip_serializing_if = "Option::is_none")]
    pub not_specified: Option<bool>,
    /// have completed Pods been processed? (mapped by Pod name) used to prevent re-processing the Status of a Pod more than once
    #[serde(rename = "podsRecouped", skip_serializing_if = "Option::is_none")]
    pub pods_recouped: Option<::std::collections::HashMap<String, bool>>,
    /// have Pods been started to perform this strategy? (enables us not to re-process what we've already done)
    #[serde(rename = "strategiesProcessed", skip_serializing_if = "Option::is_none")]
    pub strategies_processed: Option<::std::collections::HashMap<String, bool>>,
}

impl IoArgoprojWorkflowV1alpha1ArtGcStatus {
    /// ArtGCStatus maintains state related to ArtifactGC
    pub fn new() -> IoArgoprojWorkflowV1alpha1ArtGcStatus {
        IoArgoprojWorkflowV1alpha1ArtGcStatus {
            not_specified: None,
            pods_recouped: None,
            strategies_processed: None,
        }
    }
}


