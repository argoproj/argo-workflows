/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojEventsV1alpha1SlackTrigger : SlackTrigger refers to the specification of the slack notification trigger.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojEventsV1alpha1SlackTrigger {
    #[serde(rename = "channel", skip_serializing_if = "Option::is_none")]
    pub channel: Option<String>,
    #[serde(rename = "message", skip_serializing_if = "Option::is_none")]
    pub message: Option<String>,
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<crate::models::IoArgoprojEventsV1alpha1TriggerParameter>>,
    #[serde(rename = "slackToken", skip_serializing_if = "Option::is_none")]
    pub slack_token: Option<Box<crate::models::SecretKeySelector>>,
}

impl IoArgoprojEventsV1alpha1SlackTrigger {
    /// SlackTrigger refers to the specification of the slack notification trigger.
    pub fn new() -> IoArgoprojEventsV1alpha1SlackTrigger {
        IoArgoprojEventsV1alpha1SlackTrigger {
            channel: None,
            message: None,
            parameters: None,
            slack_token: None,
        }
    }
}


