/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojEventsV1alpha1AmqpConsumeConfig {
    #[serde(rename = "autoAck", skip_serializing_if = "Option::is_none")]
    pub auto_ack: Option<bool>,
    #[serde(rename = "consumerTag", skip_serializing_if = "Option::is_none")]
    pub consumer_tag: Option<String>,
    #[serde(rename = "exclusive", skip_serializing_if = "Option::is_none")]
    pub exclusive: Option<bool>,
    #[serde(rename = "noLocal", skip_serializing_if = "Option::is_none")]
    pub no_local: Option<bool>,
    #[serde(rename = "noWait", skip_serializing_if = "Option::is_none")]
    pub no_wait: Option<bool>,
}

impl IoArgoprojEventsV1alpha1AmqpConsumeConfig {
    pub fn new() -> IoArgoprojEventsV1alpha1AmqpConsumeConfig {
        IoArgoprojEventsV1alpha1AmqpConsumeConfig {
            auto_ack: None,
            consumer_tag: None,
            exclusive: None,
            no_local: None,
            no_wait: None,
        }
    }
}


