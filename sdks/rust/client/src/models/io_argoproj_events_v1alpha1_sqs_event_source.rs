/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojEventsV1alpha1SqsEventSource {
    #[serde(rename = "accessKey", skip_serializing_if = "Option::is_none")]
    pub access_key: Option<Box<crate::models::SecretKeySelector>>,
    #[serde(rename = "dlq", skip_serializing_if = "Option::is_none")]
    pub dlq: Option<bool>,
    #[serde(rename = "endpoint", skip_serializing_if = "Option::is_none")]
    pub endpoint: Option<String>,
    #[serde(rename = "filter", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Box<crate::models::IoArgoprojEventsV1alpha1EventSourceFilter>>,
    #[serde(rename = "jsonBody", skip_serializing_if = "Option::is_none")]
    pub json_body: Option<bool>,
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "queue", skip_serializing_if = "Option::is_none")]
    pub queue: Option<String>,
    #[serde(rename = "queueAccountId", skip_serializing_if = "Option::is_none")]
    pub queue_account_id: Option<String>,
    #[serde(rename = "region", skip_serializing_if = "Option::is_none")]
    pub region: Option<String>,
    #[serde(rename = "roleARN", skip_serializing_if = "Option::is_none")]
    pub role_arn: Option<String>,
    #[serde(rename = "secretKey", skip_serializing_if = "Option::is_none")]
    pub secret_key: Option<Box<crate::models::SecretKeySelector>>,
    #[serde(rename = "sessionToken", skip_serializing_if = "Option::is_none")]
    pub session_token: Option<Box<crate::models::SecretKeySelector>>,
    /// WaitTimeSeconds is The duration (in seconds) for which the call waits for a message to arrive in the queue before returning.
    #[serde(rename = "waitTimeSeconds", skip_serializing_if = "Option::is_none")]
    pub wait_time_seconds: Option<String>,
}

impl IoArgoprojEventsV1alpha1SqsEventSource {
    pub fn new() -> IoArgoprojEventsV1alpha1SqsEventSource {
        IoArgoprojEventsV1alpha1SqsEventSource {
            access_key: None,
            dlq: None,
            endpoint: None,
            filter: None,
            json_body: None,
            metadata: None,
            queue: None,
            queue_account_id: None,
            region: None,
            role_arn: None,
            secret_key: None,
            session_token: None,
            wait_time_seconds: None,
        }
    }
}


