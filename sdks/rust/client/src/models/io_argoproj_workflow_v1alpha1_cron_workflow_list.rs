/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoArgoprojWorkflowV1alpha1CronWorkflowList : CronWorkflowList is list of CronWorkflow resources



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1CronWorkflowList {
    /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources
    #[serde(rename = "apiVersion", skip_serializing_if = "Option::is_none")]
    pub api_version: Option<String>,
    #[serde(rename = "items")]
    pub items: Vec<crate::models::IoArgoprojWorkflowV1alpha1CronWorkflow>,
    /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    #[serde(rename = "kind", skip_serializing_if = "Option::is_none")]
    pub kind: Option<String>,
    #[serde(rename = "metadata")]
    pub metadata: Box<crate::models::ListMeta>,
}

impl IoArgoprojWorkflowV1alpha1CronWorkflowList {
    /// CronWorkflowList is list of CronWorkflow resources
    pub fn new(items: Vec<crate::models::IoArgoprojWorkflowV1alpha1CronWorkflow>, metadata: crate::models::ListMeta) -> IoArgoprojWorkflowV1alpha1CronWorkflowList {
        IoArgoprojWorkflowV1alpha1CronWorkflowList {
            api_version: None,
            items,
            kind: None,
            metadata: Box::new(metadata),
        }
    }
}


