/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
    #[serde(rename = "artifactRepository", skip_serializing_if = "Option::is_none")]
    pub artifact_repository: Option<Box<crate::models::IoArgoprojWorkflowV1alpha1ArtifactRepository>>,
    /// The name of the config map. Defaults to \"artifact-repositories\".
    #[serde(rename = "configMap", skip_serializing_if = "Option::is_none")]
    pub config_map: Option<String>,
    /// If this ref represents the default artifact repository, rather than a config map.
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<bool>,
    /// The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.
    #[serde(rename = "key", skip_serializing_if = "Option::is_none")]
    pub key: Option<String>,
    /// The namespace of the config map. Defaults to the workflow's namespace, or the controller's namespace (if found).
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
}

impl IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
    pub fn new() -> IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
        IoArgoprojWorkflowV1alpha1ArtifactRepositoryRefStatus {
            artifact_repository: None,
            config_map: None,
            default: None,
            key: None,
            namespace: None,
        }
    }
}


