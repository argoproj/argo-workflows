/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// EnvFromSource : EnvFromSource represents the source of a set of ConfigMaps



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct EnvFromSource {
    #[serde(rename = "configMapRef", skip_serializing_if = "Option::is_none")]
    pub config_map_ref: Option<Box<crate::models::ConfigMapEnvSource>>,
    /// An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    #[serde(rename = "prefix", skip_serializing_if = "Option::is_none")]
    pub prefix: Option<String>,
    #[serde(rename = "secretRef", skip_serializing_if = "Option::is_none")]
    pub secret_ref: Option<Box<crate::models::SecretEnvSource>>,
}

impl EnvFromSource {
    /// EnvFromSource represents the source of a set of ConfigMaps
    pub fn new() -> EnvFromSource {
        EnvFromSource {
            config_map_ref: None,
            prefix: None,
            secret_ref: None,
        }
    }
}


