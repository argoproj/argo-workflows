/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojEventsV1alpha1AmqpQueueDeclareConfig {
    #[serde(rename = "arguments", skip_serializing_if = "Option::is_none")]
    pub arguments: Option<String>,
    #[serde(rename = "autoDelete", skip_serializing_if = "Option::is_none")]
    pub auto_delete: Option<bool>,
    #[serde(rename = "durable", skip_serializing_if = "Option::is_none")]
    pub durable: Option<bool>,
    #[serde(rename = "exclusive", skip_serializing_if = "Option::is_none")]
    pub exclusive: Option<bool>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "noWait", skip_serializing_if = "Option::is_none")]
    pub no_wait: Option<bool>,
}

impl IoArgoprojEventsV1alpha1AmqpQueueDeclareConfig {
    pub fn new() -> IoArgoprojEventsV1alpha1AmqpQueueDeclareConfig {
        IoArgoprojEventsV1alpha1AmqpQueueDeclareConfig {
            arguments: None,
            auto_delete: None,
            durable: None,
            exclusive: None,
            name: None,
            no_wait: None,
        }
    }
}


