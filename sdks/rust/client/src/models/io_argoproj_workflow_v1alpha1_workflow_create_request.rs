/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1WorkflowCreateRequest {
    #[serde(rename = "createOptions", skip_serializing_if = "Option::is_none")]
    pub create_options: Option<Box<crate::models::CreateOptions>>,
    /// This field is no longer used.
    #[serde(rename = "instanceID", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    #[serde(rename = "namespace", skip_serializing_if = "Option::is_none")]
    pub namespace: Option<String>,
    #[serde(rename = "serverDryRun", skip_serializing_if = "Option::is_none")]
    pub server_dry_run: Option<bool>,
    #[serde(rename = "workflow", skip_serializing_if = "Option::is_none")]
    pub workflow: Option<Box<crate::models::IoArgoprojWorkflowV1alpha1Workflow>>,
}

impl IoArgoprojWorkflowV1alpha1WorkflowCreateRequest {
    pub fn new() -> IoArgoprojWorkflowV1alpha1WorkflowCreateRequest {
        IoArgoprojWorkflowV1alpha1WorkflowCreateRequest {
            create_options: None,
            instance_id: None,
            namespace: None,
            server_dry_run: None,
            workflow: None,
        }
    }
}


