/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojEventsV1alpha1Trigger {
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<Vec<crate::models::IoArgoprojEventsV1alpha1TriggerParameter>>,
    #[serde(rename = "policy", skip_serializing_if = "Option::is_none")]
    pub policy: Option<Box<crate::models::IoArgoprojEventsV1alpha1TriggerPolicy>>,
    #[serde(rename = "rateLimit", skip_serializing_if = "Option::is_none")]
    pub rate_limit: Option<Box<crate::models::IoArgoprojEventsV1alpha1RateLimit>>,
    #[serde(rename = "retryStrategy", skip_serializing_if = "Option::is_none")]
    pub retry_strategy: Option<Box<crate::models::IoArgoprojEventsV1alpha1Backoff>>,
    #[serde(rename = "template", skip_serializing_if = "Option::is_none")]
    pub template: Option<Box<crate::models::IoArgoprojEventsV1alpha1TriggerTemplate>>,
}

impl IoArgoprojEventsV1alpha1Trigger {
    pub fn new() -> IoArgoprojEventsV1alpha1Trigger {
        IoArgoprojEventsV1alpha1Trigger {
            parameters: None,
            policy: None,
            rate_limit: None,
            retry_strategy: None,
            template: None,
        }
    }
}


