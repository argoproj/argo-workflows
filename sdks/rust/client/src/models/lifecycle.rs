/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Lifecycle : Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Lifecycle {
    #[serde(rename = "postStart", skip_serializing_if = "Option::is_none")]
    pub post_start: Option<Box<crate::models::LifecycleHandler>>,
    #[serde(rename = "preStop", skip_serializing_if = "Option::is_none")]
    pub pre_stop: Option<Box<crate::models::LifecycleHandler>>,
}

impl Lifecycle {
    /// Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.
    pub fn new() -> Lifecycle {
        Lifecycle {
            post_start: None,
            pre_stop: None,
        }
    }
}


