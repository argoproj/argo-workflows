/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IoArgoprojWorkflowV1alpha1SemaphoreHolding {
    /// Holders stores the list of current holder names in the io.argoproj.workflow.v1alpha1.
    #[serde(rename = "holders", skip_serializing_if = "Option::is_none")]
    pub holders: Option<Vec<String>>,
    /// Semaphore stores the semaphore name.
    #[serde(rename = "semaphore", skip_serializing_if = "Option::is_none")]
    pub semaphore: Option<String>,
}

impl IoArgoprojWorkflowV1alpha1SemaphoreHolding {
    pub fn new() -> IoArgoprojWorkflowV1alpha1SemaphoreHolding {
        IoArgoprojWorkflowV1alpha1SemaphoreHolding {
            holders: None,
            semaphore: None,
        }
    }
}


