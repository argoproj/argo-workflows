/*
 * Argo Workflows API
 *
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/
 *
 * The version of the OpenAPI document: VERSION
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ProjectedVolumeSource : Represents a projected volume source



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProjectedVolumeSource {
    /// Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    #[serde(rename = "defaultMode", skip_serializing_if = "Option::is_none")]
    pub default_mode: Option<i32>,
    /// list of volume projections
    #[serde(rename = "sources", skip_serializing_if = "Option::is_none")]
    pub sources: Option<Vec<crate::models::VolumeProjection>>,
}

impl ProjectedVolumeSource {
    /// Represents a projected volume source
    pub fn new() -> ProjectedVolumeSource {
        ProjectedVolumeSource {
            default_mode: None,
            sources: None,
        }
    }
}


