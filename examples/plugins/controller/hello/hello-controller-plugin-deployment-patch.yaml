# This is an auto-generated file. DO NOT EDIT
# This is a Kustomize patch that will add the plugin to your controller.
# Example: kubectl -n argo patch deployment workflow-controller --patch-file hello-controller-plugin-deployment-patch.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: workflow-controller
spec:
  selector: {}
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
    spec:
      containers:
      - env:
        - name: ARGO_PLUGINS
          value: "true"
        name: workflow-controller
        resources: {}
      - args:
        - |
          import json
          from http.server import BaseHTTPRequestHandler, HTTPServer


          class Plugin(BaseHTTPRequestHandler):

              def args(self):
                  return json.loads(self.rfile.read(int(self.headers.get('Content-Length'))))

              def reply(self, reply):
                  self.send_response(200)
                  self.end_headers()
                  self.wfile.write(json.dumps(reply).encode("UTF-8"))

              def unsupported(self):
                  self.send_response(404)
                  self.end_headers()

              def do_POST(self):
                  if self.path == '/api/v1/parameters.add':
                      self.reply({'parameters': {'hello': 'good morning'}})
                  elif self.path == '/api/v1/workflow.preOperate':
                      self.reply({'workflow': {'metadata': {'annotations': {'hello': 'good morning'}}}})
                  elif self.path == '/api/v1/node.preExecute':
                      args = self.args()
                      if 'hello' in args['template'].get('plugin', {}):
                          self.reply({'node': {'phase': 'Succeeded', 'message': 'Hello workflow!'}})
                      else:
                          self.reply({})
                  else:
                      self.unsupported()


          if __name__ == '__main__':
              httpd = HTTPServer(('', 4355), Plugin)
              httpd.serve_forever()
        command:
        - python
        - -c
        image: python:alpine3.6
        name: hello-controller-plugin
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
status: {}
