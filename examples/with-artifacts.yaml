# This example demonstrates the ability to pass artifacts
# from one step to the next.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: artifact-passing-
spec:
  entrypoint: artifact-example
  templates:
  - name: artifact-example
    steps:
    - - name: generate-artifact
        template: generate-artifacts
    - - name: process-artifact
        template: print-message
        withParam: "{{steps.generate-artifact.outputs.result}}"
        arguments:
          parameters:
          - name: file
            value: "{{item}}"
    - - name: collect-artifact
        template: collect-artifacts
        arguments:
          parameters:
            - name: processed
              value: "{{steps.process-artifact.outputs.parameters.processed}}"

  - name: generate-artifacts
    data:
      source:
        withArtifactPaths:
          s3:
            bucket: test
            endpoint: minio:9000
            insecure: true
            accessKeySecret:
              name: my-minio-cred
              key: accesskey
            secretKeySecret:
              name: my-minio-cred
              key: secretkey
      transformation:
        - name: filter-extension
          filter:
            regex: ".+?\\.py"
        #- name: filter-content
        #  filter:
        #    regex: "lunch"
        #- name: aggregate-batch
        #  aggregator:
        #    batch: 2
        #- name: aggregate-extension
        #  aggregator:
        #    regex: ".+?\\.(.+?)$"

  - name: collect-artifacts
    inputs:
      parameters:
        - name: processed
    data:
      transformation:
        - name: filter-path
          filter:
            regex: ".+?\\.pdf$"
        - name: aggregate-batch
          aggregator:
            batch: 2

  - name: print-message
    inputs:
      parameters:
      - name: file
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo \"{{inputs.parameters.file}}.done\" | tee /tmp/f.txt"]
    outputs:
      parameters:
        - name: processed
          valueFrom:
            path: /tmp/f.txt
