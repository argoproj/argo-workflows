apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dag-conditional-artifacts-
  labels:
    workflows.argoproj.io/test: "true"
  annotations:
    workflows.argoproj.io/description: |
      conditional-artifacts provide a way to choose the output artifacts based on expression.
      In this example
      the 'coinflip' DAG template  has two steps which will run based `when` condition.
      Based on condition one of step may not execute. So Step template output artifact should assign
      executed step output artifacts.
      `fromExpression` in output parameter can have expression to select the artifacts.
    workflows.argoproj.io/version: '>= 3.1.0'
    workflows.argoproj.io/verify.py: |
      assert status["phase"] == "Succeeded"
spec:
  entrypoint: coinflip
  volumes:
    - name: workdir
      emptyDir: {}
  templates:
    - name: coinflip
      dag:
        tasks:
          - name: flip-coin
            template: flipcoin1
          - name: heads
            depends: flip-coin
            template: heads
            when: "{{tasks.flip-coin.outputs.result}} == heads"
          - name: tails
            depends: flip-coin
            template: tails
            when: "{{tasks.flip-coin.outputs.result}} == tails"
      outputs:
        artifacts:
          - name: stepresult
            fromExpression: "tasks['flip-coin'].outputs.result == 'heads'?tasks.heads.outputs.artifacts.headsresult:tasks.tails.outputs.artifacts.tailsresult"
    
    - name: flipcoin1
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          import random
          result = "heads" if random.randint(0,1) == 0 else "tails"
          print(result)
          
    - name: heads
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          file = open("result.txt", "w")
          file.write("it was heads")
          file.close()
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
      outputs:
        artifacts:
          - name: headsresult
            path: /result.txt
    - name: tails
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          file = open("result.txt", "w")
          file.write("it was tails")
          file.close()
        volumeMounts:
          - name: workdir
            mountPath: /mnt/vol
      outputs:
        artifacts:
          - name: tailsresult
            path: /result.txt