# This example demonstrates the loading of a hard-wired input artifact from an OSS compliant
# store. OSS guards access to buckets using an access key and
# secret key, which will be stored as regular Kubernetes secrets, and referenced in the
# workflow using secret selectors. To create the secret required for this example, first
# run the following command:
# $ kubectl create secret generic my-oss-credentials --from-literal=accessKey=<YOUR-OSS-ACCESS-ID> --from-literal=secretKey=<YOUR-OSS-SECRET-KEY>
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: input-artifact-oss-
spec:
  entrypoint: input-artifact-oss-example
  templates:
  - name: input-artifact-oss-example
    inputs:
      artifacts:
      - name: my-art
        path: /my-artifact
        oss:
          endpoint: http://oss-cn-hangzhou-zmf.aliyuncs.com
          bucket: test-bucket-name
          key: test/mydirectory/ # this is path in the bucket
          # accessKeySecret and secretKeySecret are secret selectors.
          # It references the k8s secret named 'my-oss-credentials'.
          # This secret is expected to have have the keys 'accessKey'
          # and 'secretKey', containing the base64 encoded credentials
          # to the bucket.
          accessKeySecret:
            name: my-oss-credentials
            key: accessKey
          secretKeySecret:
            name: my-oss-credentials
            key: secretKey
    container:
      image: debian:latest
      command: [sh, -c]
      args: ["ls -l /my-artifact"]
