# This example demonstrates creating a workflow that waits on two CloudEvents.
# curl -X POST -d '{"context": {"id": "a", "type": "test"}}' https://localhost:2746/api/v1/events/argo -k -H 'Authorization: Bearer PXnB9D6CGvFYzAFa0WeOj97Ik6uLEHXq'
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: events-
spec:
  entrypoint: events
  templates:
    - name: events
      dag:
        tasks:
          - name: a
            template: a
          - name: b
            template: b
            dependencies: [a]
          - name: c
            template: c

    - name: a
      eventConsumer:
        expression: context.type == "test" && (context.id contains "a")

    - name: b
      eventProducer:
        http:
          insecureSkipVerify: true
          url: https://localhost:2746/api/v1/events/argo
          headers:
            - name: Authorization
              # Get this token from the secrets named "automation" under .data.token
              value: Bearer PXnB9D6CGvFYzAFa0WeOj97Ik6uLEHXq
          method: POST
          body:
            context:
              type: test
              id: b

    - name: c
      eventConsumer:
        expression: context.type == "test" && (context.id contains "b")

