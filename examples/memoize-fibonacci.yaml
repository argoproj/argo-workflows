# This example demonstrates the ability to memoize the calculation of a fibonacci sequence with a workflow
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: memoized-fibonacci-
spec:
  entrypoint: plan
  templates:
    - name: plan
      steps:
        - - name: recurse
            template: fibonacci
            arguments:
              parameters:
                - name: num
                  value: 3

    - name: fibonacci
      inputs:
        parameters:
          - name: num
      steps:
        - - name: iteration
            template: fibonacci-step
            when: "{{inputs.parameters.num}} > 2"
            arguments: 
              parameters:
              - name: num
                value: "{{inputs.parameters.num}}"
        - - name: continue
            template: fibonacci
            when: "{{steps.iteration.outputs.parameters.step-result}} > 2"
            arguments:
              parameters:
                - name: num
                  value: "{{steps.iteration.outputs.parameters.step-result}}"
        - - name: stop
            template: base
            when: "{{steps.iteration.outputs.parameters.step-result}} < 3"
            arguments:
              parameters:
                - name: num
                  value: "{{steps.iteration.outputs.parameters.step-result}}"
      outputs:
        parameters:
          - name: result
            value: "{{steps.iteration.outputs.parameters.step-result}}"

    - name: fibonacci-step
      inputs: 
        parameters:
          - name: num
      steps: 
        - - name: sub-left
            template: add
            arguments: 
              parameters: [{name: first, value: "{{inputs.parameters.num}}"}, {name: second, value: -1}]
          - name: sub-right
            template: add
            arguments: 
              parameters: [{name: first, value: "{{inputs.parameters.num}}"}, {name: second, value: -2}]
        - - name: recurse-left
            template: fibonacci
            arguments:
              parameters: 
                - name: num
                  value: "{{steps.sub-left.outputs.result}}"        
          - name: recurse-right
            template: fibonacci
            arguments:
              parameters: 
                - name: num
                  value: "{{steps.sub-right.outputs.result}}"
        - - name: add-results
            template: add
            arguments: 
              parameters: [{name: first, value: "{{steps.recurse-left.outputs.parameters.result}}"}, {name: second, value: "{{steps.recurse-right.outputs.parameters.result}}"}]

      outputs: 
        parameters: 
          - name: step-result
            valueFrom:
              parameter: "{{steps.add-results.outputs.result}}"

    - name: add
      inputs:
        parameters:
          - name: first
          - name: second
      script:
        image: debian:9.4
        command: [bash]
        source: |
          echo $(({{inputs.parameters.first}} + {{inputs.parameters.second}}))

    - name: base
      inputs:
        parameters:
          - name: num
      container:
        image: alpine:latest
        command: [sh, -c]
        args: ["echo {{inputs.parameters.num}} > /tmp/result.txt"]
      outputs:
        parameters:
          - name: result
            valueFrom:
              default: 0
              path: /tmp/result.txt

