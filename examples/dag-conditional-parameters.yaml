apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: dag-conditional-parameter-
  labels:
    workflows.argoproj.io/test: "true"
  annotations:
    workflows.argoproj.io/description: |
      conditional-parameter provide a way to choose the output parameters based on expression.
      In this example
      the 'coinflip' DAG template has two steps which will run based `when` condition.
      Based on condition one of step may not execute. So Step template output parameter should assign
      executed step output result.
      `expression` in output parameter can have expression to select the artifacts.
    workflows.argoproj.io/version: '>= 3.1.0'
    workflows.argoproj.io/verify.py: |
      assert status["phase"] == "Succeeded"
      assert nodes["coinflip"]["phase"] == "Succeeded"
      assert nodes["coinflip"]["outputs"]["exitCode"] == "0"
spec:
  entrypoint: coinflip
  templates:
    - name: coinflip
      dag:
        tasks:
          - name: flipcoin
            template: flipcoin1
          - name: heads
            depends: flipcoin
            template: heads
            when: "{{tasks.flipcoin.outputs.result}} == heads"
          - name: tails
            depends: flipcoin
            template: tails
            when: "{{tasks.flipcoin.outputs.result}} == tails"
      outputs:
        parameters:
          - name: stepresult
            valueFrom:
              expression: "tasks.flipcoin.outputs.result == 'heads'? tasks.heads.outputs.result : tasks.tails.outputs.result"
    
    - name: flipcoin1
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          import random
          result = "heads" if random.randint(0,1) == 0 else "tails"
          print(result)
          
    - name: heads
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          print("heads")

    - name: tails
      script:
        image: python:alpine3.6
        command: [python]
        source: |
          print("tails")