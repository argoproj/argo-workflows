apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: retrieve-secrets
spec:
  templates:
    - name: retrieve-secrets
      nodeSelector:
        kubernetes.io/os: linux
      container:
        image: bitnami/kubectl:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Retrieving secrets from Kubernetes..."
            mkdir -p /tmp/outputs
            export CLIENT_ID=$(kubectl get secret azure-auth-secret -o jsonpath="{.data.client-id}" | base64 --decode)
            export CLIENT_SECRET=$(kubectl get secret azure-auth-secret -o jsonpath="{.data.client-secret}" | base64 --decode)
            export TENANT_ID=$(kubectl get secret azure-auth-secret -o jsonpath="{.data.tenant-id}" | base64 --decode)
            export ADMIN_PASSWORD=$(kubectl get secret azure-auth-secret -o jsonpath="{.data.admin-password}" | base64 --decode)
            echo "CLIENT_ID: $CLIENT_ID"
            echo "CLIENT_SECRET: $CLIENT_SECRET"
            echo "TENANT_ID: $TENANT_ID"
            echo "ADMIN_PASSWORD: $ADMIN_PASSWORD"
            # Outputs are made available to the next steps
            echo "$ADMIN_PASSWORD" > /tmp/outputs/admin-password
            echo "$CLIENT_ID" > /tmp/outputs/client-id
            echo "$CLIENT_SECRET" > /tmp/outputs/client-secret
            echo "$TENANT_ID" > /tmp/outputs/tenant-id
      outputs:
        parameters:
          - name: admin-password
            valueFrom:
              path: /tmp/outputs/admin-password
          - name: client-id
            valueFrom:
              path: /tmp/outputs/client-id
          - name: client-secret
            valueFrom:
              path: /tmp/outputs/client-secret
          - name: tenant-id
            valueFrom:
              path: /tmp/outputs/tenant-id
