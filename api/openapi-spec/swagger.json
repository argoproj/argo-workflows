{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argoproj.github.io/argo-workflows/",
    "title": "Argo Workflows API",
    "version": "VERSION"
  },
  "host": "localhost:2746",
  "paths": {
    "/api/v1/archived-workflows": {
      "get": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_ListArchivedWorkflows",
        "parameters": [
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "namePrefix",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/archived-workflows-label-keys": {
      "get": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_ListArchivedWorkflowLabelKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LabelKeys"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/archived-workflows-label-values": {
      "get": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_ListArchivedWorkflowLabelValues",
        "parameters": [
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LabelValues"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/archived-workflows/{uid}": {
      "get": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_GetArchivedWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_DeleteArchivedWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArchivedWorkflowDeletedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/archived-workflows/{uid}/resubmit": {
      "put": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_ResubmitArchivedWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ResubmitArchivedWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/archived-workflows/{uid}/retry": {
      "put": {
        "tags": [
          "ArchivedWorkflowService"
        ],
        "operationId": "ArchivedWorkflowService_RetryArchivedWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RetryArchivedWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cluster-workflow-templates": {
      "get": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_ListClusterWorkflowTemplates",
        "parameters": [
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_CreateClusterWorkflowTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cluster-workflow-templates/lint": {
      "post": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_LintClusterWorkflowTemplate",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateLintRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cluster-workflow-templates/{name}": {
      "get": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_GetClusterWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_UpdateClusterWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "description": "DEPRECATED: This field is ignored.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ClusterWorkflowTemplateService"
        ],
        "operationId": "ClusterWorkflowTemplateService_DeleteClusterWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cron-workflows/{namespace}": {
      "get": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_ListCronWorkflows",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_CreateCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CreateCronWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cron-workflows/{namespace}/lint": {
      "post": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_LintCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LintCronWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cron-workflows/{namespace}/{name}": {
      "get": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_GetCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_UpdateCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "DEPRECATED: This field is ignored.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.UpdateCronWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_DeleteCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowDeletedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cron-workflows/{namespace}/{name}/resume": {
      "put": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_ResumeCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowResumeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/cron-workflows/{namespace}/{name}/suspend": {
      "put": {
        "tags": [
          "CronWorkflowService"
        ],
        "operationId": "CronWorkflowService_SuspendCronWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowSuspendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/event-sources/{namespace}": {
      "get": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_ListEventSources",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_CreateEventSource",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventsource.CreateEventSourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/event-sources/{namespace}/{name}": {
      "get": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_GetEventSource",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_UpdateEventSource",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/eventsource.UpdateEventSourceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_DeleteEventSource",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/eventsource.EventSourceDeletedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/events/{namespace}/{discriminator}": {
      "post": {
        "tags": [
          "EventService"
        ],
        "operationId": "EventService_ReceiveEvent",
        "parameters": [
          {
            "type": "string",
            "description": "The namespace for the io.argoproj.workflow.v1alpha1. This can be empty if the client has cluster scoped permissions.\nIf empty, then the event is \"broadcast\" to workflow event binding in all namespaces.",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Optional discriminator for the io.argoproj.workflow.v1alpha1. This should almost always be empty.\nUsed for edge-cases where the event payload alone is not provide enough information to discriminate the event.\nThis MUST NOT be used as security mechanism, e.g. to allow two clients to use the same access token, or\nto support webhooks on unsecured server. Instead, use access tokens.\nThis is made available as `discriminator` in the event binding selector (`/spec/event/selector)`",
            "name": "discriminator",
            "in": "path",
            "required": true
          },
          {
            "description": "The event itself can be any data.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.EventResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/info": {
      "get": {
        "tags": [
          "InfoService"
        ],
        "operationId": "InfoService_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.InfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/pipelines/{namespace}": {
      "get": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_ListPipelines",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/pipelines/{namespace}/{name}": {
      "get": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_GetPipeline",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Pipeline"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_DeletePipeline",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pipeline.DeletePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/pipelines/{namespace}/{name}/restart": {
      "post": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_RestartPipeline",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pipeline.RestartPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/sensors/{namespace}": {
      "get": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_ListSensors",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.SensorList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_CreateSensor",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sensor.CreateSensorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/sensors/{namespace}/{name}": {
      "get": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_GetSensor",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_UpdateSensor",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sensor.UpdateSensorRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_DeleteSensor",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sensor.DeleteSensorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/event-sources/{namespace}": {
      "get": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_WatchEventSources",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of eventsource.EventSourceWatchEvent",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/eventsource.EventSourceWatchEvent"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/event-sources/{namespace}/logs": {
      "get": {
        "tags": [
          "EventSourceService"
        ],
        "operationId": "EventSourceService_EventSourcesLogs",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "optional - only return entries for this event source.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries for this event source type (e.g. `webhook`).",
            "name": "eventSourceType",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries for this event name (e.g. `example`).",
            "name": "eventName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries where `msg` matches this regular expression.",
            "name": "grep",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.\n+optional.",
            "name": "podLogOptions.container",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Follow the log stream of the pod. Defaults to false.\n+optional.",
            "name": "podLogOptions.follow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return previous terminated container logs. Defaults to false.\n+optional.",
            "name": "podLogOptions.previous",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "A relative time in seconds before the current time from which to show logs. If this value\nprecedes the time a pod was started, only logs since the pod start will be returned.\nIf this value is in the future, no logs will be returned.\nOnly one of sinceSeconds or sinceTime may be specified.\n+optional.",
            "name": "podLogOptions.sinceSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "name": "podLogOptions.sinceTime.seconds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "name": "podLogOptions.sinceTime.nanos",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line\nof log output. Defaults to false.\n+optional.",
            "name": "podLogOptions.timestamps",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of lines from the end of the logs to show. If not specified,\nlogs are shown from the creation of the container or sinceSeconds or sinceTime\n+optional.",
            "name": "podLogOptions.tailLines",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of bytes to read from the server before terminating the\nlog output. This may not display a complete final line of logging, and may return\nslightly more or slightly less than the specified limit.\n+optional.",
            "name": "podLogOptions.limitBytes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the\nserving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver\nand the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real\nkubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the\nconnection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept\nthe actual log data coming from the real kubelet).\n+optional.",
            "name": "podLogOptions.insecureSkipTLSVerifyBackend",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of eventsource.LogEntry",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/eventsource.LogEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/events/{namespace}": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_WatchEvents",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of io.k8s.api.core.v1.Event",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/io.k8s.api.core.v1.Event"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/pipelines/{namespace}": {
      "get": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_WatchPipelines",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of pipeline.PipelineWatchEvent",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/pipeline.PipelineWatchEvent"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/pipelines/{namespace}/logs": {
      "get": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_PipelineLogs",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "optional - only return entries for this pipeline.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries for this step.",
            "name": "stepName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries which match this expresssion.",
            "name": "grep",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.\n+optional.",
            "name": "podLogOptions.container",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Follow the log stream of the pod. Defaults to false.\n+optional.",
            "name": "podLogOptions.follow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return previous terminated container logs. Defaults to false.\n+optional.",
            "name": "podLogOptions.previous",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "A relative time in seconds before the current time from which to show logs. If this value\nprecedes the time a pod was started, only logs since the pod start will be returned.\nIf this value is in the future, no logs will be returned.\nOnly one of sinceSeconds or sinceTime may be specified.\n+optional.",
            "name": "podLogOptions.sinceSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "name": "podLogOptions.sinceTime.seconds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "name": "podLogOptions.sinceTime.nanos",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line\nof log output. Defaults to false.\n+optional.",
            "name": "podLogOptions.timestamps",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of lines from the end of the logs to show. If not specified,\nlogs are shown from the creation of the container or sinceSeconds or sinceTime\n+optional.",
            "name": "podLogOptions.tailLines",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of bytes to read from the server before terminating the\nlog output. This may not display a complete final line of logging, and may return\nslightly more or slightly less than the specified limit.\n+optional.",
            "name": "podLogOptions.limitBytes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the\nserving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver\nand the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real\nkubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the\nconnection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept\nthe actual log data coming from the real kubelet).\n+optional.",
            "name": "podLogOptions.insecureSkipTLSVerifyBackend",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of pipeline.LogEntry",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/pipeline.LogEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/sensors/{namespace}": {
      "get": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_WatchSensors",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of sensor.SensorWatchEvent",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/sensor.SensorWatchEvent"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/sensors/{namespace}/logs": {
      "get": {
        "tags": [
          "SensorService"
        ],
        "operationId": "SensorService_SensorsLogs",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "optional - only return entries for this sensor name.",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional - only return entries for this trigger.",
            "name": "triggerName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "option - only return entries where `msg` contains this regular expressions.",
            "name": "grep",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.\n+optional.",
            "name": "podLogOptions.container",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Follow the log stream of the pod. Defaults to false.\n+optional.",
            "name": "podLogOptions.follow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return previous terminated container logs. Defaults to false.\n+optional.",
            "name": "podLogOptions.previous",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "A relative time in seconds before the current time from which to show logs. If this value\nprecedes the time a pod was started, only logs since the pod start will be returned.\nIf this value is in the future, no logs will be returned.\nOnly one of sinceSeconds or sinceTime may be specified.\n+optional.",
            "name": "podLogOptions.sinceSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "name": "podLogOptions.sinceTime.seconds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "name": "podLogOptions.sinceTime.nanos",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line\nof log output. Defaults to false.\n+optional.",
            "name": "podLogOptions.timestamps",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of lines from the end of the logs to show. If not specified,\nlogs are shown from the creation of the container or sinceSeconds or sinceTime\n+optional.",
            "name": "podLogOptions.tailLines",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of bytes to read from the server before terminating the\nlog output. This may not display a complete final line of logging, and may return\nslightly more or slightly less than the specified limit.\n+optional.",
            "name": "podLogOptions.limitBytes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the\nserving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver\nand the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real\nkubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the\nconnection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept\nthe actual log data coming from the real kubelet).\n+optional.",
            "name": "podLogOptions.insecureSkipTLSVerifyBackend",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of sensor.LogEntry",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/sensor.LogEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/stream/steps/{namespace}": {
      "get": {
        "tags": [
          "PipelineService"
        ],
        "operationId": "PipelineService_WatchSteps",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of pipeline.StepWatchEvent",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/pipeline.StepWatchEvent"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/userinfo": {
      "get": {
        "tags": [
          "InfoService"
        ],
        "operationId": "InfoService_GetUserInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GetUserInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/version": {
      "get": {
        "tags": [
          "InfoService"
        ],
        "operationId": "InfoService_GetVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Version"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflow-event-bindings/{namespace}": {
      "get": {
        "tags": [
          "EventService"
        ],
        "operationId": "EventService_ListWorkflowEventBindings",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowEventBindingList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflow-events/{namespace}": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_WatchWorkflows",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          },
          {
            "type": "string",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of io.argoproj.workflow.v1alpha1.WorkflowWatchEvent",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowWatchEvent"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflow-templates/{namespace}": {
      "get": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_ListWorkflowTemplates",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_CreateWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflow-templates/{namespace}/lint": {
      "post": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_LintWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateLintRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflow-templates/{namespace}/{name}": {
      "get": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_GetWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_UpdateWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "DEPRECATED: This field is ignored.",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowTemplateService"
        ],
        "operationId": "WorkflowTemplateService_DeleteWorkflowTemplate",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_ListWorkflows",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their labels.\nDefaults to everything.\n+optional.",
            "name": "listOptions.labelSelector",
            "in": "query"
          },
          {
            "type": "string",
            "description": "A selector to restrict the list of returned objects by their fields.\nDefaults to everything.\n+optional.",
            "name": "listOptions.fieldSelector",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Watch for changes to the described resources and return them as a stream of\nadd, update, and remove notifications. Specify resourceVersion.\n+optional.",
            "name": "listOptions.watch",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "allowWatchBookmarks requests watch events with type \"BOOKMARK\".\nServers that do not implement bookmarks may ignore this flag and\nbookmarks are sent at the server's discretion. Clients should not\nassume bookmarks are returned at any specific interval, nor may they\nassume the server will send any BOOKMARK event during a session.\nIf this is not a watch, this field is ignored.\n+optional.",
            "name": "listOptions.allowWatchBookmarks",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resourceVersionMatch determines how resourceVersion is applied to list calls.\nIt is highly recommended that resourceVersionMatch be set for list calls where\nresourceVersion is set\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "listOptions.resourceVersionMatch",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Timeout for the list/watch call.\nThis limits the duration of the call, regardless of any activity or inactivity.\n+optional.",
            "name": "listOptions.timeoutSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "limit is a maximum number of responses to return for a list call. If more items exist, the\nserver will set the `continue` field on the list metadata to a value that can be used with the\nsame initial query to retrieve the next set of results. Setting a limit may return fewer than\nthe requested amount of items (up to zero items) in the event all requested objects are\nfiltered out and clients should only use the presence of the continue field to determine whether\nmore results are available. Servers may choose not to support the limit argument and will return\nall of the available results. If limit is specified and the continue field is empty, clients may\nassume that no more results are available. This field is not supported if watch is true.\n\nThe server guarantees that the objects returned when using continue will be identical to issuing\na single list call without a limit - that is, no objects created, modified, or deleted after the\nfirst request is issued will be included in any subsequent continued requests. This is sometimes\nreferred to as a consistent snapshot, and ensures that a client that is using limit to receive\nsmaller chunks of a very large result can ensure they see all possible objects. If objects are\nupdated during a chunked list the version of the object that was present at the time the first list\nresult was calculated is returned.",
            "name": "listOptions.limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The continue option should be set when retrieving more results from the server. Since this value is\nserver defined, clients may only use the continue value from a previous query result with identical\nquery parameters (except for the value of continue) and the server may reject a continue value it\ndoes not recognize. If the specified continue value is no longer valid whether due to expiration\n(generally five to fifteen minutes) or a configuration change on the server, the server will\nrespond with a 410 ResourceExpired error together with a continue token. If the client needs a\nconsistent list, it must restart their list without the continue field. Otherwise, the client may\nsend another list request with the token received with the 410 error, the server will respond with\na list starting from the next key, but from the latest snapshot, which is inconsistent from the\nprevious list results - objects that are created, modified, or deleted after the first list request\nwill be included in the response, as long as their keys are after the \"next key\".\n\nThis field is not supported when watch is true. Clients may start a watch from the last\nresourceVersion value returned by the server and not miss any modifications.",
            "name": "listOptions.continue",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fields to be included or excluded in the response. e.g. \"items.spec,items.status.phase\", \"-items.status.nodes\".",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_CreateWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/lint": {
      "post": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_LintWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowLintRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/submit": {
      "post": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_SubmitWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSubmitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_GetWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "resourceVersion sets a constraint on what resource versions a request may be served from.\nSee https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versions for\ndetails.\n\nDefaults to unset\n+optional",
            "name": "getOptions.resourceVersion",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Fields to be included or excluded in the response. e.g. \"spec,status.phase\", \"-status.nodes\".",
            "name": "fields",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_DeleteWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "format": "int64",
            "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer.\nThe value zero indicates delete immediately. If this value is nil, the default grace period for the\nspecified type will be used.\nDefaults to a per object value if not specified. zero means delete immediately.\n+optional.",
            "name": "deleteOptions.gracePeriodSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target UID.\n+optional.",
            "name": "deleteOptions.preconditions.uid",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Specifies the target ResourceVersion\n+optional.",
            "name": "deleteOptions.preconditions.resourceVersion",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7.\nShould the dependent objects be orphaned. If true/false, the \"orphan\"\nfinalizer will be added to/removed from the object's finalizers list.\nEither this field or PropagationPolicy may be set, but not both.\n+optional.",
            "name": "deleteOptions.orphanDependents",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Whether and how garbage collection will be performed.\nEither this field or OrphanDependents may be set, but not both.\nThe default policy is decided by the existing finalizer set in the\nmetadata.finalizers and the resource-specific default policy.\nAcceptable values are: 'Orphan' - orphan the dependents; 'Background' -\nallow the garbage collector to delete the dependents in the background;\n'Foreground' - a cascading policy that deletes all dependents in the\nforeground.\n+optional.",
            "name": "deleteOptions.propagationPolicy",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional.",
            "name": "deleteOptions.dryRun",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/log": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_WorkflowLogs",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "podName",
            "in": "query"
          },
          {
            "type": "string",
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.\n+optional.",
            "name": "logOptions.container",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Follow the log stream of the pod. Defaults to false.\n+optional.",
            "name": "logOptions.follow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return previous terminated container logs. Defaults to false.\n+optional.",
            "name": "logOptions.previous",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "A relative time in seconds before the current time from which to show logs. If this value\nprecedes the time a pod was started, only logs since the pod start will be returned.\nIf this value is in the future, no logs will be returned.\nOnly one of sinceSeconds or sinceTime may be specified.\n+optional.",
            "name": "logOptions.sinceSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "name": "logOptions.sinceTime.seconds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "name": "logOptions.sinceTime.nanos",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line\nof log output. Defaults to false.\n+optional.",
            "name": "logOptions.timestamps",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of lines from the end of the logs to show. If not specified,\nlogs are shown from the creation of the container or sinceSeconds or sinceTime\n+optional.",
            "name": "logOptions.tailLines",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of bytes to read from the server before terminating the\nlog output. This may not display a complete final line of logging, and may return\nslightly more or slightly less than the specified limit.\n+optional.",
            "name": "logOptions.limitBytes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the\nserving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver\nand the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real\nkubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the\nconnection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept\nthe actual log data coming from the real kubelet).\n+optional.",
            "name": "logOptions.insecureSkipTLSVerifyBackend",
            "in": "query"
          },
          {
            "type": "string",
            "name": "grep",
            "in": "query"
          },
          {
            "type": "string",
            "name": "selector",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of io.argoproj.workflow.v1alpha1.LogEntry",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LogEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/resubmit": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_ResubmitWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowResubmitRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/resume": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_ResumeWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowResumeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/retry": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_RetryWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowRetryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/set": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_SetWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/stop": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_StopWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowStopRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/suspend": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_SuspendWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSuspendRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/terminate": {
      "put": {
        "tags": [
          "WorkflowService"
        ],
        "operationId": "WorkflowService_TerminateWorkflow",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTerminateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/api/v1/workflows/{namespace}/{name}/{podName}/log": {
      "get": {
        "tags": [
          "WorkflowService"
        ],
        "summary": "DEPRECATED: Cannot work via HTTP if podName is an empty string. Use WorkflowLogs.",
        "operationId": "WorkflowService_PodLogs",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "podName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "The container for which to stream logs. Defaults to only container if there is one container in the pod.\n+optional.",
            "name": "logOptions.container",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Follow the log stream of the pod. Defaults to false.\n+optional.",
            "name": "logOptions.follow",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return previous terminated container logs. Defaults to false.\n+optional.",
            "name": "logOptions.previous",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "A relative time in seconds before the current time from which to show logs. If this value\nprecedes the time a pod was started, only logs since the pod start will be returned.\nIf this value is in the future, no logs will be returned.\nOnly one of sinceSeconds or sinceTime may be specified.\n+optional.",
            "name": "logOptions.sinceSeconds",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "name": "logOptions.sinceTime.seconds",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int32",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "name": "logOptions.sinceTime.nanos",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning of every line\nof log output. Defaults to false.\n+optional.",
            "name": "logOptions.timestamps",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of lines from the end of the logs to show. If not specified,\nlogs are shown from the creation of the container or sinceSeconds or sinceTime\n+optional.",
            "name": "logOptions.tailLines",
            "in": "query"
          },
          {
            "type": "string",
            "format": "int64",
            "description": "If set, the number of bytes to read from the server before terminating the\nlog output. This may not display a complete final line of logging, and may return\nslightly more or slightly less than the specified limit.\n+optional.",
            "name": "logOptions.limitBytes",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "insecureSkipTLSVerifyBackend indicates that the apiserver should not confirm the validity of the\nserving certificate of the backend it is connecting to.  This will make the HTTPS connection between the apiserver\nand the backend insecure. This means the apiserver cannot verify the log data it is receiving came from the real\nkubelet.  If the kubelet is configured to verify the apiserver's TLS credentials, it does not mean the\nconnection to the real kubelet is vulnerable to a man in the middle attack (e.g. an attacker could not intercept\nthe actual log data coming from the real kubelet).\n+optional.",
            "name": "logOptions.insecureSkipTLSVerifyBackend",
            "in": "query"
          },
          {
            "type": "string",
            "name": "grep",
            "in": "query"
          },
          {
            "type": "string",
            "name": "selector",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "title": "Stream result of io.argoproj.workflow.v1alpha1.LogEntry",
              "properties": {
                "error": {
                  "$ref": "#/definitions/grpc.gateway.runtime.StreamError"
                },
                "result": {
                  "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LogEntry"
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/artifacts-by-uid/{uid}/{nodeId}/{artifactName}": {
      "get": {
        "tags": [
          "ArtifactService"
        ],
        "summary": "Get an output artifact by UID.",
        "operationId": "ArtifactService_GetOutputArtifactByUID",
        "parameters": [
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "nodeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "artifactName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An artifact file."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/artifacts/{namespace}/{name}/{nodeId}/{artifactName}": {
      "get": {
        "tags": [
          "ArtifactService"
        ],
        "summary": "Get an output artifact.",
        "operationId": "ArtifactService_GetOutputArtifact",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "nodeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "artifactName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An artifact file.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/input-artifacts-by-uid/{uid}/{nodeId}/{artifactName}": {
      "get": {
        "tags": [
          "ArtifactService"
        ],
        "summary": "Get an input artifact by UID.",
        "operationId": "ArtifactService_GetInputArtifactByUID",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "uid",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "nodeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "artifactName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An artifact file.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    },
    "/input-artifacts/{namespace}/{name}/{nodeId}/{artifactName}": {
      "get": {
        "tags": [
          "ArtifactService"
        ],
        "summary": "Get an input artifact.",
        "operationId": "ArtifactService_GetInputArtifact",
        "parameters": [
          {
            "type": "string",
            "name": "namespace",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "nodeId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "artifactName",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "An artifact file."
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/grpc.gateway.runtime.Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "eventsource.CreateEventSourceRequest": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "eventsource.EventSourceDeletedResponse": {
      "type": "object"
    },
    "eventsource.EventSourceWatchEvent": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "eventsource.LogEntry": {
      "type": "object",
      "title": "structured log entry",
      "properties": {
        "eventName": {
          "type": "string",
          "title": "optional - the event name (e.g. `example`)"
        },
        "eventSourceName": {
          "type": "string"
        },
        "eventSourceType": {
          "type": "string",
          "title": "optional - the event source type (e.g. `webhook`)"
        },
        "level": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "eventsource.UpdateEventSourceRequest": {
      "type": "object",
      "properties": {
        "eventSource": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AWSCredentials": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "secretAccessKey": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "sessionToken": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AWSEndpoint": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep": {
      "type": "object",
      "properties": {
        "resources": {
          "title": "+kubebuilder:default={limits: {\"cpu\": \"500m\", \"memory\": \"256Mi\"}, requests: {\"cpu\": \"100m\", \"memory\": \"64Mi\"}}",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractVolumeSource": {
      "type": "object",
      "properties": {
        "awsElasticBlockStore": {
          "title": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "title": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "title": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "title": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "title": "Cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.io.k8s.mysql-cinder-pd/README.md\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "title": "ConfigMap represents a configMap that should populate this volume\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "title": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "title": "DownwardAPI represents downward API about the pod that should populate this volume\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "title": "EmptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "Ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.\n\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "title": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "title": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "title": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "title": "GCEPersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "title": "GitRepo represents a git repository at a particular revision.\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "title": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.io.k8s.volumes/glusterfs/README.md\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "title": "HostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n---\nTODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not\nmount host directories as read/write.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "title": "ISCSI represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.io.k8s.volumes/iscsi/README.md\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "nfs": {
          "title": "NFS represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "title": "PersistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "title": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "title": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "title": "Items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "title": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "title": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.io.k8s.volumes/rbd/README.md\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "title": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "title": "Secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "title": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "title": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Backoff": {
      "type": "object",
      "properties": {
        "FactorPercentage": {
          "type": "integer",
          "title": "+kubebuilder:default=200"
        },
        "cap": {
          "title": "+kubebuilder:default=\"0ms\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "duration": {
          "title": "+kubebuilder:default=\"100ms\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "jitterPercentage": {
          "type": "integer",
          "title": "the amount of jitter per step, typically 10-20%, \u003e100% is valid, but strange\n+kubebuilder:default=10"
        },
        "steps": {
          "type": "string",
          "format": "uint64",
          "title": "the number of backoff steps, zero means no retries\n+kubebuilder:default=20"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Cat": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Code": {
      "type": "object",
      "properties": {
        "image": {
          "description": "Image is used in preference to Runtime.",
          "type": "string"
        },
        "runtime": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Container": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "image": {
          "type": "string"
        },
        "in": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Interface"
        },
        "resources": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Cron": {
      "type": "object",
      "properties": {
        "layout": {
          "type": "string",
          "title": "+kubebuilder:default=\"2006-01-02T15:04:05Z07:00\""
        },
        "schedule": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBDataSource": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBDataSourceFrom"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBDataSourceFrom": {
      "type": "object",
      "properties": {
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBSink": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLAction"
          }
        },
        "database": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Database"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBSource": {
      "type": "object",
      "properties": {
        "commitInterval": {
          "title": "+kubebuilder:default=\"5s\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "database": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Database"
        },
        "initSchema": {
          "type": "boolean",
          "title": "+kubebuilder:default=true"
        },
        "offsetColumn": {
          "type": "string"
        },
        "pollInterval": {
          "title": "+kubebuilder:default=\"1s\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Database": {
      "type": "object",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBDataSource"
        },
        "driver": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Dedupe": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        },
        "maxSize": {
          "title": "MaxSize is the maximum number of entries to keep in the in-memory database used to store recent UIDs.\nLarger number mean bigger windows of time for dedupe, but greater memory usage.\n+kubebuilder:default=\"1M\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "uid": {
          "type": "string",
          "title": "+kubebuilder:default=\"sha1(msg)\""
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Expand": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Filter": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Flatten": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Git": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "title": "+kubebuilder:default=main"
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          }
        },
        "image": {
          "type": "string"
        },
        "insecureIgnoreHostKey": {
          "type": "boolean",
          "title": "InsecureIgnoreHostKey is the bool value for ignoring check for host key"
        },
        "passwordSecret": {
          "title": "PasswordSecret is the secret selector to the repository password",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "path": {
          "description": "+kubebuilder:default=.",
          "type": "string"
        },
        "sshPrivateKeySecret": {
          "title": "SSHPrivateKeySecret is the secret selector to the repository ssh private key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "url": {
          "type": "string"
        },
        "usernameSecret": {
          "title": "UsernameSecret is the secret selector to the repository username",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Group": {
      "type": "object",
      "properties": {
        "endOfGroup": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "storage": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Storage"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTP": {
      "type": "object"
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPHeaderSource"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPHeaderSource": {
      "type": "object",
      "properties": {
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPSink": {
      "type": "object",
      "properties": {
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPHeader"
          }
        },
        "insecureSkipVerify": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPSource": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Interface": {
      "type": "object",
      "properties": {
        "fifo": {
          "type": "boolean"
        },
        "http": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTP"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStream": {
      "type": "object",
      "properties": {
        "auth": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.NATSAuth"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "natsUrl": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStreamSink": {
      "type": "object",
      "properties": {
        "jetstream": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStream"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStreamSource": {
      "type": "object",
      "properties": {
        "jetstream": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStream"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Kafka": {
      "type": "object",
      "properties": {
        "kafkaConfig": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaConfig"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "topic": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaConfig": {
      "type": "object",
      "properties": {
        "brokers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxMessageBytes": {
          "type": "integer"
        },
        "net": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaNET"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaNET": {
      "type": "object",
      "properties": {
        "sasl": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SASL"
        },
        "tls": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.TLS"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaSink": {
      "type": "object",
      "properties": {
        "acks": {
          "title": "+kubebuilder:default=\"all\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "async": {
          "type": "boolean"
        },
        "batchSize": {
          "title": "+kubebuilder:default=\"100Ki\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "compressionType": {
          "type": "string",
          "title": "+kubebuilder:default=\"lz4\""
        },
        "enableIdempotence": {
          "type": "boolean",
          "title": "+kubebuilder:default=true"
        },
        "kafka": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Kafka"
        },
        "linger": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "maxInflight": {
          "type": "integer",
          "title": "The maximum number of messages to be in-flight when async.\n+kubebuilder:default=20"
        },
        "messageTimeout": {
          "title": "+kubebuilder:default=\"30s\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaSource": {
      "type": "object",
      "properties": {
        "fetchMin": {
          "title": "+kubebuilder:default=\"100Ki\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "fetchWaitMax": {
          "title": "+kubebuilder:default=\"500ms\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "groupId": {
          "description": "GroupID is the consumer group ID. If not specified, a unique deterministic group ID is generated.",
          "type": "string"
        },
        "kafka": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Kafka"
        },
        "startOffset": {
          "type": "string",
          "title": "+kubebuilder:default=Last"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Log": {
      "type": "object",
      "properties": {
        "truncate": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Map": {
      "type": "object",
      "properties": {
        "abstractStep": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractStep"
        },
        "expression": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.NATSAuth": {
      "type": "object",
      "properties": {
        "token": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Pipeline": {
      "type": "object",
      "title": "+kubebuilder:object:root=true\n+kubebuilder:resource:shortName=pl\n+kubebuilder:subresource:status\n+kubebuilder:printcolumn:name=\"Phase\",type=string,JSONPath=`.status.phase`\n+kubebuilder:printcolumn:name=\"Message\",type=string,JSONPath=`.status.message`",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineSpec"
        },
        "status": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineStatus"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Pipeline"
          }
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineSpec": {
      "type": "object",
      "properties": {
        "deletionDelay": {
          "title": "+kubebuilder:default=\"72h\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "steps": {
          "type": "array",
          "title": "+patchStrategy=merge\n+patchMergeKey=name",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.StepSpec"
          }
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.PipelineStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Condition"
          }
        },
        "lastUpdated": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3": {
      "type": "object",
      "properties": {
        "bucket": {
          "type": "string"
        },
        "credentials": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AWSCredentials"
        },
        "endpoint": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AWSEndpoint"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3Sink": {
      "type": "object",
      "properties": {
        "s3": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3Source": {
      "type": "object",
      "properties": {
        "concurrency": {
          "type": "integer",
          "title": "+kubebuilder:default=1"
        },
        "pollPeriod": {
          "title": "+kubebuilder:default=\"1m\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "s3": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SASL": {
      "type": "object",
      "properties": {
        "mechanism": {
          "type": "string",
          "title": "SASLMechanism is the name of the enabled SASL mechanism.\nPossible values: OAUTHBEARER, PLAIN (defaults to PLAIN).\n+optional"
        },
        "password": {
          "title": "Password for SASL/PLAIN authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "user": {
          "title": "User is the authentication identity (authcid) to present for\nSASL/PLAIN or SASL/SCRAM authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLAction": {
      "type": "object",
      "properties": {
        "onError": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLStatement"
        },
        "onRecordNotFound": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLStatement"
        },
        "statement": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLStatement"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.SQLStatement": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sql": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.STAN": {
      "type": "object",
      "properties": {
        "auth": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.NATSAuth"
        },
        "clusterId": {
          "type": "string"
        },
        "maxInflight": {
          "type": "integer",
          "title": "Max inflight messages when subscribing to the stan server, which means how many messages\nbetween commits, therefore potential duplicates during disruption\n+kubebuilder:default=20"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "natsMonitoringUrl": {
          "type": "string"
        },
        "natsUrl": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "subjectPrefix": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Scale": {
      "type": "object",
      "properties": {
        "desiredReplicas": {
          "description": "An expression to determine the number of replicas. Must evaluation to an `int`.",
          "type": "string"
        },
        "peekDelay": {
          "type": "string",
          "title": "An expression to determine the delay for peeking. Maybe string or duration, e.g. `\"4m\"`\n+kubebuilder:default=\"defaultPeekDelay\""
        },
        "scalingDelay": {
          "type": "string",
          "title": "An expression to determine the delay for scaling. Maybe string or duration, e.g. `\"1m\"`\n+kubebuilder:default=\"defaultScalingDelay\""
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Sidecar": {
      "type": "object",
      "properties": {
        "resources": {
          "title": "+kubebuilder:default={limits: {\"cpu\": \"500m\", \"memory\": \"256Mi\"}, requests: {\"cpu\": \"100m\", \"memory\": \"64Mi\"}}",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Sink": {
      "type": "object",
      "properties": {
        "db": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBSink"
        },
        "deadLetterQueue": {
          "type": "boolean"
        },
        "http": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPSink"
        },
        "jetstream": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStreamSink"
        },
        "kafka": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaSink"
        },
        "log": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Log"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "s3": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3Sink"
        },
        "stan": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.STAN"
        },
        "volume": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.VolumeSink"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Source": {
      "type": "object",
      "properties": {
        "cron": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Cron"
        },
        "db": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.DBSource"
        },
        "http": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.HTTPSource"
        },
        "jetstream": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.JetStreamSource"
        },
        "kafka": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.KafkaSource"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "retry": {
          "title": "+kubebuilder:default={duration: \"100ms\", steps: 20, factorPercentage: 200, jitterPercentage: 10}",
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Backoff"
        },
        "s3": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.S3Source"
        },
        "stan": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.STAN"
        },
        "volume": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.VolumeSource"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Step": {
      "type": "object",
      "title": "+kubebuilder:object:root=true\n+kubebuilder:subresource:status\n+kubebuilder:subresource:scale:specpath=.spec.replicas,statuspath=.status.replicas,selectorpath=.status.selector\n+kubebuilder:printcolumn:name=\"Phase\",type=string,JSONPath=`.status.phase`\n+kubebuilder:printcolumn:name=\"Reason\",type=string,JSONPath=`.status.reason`\n+kubebuilder:printcolumn:name=\"Message\",type=string,JSONPath=`.status.message`\n+kubebuilder:printcolumn:name=\"Desired\",type=string,JSONPath=`.spec.replicas`\n+kubebuilder:printcolumn:name=\"Current\",type=string,JSONPath=`.status.replicas`",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.StepSpec"
        },
        "status": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.StepStatus"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.StepSpec": {
      "type": "object",
      "properties": {
        "affinity": {
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "cat": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Cat"
        },
        "code": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Code"
        },
        "container": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Container"
        },
        "dedupe": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Dedupe"
        },
        "expand": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Expand"
        },
        "filter": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Filter"
        },
        "flatten": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Flatten"
        },
        "git": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Git"
        },
        "group": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Group"
        },
        "imagePullSecrets": {
          "type": "array",
          "title": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images\nin pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets\ncan be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet.\nMore info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod\n+patchStrategy=merge\n+patchMergeKey=name",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "map": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Map"
        },
        "metadata": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Metadata"
        },
        "name": {
          "type": "string",
          "title": "+kubebuilder:default=default"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "replicas": {
          "type": "integer",
          "title": "+kubebuilder:default=1"
        },
        "restartPolicy": {
          "type": "string",
          "title": "+kubebuilder:default=OnFailure"
        },
        "scale": {
          "title": "+kubebuilder:default={peekDelay: \"defaultPeekDelay\", scalingDelay: \"defaultScalingDelay\", desiredReplicas: \"\"}",
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Scale"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "+kubebuilder:default=pipeline"
        },
        "sidecar": {
          "title": "+kubebuilder:default={resources: {limits: {\"cpu\": \"500m\", \"memory\": \"256Mi\"}, requests: {\"cpu\": \"100m\", \"memory\": \"64Mi\"}}}",
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Sidecar"
        },
        "sinks": {
          "type": "array",
          "title": "+patchStrategy=merge\n+patchMergeKey=name",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Sink"
          }
        },
        "sources": {
          "type": "array",
          "title": "+patchStrategy=merge\n+patchMergeKey=name",
          "items": {
            "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Source"
          }
        },
        "terminator": {
          "type": "boolean"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "volumes": {
          "type": "array",
          "title": "+patchStrategy=merge\n+patchMergeKey=name",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.StepStatus": {
      "type": "object",
      "properties": {
        "lastScaledAt": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "replicas": {
          "type": "integer"
        },
        "selector": {
          "type": "string"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Storage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "subPath": {
          "type": "string",
          "title": "volume name"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.TLS": {
      "type": "object",
      "properties": {
        "caCertSecret": {
          "title": "CACertSecret refers to the secret that contains the CA cert",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "certSecret": {
          "title": "CertSecret refers to the secret that contains the cert",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "keySecret": {
          "title": "KeySecret refers to the secret that contains the key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.VolumeSink": {
      "type": "object",
      "properties": {
        "abstractVolumeSource": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractVolumeSource"
        }
      }
    },
    "github.com.argoproj_labs.argo_dataflow.api.v1alpha1.VolumeSource": {
      "type": "object",
      "properties": {
        "abstractVolumeSource": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.AbstractVolumeSource"
        },
        "concurrency": {
          "type": "integer",
          "title": "+kubebuilder:default=1"
        },
        "pollPeriod": {
          "title": "+kubebuilder:default=\"1m\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Duration"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "grpc.gateway.runtime.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "grpc.gateway.runtime.StreamError": {
      "type": "object",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        },
        "grpc_code": {
          "type": "integer"
        },
        "http_code": {
          "type": "integer"
        },
        "http_status": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AMQPConsumeConfig": {
      "type": "object",
      "title": "AMQPConsumeConfig holds the configuration to immediately starts delivering queued messages\n+k8s:openapi-gen=true",
      "properties": {
        "autoAck": {
          "type": "boolean",
          "title": "AutoAck when true, the server will acknowledge deliveries to this consumer prior to writing\nthe delivery to the network\n+optional"
        },
        "consumerTag": {
          "type": "string",
          "title": "ConsumerTag is the identity of the consumer included in every delivery\n+optional"
        },
        "exclusive": {
          "type": "boolean",
          "title": "Exclusive when true, the server will ensure that this is the sole consumer from this queue\n+optional"
        },
        "noLocal": {
          "type": "boolean",
          "title": "NoLocal flag is not supported by RabbitMQ\n+optional"
        },
        "noWait": {
          "type": "boolean",
          "title": "NowWait when true, do not wait for the server to confirm the request and immediately begin deliveries\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AMQPEventSource": {
      "type": "object",
      "title": "AMQPEventSource refers to an event-source for AMQP stream events",
      "properties": {
        "auth": {
          "title": "Auth hosts secret selectors for username and password\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.BasicAuth"
        },
        "connectionBackoff": {
          "title": "Backoff holds parameters applied to connection.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "consume": {
          "title": "Consume holds the configuration to immediately starts delivering queued messages\nFor more information, visit https://godoc.org/github.com/streadway/amqp#Channel.Consume\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AMQPConsumeConfig"
        },
        "exchangeDeclare": {
          "title": "ExchangeDeclare holds the configuration for the exchange on the server\nFor more information, visit https://godoc.org/github.com/streadway/amqp#Channel.ExchangeDeclare\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AMQPExchangeDeclareConfig"
        },
        "exchangeName": {
          "type": "string",
          "title": "ExchangeName is the exchange name\nFor more information, visit https://www.rabbitmq.com/tutorials/amqp-concepts.html"
        },
        "exchangeType": {
          "type": "string",
          "title": "ExchangeType is rabbitmq exchange type"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queueBind": {
          "title": "QueueBind holds the configuration that binds an exchange to a queue so that publishings to the\nexchange will be routed to the queue when the publishing routing key matches the binding routing key\nFor more information, visit https://godoc.org/github.com/streadway/amqp#Channel.QueueBind\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AMQPQueueBindConfig"
        },
        "queueDeclare": {
          "title": "QueueDeclare holds the configuration of a queue to hold messages and deliver to consumers.\nDeclaring creates a queue if it doesn't already exist, or ensures that an existing queue matches\nthe same parameters\nFor more information, visit https://godoc.org/github.com/streadway/amqp#Channel.QueueDeclare\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AMQPQueueDeclareConfig"
        },
        "routingKey": {
          "type": "string",
          "title": "Routing key for bindings"
        },
        "tls": {
          "title": "TLS configuration for the amqp client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "url": {
          "type": "string",
          "title": "URL for rabbitmq service"
        },
        "urlSecret": {
          "title": "URLSecret is secret reference for rabbitmq service URL",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AMQPExchangeDeclareConfig": {
      "type": "object",
      "title": "AMQPExchangeDeclareConfig holds the configuration for the exchange on the server\n+k8s:openapi-gen=true",
      "properties": {
        "autoDelete": {
          "type": "boolean",
          "title": "AutoDelete removes the exchange when no bindings are active\n+optional"
        },
        "durable": {
          "type": "boolean",
          "title": "Durable keeps the exchange also after the server restarts\n+optional"
        },
        "internal": {
          "type": "boolean",
          "title": "Internal when true does not accept publishings\n+optional"
        },
        "noWait": {
          "type": "boolean",
          "title": "NowWait when true does not wait for a confirmation from the server\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AMQPQueueBindConfig": {
      "type": "object",
      "title": "AMQPQueueBindConfig holds the configuration that binds an exchange to a queue so that publishings to the\nexchange will be routed to the queue when the publishing routing key matches the binding routing key\n+k8s:openapi-gen=true",
      "properties": {
        "noWait": {
          "type": "boolean",
          "title": "NowWait false and the queue could not be bound, the channel will be closed with an error\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AMQPQueueDeclareConfig": {
      "type": "object",
      "title": "AMQPQueueDeclareConfig holds the configuration of a queue to hold messages and deliver to consumers.\nDeclaring creates a queue if it doesn't already exist, or ensures that an existing queue matches\nthe same parameters\n+k8s:openapi-gen=true",
      "properties": {
        "arguments": {
          "type": "string",
          "title": "Arguments of a queue (also known as \"x-arguments\") used for optional features and plugins\n+optional"
        },
        "autoDelete": {
          "type": "boolean",
          "title": "AutoDelete removes the queue when no consumers are active\n+optional"
        },
        "durable": {
          "type": "boolean",
          "title": "Durable keeps the queue also after the server restarts\n+optional"
        },
        "exclusive": {
          "type": "boolean",
          "title": "Exclusive sets the queues to be accessible only by the connection that declares them and will be\ndeleted wgen the connection closes\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the queue. If empty the server auto-generates a unique name for this queue\n+optional"
        },
        "noWait": {
          "type": "boolean",
          "title": "NowWait when true, the queue assumes to be declared on the server\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AWSLambdaTrigger": {
      "type": "object",
      "title": "AWSLambdaTrigger refers to specification of the trigger to invoke an AWS Lambda function",
      "properties": {
        "accessKey": {
          "title": "AccessKey refers K8s secret containing aws access key\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "functionName": {
          "description": "FunctionName refers to the name of the function to invoke.",
          "type": "string"
        },
        "invocationType": {
          "description": "Choose from the following options.\n\n   * RequestResponse (default) - Invoke the function synchronously. Keep\n   the connection open until the function returns a response or times out.\n   The API response includes the function response and additional data.\n\n   * Event - Invoke the function asynchronously. Send events that fail multiple\n   times to the function's dead-letter queue (if it's configured). The API\n   response only includes a status code.\n\n   * DryRun - Validate parameter values and verify that the user or role\n   has permission to invoke the function.\n+optional",
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of key-value extracted from event's payload that are applied to\nthe trigger resource.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "region": {
          "type": "string",
          "title": "Region is AWS region"
        },
        "roleARN": {
          "type": "string",
          "title": "RoleARN is the Amazon Resource Name (ARN) of the role to assume.\n+optional"
        },
        "secretKey": {
          "title": "SecretKey refers K8s secret containing aws secret key\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Amount": {
      "description": "Amount represent a numeric amount.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ArgoWorkflowTrigger": {
      "type": "object",
      "title": "ArgoWorkflowTrigger is the trigger for the Argo Workflow",
      "properties": {
        "operation": {
          "type": "string",
          "title": "Operation refers to the type of operation performed on the argo workflow resource.\nDefault value is Submit.\n+optional"
        },
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of parameters to pass to resolved Argo Workflow object",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "source": {
          "title": "Source of the K8s resource file(s)",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ArtifactLocation"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ArtifactLocation": {
      "type": "object",
      "title": "ArtifactLocation describes the source location for an external artifact",
      "properties": {
        "configmap": {
          "title": "Configmap that stores the artifact",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "file": {
          "title": "File artifact is artifact stored in a file",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.FileArtifact"
        },
        "git": {
          "title": "Git repository hosting the artifact",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.GitArtifact"
        },
        "inline": {
          "type": "string",
          "title": "Inline artifact is embedded in sensor spec as a string"
        },
        "resource": {
          "title": "Resource is generic template for K8s resource",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Resource"
        },
        "s3": {
          "title": "S3 compliant artifact",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.S3Artifact"
        },
        "url": {
          "title": "URL to fetch the artifact from",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.URLArtifact"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AzureEventHubsTrigger": {
      "type": "object",
      "title": "AzureEventHubsTrigger refers to specification of the Azure Event Hubs Trigger",
      "properties": {
        "fqdn": {
          "type": "string",
          "title": "FQDN refers to the namespace dns of Azure Event Hubs to be used i.e. \u003cnamespace\u003e.servicebus.windows.net"
        },
        "hubName": {
          "type": "string",
          "title": "HubName refers to the Azure Event Hub to send events to"
        },
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of key-value extracted from event's payload that are applied to\nthe trigger resource.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "sharedAccessKey": {
          "title": "SharedAccessKey refers to a K8s secret containing the primary key for the",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "sharedAccessKeyName": {
          "title": "SharedAccessKeyName refers to the name of the Shared Access Key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.AzureEventsHubEventSource": {
      "type": "object",
      "title": "AzureEventsHubEventSource describes the event source for azure events hub\nMore info at https://docs.microsoft.com/en-us/azure/event-hubs/",
      "properties": {
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "fqdn": {
          "type": "string",
          "title": "FQDN of the EventHubs namespace you created\nMore info at https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-get-connection-string"
        },
        "hubName": {
          "type": "string",
          "title": "Event Hub path/name"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "sharedAccessKey": {
          "title": "SharedAccessKey is the generated value of the key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "sharedAccessKeyName": {
          "title": "SharedAccessKeyName is the name you chose for your application's SAS keys",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Backoff": {
      "type": "object",
      "title": "Backoff for an operation",
      "properties": {
        "duration": {
          "title": "The initial duration in nanoseconds or strings like \"1s\", \"3m\"\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Int64OrString"
        },
        "factor": {
          "title": "Duration is multiplied by factor each iteration\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Amount"
        },
        "jitter": {
          "title": "The amount of jitter applied each iteration\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Amount"
        },
        "steps": {
          "type": "integer",
          "title": "Exit with error after this many steps\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BasicAuth": {
      "type": "object",
      "title": "BasicAuth contains the reference to K8s secrets that holds the username and password",
      "properties": {
        "password": {
          "description": "Password refers to the Kubernetes secret that holds the password required for basic auth.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "username": {
          "description": "Username refers to the Kubernetes secret that holds the username required for basic auth.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BitbucketAuth": {
      "type": "object",
      "title": "BitbucketAuth holds the different auth strategies for connecting to Bitbucket",
      "properties": {
        "basic": {
          "title": "Basic is BasicAuth auth strategy.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.BitbucketBasicAuth"
        },
        "token": {
          "title": "OAuthToken refers to the K8s secret that holds the OAuth Bearer token.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BitbucketBasicAuth": {
      "type": "object",
      "title": "BasicAuth holds the information required to authenticate user via basic auth mechanism",
      "properties": {
        "password": {
          "description": "Password refers to the K8s secret that holds the password.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "username": {
          "description": "Username refers to the K8s secret that holds the username.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BitbucketEventSource": {
      "type": "object",
      "title": "BitbucketEventSource describes the event source for Bitbucket",
      "properties": {
        "auth": {
          "description": "Auth information required to connect to Bitbucket.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.BitbucketAuth"
        },
        "deleteHookOnFinish": {
          "type": "boolean",
          "title": "DeleteHookOnFinish determines whether to delete the defined Bitbucket hook once the event source is stopped.\n+optional"
        },
        "events": {
          "description": "Events this webhook is subscribed to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will be passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "owner": {
          "description": "Owner of the repository.",
          "type": "string"
        },
        "projectKey": {
          "type": "string",
          "title": "ProjectKey is the key of the project for which integration needs to setup"
        },
        "repositorySlug": {
          "description": "RepositorySlug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.",
          "type": "string"
        },
        "webhook": {
          "title": "Webhook refers to the configuration required to run an http server",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BitbucketServerEventSource": {
      "type": "object",
      "title": "BitbucketServerEventSource refers to event-source related to Bitbucket Server events",
      "properties": {
        "accessToken": {
          "title": "AccessToken is reference to K8s secret which holds the bitbucket api access information",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bitbucketserverBaseURL": {
          "type": "string",
          "title": "BitbucketServerBaseURL is the base URL for API requests to a custom endpoint"
        },
        "deleteHookOnFinish": {
          "type": "boolean",
          "title": "DeleteHookOnFinish determines whether to delete the Bitbucket Server hook for the project once the event source is stopped.\n+optional"
        },
        "events": {
          "type": "array",
          "title": "Events are bitbucket event to listen to.\nRefer https://confluence.atlassian.com/bitbucketserver/event-payload-938025882.html",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "projectKey": {
          "type": "string",
          "title": "DeprecatedProjectKey is the key of project for which integration needs to setup\nDeprecated: use Repositories instead. Will be unsupported in v1.8\n+optional"
        },
        "repositories": {
          "type": "array",
          "title": "Repositories holds a list of repositories for which integration needs to setup\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.BitbucketServerRepository"
          }
        },
        "repositorySlug": {
          "type": "string",
          "title": "DeprecatedRepositorySlug is the slug of the repository for which integration needs to setup\nDeprecated: use Repositories instead. Will be unsupported in v1.8\n+optional"
        },
        "webhook": {
          "title": "Webhook holds configuration to run a http server",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        },
        "webhookSecret": {
          "title": "WebhookSecret is reference to K8s secret which holds the bitbucket webhook secret (for HMAC validation)",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.BitbucketServerRepository": {
      "type": "object",
      "properties": {
        "projectKey": {
          "type": "string",
          "title": "ProjectKey is the key of project for which integration needs to setup"
        },
        "repositorySlug": {
          "type": "string",
          "title": "RepositorySlug is the slug of the repository for which integration needs to setup"
        }
      }
    },
    "io.argoproj.events.v1alpha1.CalendarEventSource": {
      "type": "object",
      "title": "CalendarEventSource describes a time based dependency. One of the fields (schedule, interval, or recurrence) must be passed.\nSchedule takes precedence over interval; interval takes precedence over recurrence",
      "properties": {
        "exclusionDates": {
          "description": "ExclusionDates defines the list of DATE-TIME exceptions for recurring events.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "interval": {
          "type": "string",
          "title": "Interval is a string that describes an interval duration, e.g. 1s, 30m, 2h...\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "persistence": {
          "title": "Persistence hold the configuration for event persistence",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventPersistence"
        },
        "schedule": {
          "type": "string",
          "title": "Schedule is a cron-like expression. For reference, see: https://en.wikipedia.org/wiki/Cron\n+optional"
        },
        "timezone": {
          "type": "string",
          "title": "Timezone in which to run the schedule\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.CatchupConfiguration": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled enables to triggered the missed schedule when eventsource restarts"
        },
        "maxDuration": {
          "type": "string",
          "title": "MaxDuration holds max catchup duration"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Condition": {
      "type": "object",
      "title": "Condition contains details about resource state",
      "properties": {
        "lastTransitionTime": {
          "title": "Last time the condition transitioned from one status to another.\n+optional",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "type": "string",
          "title": "Human-readable message indicating details about last transition.\n+optional"
        },
        "reason": {
          "type": "string",
          "title": "Unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. For example, \"ImageNotFound\"\n+optional"
        },
        "status": {
          "type": "string",
          "title": "Condition status, True, False or Unknown.\n+required"
        },
        "type": {
          "type": "string",
          "title": "Condition type.\n+required"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ConditionsResetByTime": {
      "type": "object",
      "properties": {
        "cron": {
          "type": "string",
          "title": "Cron is a cron-like expression. For reference, see: https://en.wikipedia.org/wiki/Cron"
        },
        "timezone": {
          "type": "string",
          "title": "+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ConditionsResetCriteria": {
      "type": "object",
      "properties": {
        "byTime": {
          "title": "Schedule is a cron-like expression. For reference, see: https://en.wikipedia.org/wiki/Cron",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ConditionsResetByTime"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ConfigMapPersistence": {
      "type": "object",
      "properties": {
        "createIfNotExist": {
          "type": "boolean",
          "title": "CreateIfNotExist will create configmap if it doesn't exists"
        },
        "name": {
          "type": "string",
          "title": "Name of the configmap"
        }
      }
    },
    "io.argoproj.events.v1alpha1.CustomTrigger": {
      "description": "CustomTrigger refers to the specification of the custom trigger.",
      "type": "object",
      "properties": {
        "certSecret": {
          "description": "CertSecret refers to the secret that contains cert for secure connection between sensor and custom trigger gRPC server.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "parameters": {
          "description": "Parameters is the list of parameters that is applied to resolved custom trigger trigger object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "secure": {
          "type": "boolean",
          "title": "Secure refers to type of the connection between sensor to custom trigger gRPC"
        },
        "serverNameOverride": {
          "description": "ServerNameOverride for the secure connection between sensor and custom trigger gRPC server.",
          "type": "string"
        },
        "serverURL": {
          "type": "string",
          "title": "ServerURL is the url of the gRPC server that executes custom trigger"
        },
        "spec": {
          "description": "Spec is the custom trigger resource specification that custom trigger gRPC server knows how to interpret.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.DataFilter": {
      "type": "object",
      "title": "DataFilter describes constraints and filters for event data\nRegular Expressions are purposefully not a feature as they are overkill for our uses here\nSee Rob Pike's Post: https://commandcenter.blogspot.com/2011/08/regular-expressions-in-lexing-and.html",
      "properties": {
        "comparator": {
          "description": "Comparator compares the event data with a user given value.\nCan be \"\u003e=\", \"\u003e\", \"=\", \"!=\", \"\u003c\", or \"\u003c=\".\nIs optional, and if left blank treated as equality \"=\".",
          "type": "string"
        },
        "path": {
          "description": "Path is the JSONPath of the event's (JSON decoded) data key\nPath is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'.\nTo access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'.\nSee https://github.com/tidwall/gjson#path-syntax for more information on how to use this.",
          "type": "string"
        },
        "template": {
          "type": "string",
          "title": "Template is a go-template for extracting a string from the event's data.\nA Template is evaluated with provided path, type and value.\nThe templating follows the standard go-template syntax as well as sprig's extra functions.\nSee https://pkg.go.dev/text/template and https://masterminds.github.io/sprig/"
        },
        "type": {
          "type": "string",
          "title": "Type contains the JSON type of the data"
        },
        "value": {
          "type": "array",
          "title": "Value is the allowed string values for this key\nBooleans are passed using strconv.ParseBool()\nNumbers are parsed using as float64 using strconv.ParseFloat()\nStrings are taken as is\nNils this value is ignored",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.EmitterEventSource": {
      "type": "object",
      "title": "EmitterEventSource describes the event source for emitter\nMore info at https://emitter.io/develop/getting-started/",
      "properties": {
        "broker": {
          "description": "Broker URI to connect to.",
          "type": "string"
        },
        "channelKey": {
          "type": "string",
          "title": "ChannelKey refers to the channel key"
        },
        "channelName": {
          "type": "string",
          "title": "ChannelName refers to the channel name"
        },
        "connectionBackoff": {
          "title": "Backoff holds parameters applied to connection.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "password": {
          "title": "Password to use to connect to broker\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "tls": {
          "title": "TLS configuration for the emitter client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "username": {
          "title": "Username to use to connect to broker\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventContext": {
      "type": "object",
      "title": "EventContext holds the context of the cloudevent received from an event source.\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "properties": {
        "datacontenttype": {
          "description": "DataContentType - A MIME (RFC2046) string describing the media type of `data`.",
          "type": "string"
        },
        "id": {
          "description": "ID of the event; must be non-empty and unique within the scope of the producer.",
          "type": "string"
        },
        "source": {
          "description": "Source - A URI describing the event producer.",
          "type": "string"
        },
        "specversion": {
          "description": "SpecVersion - The version of the CloudEvents specification used by the io.argoproj.workflow.v1alpha1.",
          "type": "string"
        },
        "subject": {
          "type": "string",
          "title": "Subject - The subject of the event in the context of the event producer"
        },
        "time": {
          "description": "Time - A Timestamp when the event happened.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "type": {
          "description": "Type - The type of the occurrence which has happened.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventDependency": {
      "type": "object",
      "title": "EventDependency describes a dependency",
      "properties": {
        "eventName": {
          "type": "string",
          "title": "EventName is the name of the event"
        },
        "eventSourceName": {
          "type": "string",
          "title": "EventSourceName is the name of EventSource that Sensor depends on"
        },
        "filters": {
          "title": "Filters and rules governing toleration of success and constraints on the context and data of an event",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventDependencyFilter"
        },
        "filtersLogicalOperator": {
          "description": "FiltersLogicalOperator defines how different filters are evaluated together.\nAvailable values: and (\u0026\u0026), or (||)\nIs optional and if left blank treated as and (\u0026\u0026).",
          "type": "string"
        },
        "name": {
          "type": "string",
          "title": "Name is a unique name of this dependency"
        },
        "transform": {
          "title": "Transform transforms the event data",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventDependencyTransformer"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventDependencyFilter": {
      "description": "EventDependencyFilter defines filters and constraints for a io.argoproj.workflow.v1alpha1.",
      "type": "object",
      "properties": {
        "context": {
          "title": "Context filter constraints",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventContext"
        },
        "data": {
          "type": "array",
          "title": "Data filter constraints with escalation",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.DataFilter"
          }
        },
        "dataLogicalOperator": {
          "description": "DataLogicalOperator defines how multiple Data filters (if defined) are evaluated together.\nAvailable values: and (\u0026\u0026), or (||)\nIs optional and if left blank treated as and (\u0026\u0026).",
          "type": "string"
        },
        "exprLogicalOperator": {
          "description": "ExprLogicalOperator defines how multiple Exprs filters (if defined) are evaluated together.\nAvailable values: and (\u0026\u0026), or (||)\nIs optional and if left blank treated as and (\u0026\u0026).",
          "type": "string"
        },
        "exprs": {
          "description": "Exprs contains the list of expressions evaluated against the event payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.ExprFilter"
          }
        },
        "time": {
          "title": "Time filter on the event with escalation",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TimeFilter"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventDependencyTransformer": {
      "type": "object",
      "title": "EventDependencyTransformer transforms the event",
      "properties": {
        "jq": {
          "type": "string",
          "title": "JQ holds the jq command applied for transformation\n+optional"
        },
        "script": {
          "type": "string",
          "title": "Script refers to a Lua script used to transform the event\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventPersistence": {
      "type": "object",
      "properties": {
        "catchup": {
          "title": "Catchup enables to triggered the missed schedule when eventsource restarts",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.CatchupConfiguration"
        },
        "configMap": {
          "title": "ConfigMap holds configmap details for persistence",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ConfigMapPersistence"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventSource": {
      "type": "object",
      "title": "EventSource is the definition of a eventsource resource\n+genclient\n+kubebuilder:resource:shortName=es\n+kubebuilder:subresource:status\n+k8s:deepcopy-gen:interfaces=io.k8s.apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceSpec"
        },
        "status": {
          "title": "+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceStatus"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventSourceFilter": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventSourceList": {
      "type": "object",
      "title": "EventSourceList is the list of eventsource resources\n+k8s:deepcopy-gen:interfaces=io.k8s.apimachinery/pkg/runtime.Object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSource"
          }
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventSourceSpec": {
      "type": "object",
      "title": "EventSourceSpec refers to specification of event-source resource",
      "properties": {
        "amqp": {
          "type": "object",
          "title": "AMQP event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.AMQPEventSource"
          }
        },
        "azureEventsHub": {
          "type": "object",
          "title": "AzureEventsHub event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.AzureEventsHubEventSource"
          }
        },
        "bitbucket": {
          "type": "object",
          "title": "Bitbucket event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.BitbucketEventSource"
          }
        },
        "bitbucketserver": {
          "type": "object",
          "title": "Bitbucket Server event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.BitbucketServerEventSource"
          }
        },
        "calendar": {
          "type": "object",
          "title": "Calendar event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.CalendarEventSource"
          }
        },
        "emitter": {
          "type": "object",
          "title": "Emitter event source",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.EmitterEventSource"
          }
        },
        "eventBusName": {
          "type": "string",
          "title": "EventBusName references to a EventBus name. By default the value is \"default\""
        },
        "file": {
          "type": "object",
          "title": "File event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.FileEventSource"
          }
        },
        "generic": {
          "type": "object",
          "title": "Generic event source",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.GenericEventSource"
          }
        },
        "github": {
          "type": "object",
          "title": "Github event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.GithubEventSource"
          }
        },
        "gitlab": {
          "type": "object",
          "title": "Gitlab event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.GitlabEventSource"
          }
        },
        "hdfs": {
          "type": "object",
          "title": "HDFS event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.HDFSEventSource"
          }
        },
        "kafka": {
          "type": "object",
          "title": "Kafka event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.KafkaEventSource"
          }
        },
        "minio": {
          "type": "object",
          "title": "Minio event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.S3Artifact"
          }
        },
        "mqtt": {
          "type": "object",
          "title": "MQTT event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.MQTTEventSource"
          }
        },
        "nats": {
          "type": "object",
          "title": "NATS event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.NATSEventsSource"
          }
        },
        "nsq": {
          "type": "object",
          "title": "NSQ event source",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.NSQEventSource"
          }
        },
        "pubSub": {
          "type": "object",
          "title": "PubSub event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.PubSubEventSource"
          }
        },
        "pulsar": {
          "type": "object",
          "title": "Pulsar event source",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.PulsarEventSource"
          }
        },
        "redis": {
          "type": "object",
          "title": "Redis event source",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.RedisEventSource"
          }
        },
        "replicas": {
          "type": "integer",
          "title": "Replicas is the event source deployment replicas"
        },
        "resource": {
          "type": "object",
          "title": "Resource event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.ResourceEventSource"
          }
        },
        "service": {
          "title": "Service is the specifications of the service to expose the event source\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Service"
        },
        "slack": {
          "type": "object",
          "title": "Slack event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.SlackEventSource"
          }
        },
        "sns": {
          "type": "object",
          "title": "SNS event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.SNSEventSource"
          }
        },
        "sqs": {
          "type": "object",
          "title": "SQS event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.SQSEventSource"
          }
        },
        "storageGrid": {
          "type": "object",
          "title": "StorageGrid event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.StorageGridEventSource"
          }
        },
        "stripe": {
          "type": "object",
          "title": "Stripe event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.StripeEventSource"
          }
        },
        "template": {
          "title": "Template is the pod specification for the event source\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Template"
        },
        "webhook": {
          "type": "object",
          "title": "Webhook event sources",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.EventSourceStatus": {
      "type": "object",
      "title": "EventSourceStatus holds the status of the event-source resource",
      "properties": {
        "status": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Status"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ExprFilter": {
      "type": "object",
      "properties": {
        "expr": {
          "description": "Expr refers to the expression that determines the outcome of the filter.",
          "type": "string"
        },
        "fields": {
          "description": "Fields refers to set of keys that refer to the paths within event payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.PayloadField"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.FileArtifact": {
      "type": "object",
      "title": "FileArtifact contains information about an artifact in a filesystem",
      "properties": {
        "path": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.FileEventSource": {
      "description": "FileEventSource describes an event-source for file related events.",
      "type": "object",
      "properties": {
        "eventType": {
          "type": "string",
          "title": "Type of file operations to watch\nRefer https://github.com/fsnotify/fsnotify/blob/master/fsnotify.go for more information"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "polling": {
          "type": "boolean",
          "title": "Use polling instead of inotify"
        },
        "watchPathConfig": {
          "title": "WatchPathConfig contains configuration about the file path to watch",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WatchPathConfig"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GenericEventSource": {
      "description": "GenericEventSource refers to a generic event source. It can be used to implement a custom event source.",
      "type": "object",
      "properties": {
        "authSecret": {
          "title": "AuthSecret holds a secret selector that contains a bearer token for authentication\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "config": {
          "type": "string",
          "title": "Config is the event source configuration"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "insecure": {
          "description": "Insecure determines the type of connection.",
          "type": "boolean"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "url": {
          "description": "URL of the gRPC server that implements the event source.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GitArtifact": {
      "type": "object",
      "title": "GitArtifact contains information about an artifact stored in git",
      "properties": {
        "branch": {
          "type": "string",
          "title": "Branch to use to pull trigger resource\n+optional"
        },
        "cloneDirectory": {
          "description": "Directory to clone the repository. We clone complete directory because GitArtifact is not limited to any specific Git service providers.\nHence we don't use any specific git provider client.",
          "type": "string"
        },
        "creds": {
          "title": "Creds contain reference to git username and password\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.GitCreds"
        },
        "filePath": {
          "type": "string",
          "title": "Path to file that contains trigger resource definition"
        },
        "ref": {
          "type": "string",
          "title": "Ref to use to pull trigger resource. Will result in a shallow clone and\nfetch.\n+optional"
        },
        "remote": {
          "title": "Remote to manage set of tracked repositories. Defaults to \"origin\".\nRefer https://git-scm.com/docs/git-remote\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.GitRemoteConfig"
        },
        "sshKeySecret": {
          "title": "SSHKeySecret refers to the secret that contains SSH key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "tag": {
          "type": "string",
          "title": "Tag to use to pull trigger resource\n+optional"
        },
        "url": {
          "type": "string",
          "title": "Git URL"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GitCreds": {
      "type": "object",
      "title": "GitCreds contain reference to git username and password",
      "properties": {
        "password": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "username": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GitRemoteConfig": {
      "type": "object",
      "title": "GitRemoteConfig contains the configuration of a Git remote",
      "properties": {
        "name": {
          "description": "Name of the remote to fetch from.",
          "type": "string"
        },
        "urls": {
          "description": "URLs the URLs of a remote repository. It must be non-empty. Fetch will\nalways use the first URL, while push will use all of them.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.GithubAppCreds": {
      "type": "object",
      "properties": {
        "appID": {
          "type": "string",
          "title": "AppID refers to the GitHub App ID for the application you created"
        },
        "installationID": {
          "type": "string",
          "title": "InstallationID refers to the Installation ID of the GitHub app you created and installed"
        },
        "privateKey": {
          "title": "PrivateKey refers to a K8s secret containing the GitHub app private key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GithubEventSource": {
      "type": "object",
      "title": "GithubEventSource refers to event-source for github related events",
      "properties": {
        "active": {
          "type": "boolean",
          "title": "Active refers to status of the webhook for event deliveries.\nhttps://developer.github.com/webhooks/creating/#active\n+optional"
        },
        "apiToken": {
          "title": "APIToken refers to a K8s secret containing github api token\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "contentType": {
          "type": "string",
          "title": "ContentType of the event delivery"
        },
        "deleteHookOnFinish": {
          "type": "boolean",
          "title": "DeleteHookOnFinish determines whether to delete the GitHub hook for the repository once the event source is stopped.\n+optional"
        },
        "events": {
          "type": "array",
          "title": "Events refer to Github events to which the event source will subscribe",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "githubApp": {
          "title": "GitHubApp holds the GitHub app credentials\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.GithubAppCreds"
        },
        "githubBaseURL": {
          "type": "string",
          "title": "GitHub base URL (for GitHub Enterprise)\n+optional"
        },
        "githubUploadURL": {
          "type": "string",
          "title": "GitHub upload URL (for GitHub Enterprise)\n+optional"
        },
        "id": {
          "type": "string",
          "title": "Id is the webhook's id\nDeprecated: This is not used at all, will be removed in v1.6\n+optional"
        },
        "insecure": {
          "type": "boolean",
          "title": "Insecure tls verification"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "organizations": {
          "description": "Organizations holds the names of organizations (used for organization level webhooks). Not required if Repositories is set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string",
          "title": "DeprecatedOwner refers to GitHub owner name i.e. argoproj\nDeprecated: use Repositories instead. Will be unsupported in v 1.6\n+optional"
        },
        "repositories": {
          "description": "Repositories holds the information of repositories, which uses repo owner as the key,\nand list of repo names as the value. Not required if Organizations is set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.OwnedRepositories"
          }
        },
        "repository": {
          "type": "string",
          "title": "DeprecatedRepository refers to GitHub repo name i.e. argo-events\nDeprecated: use Repositories instead. Will be unsupported in v 1.6\n+optional"
        },
        "webhook": {
          "title": "Webhook refers to the configuration required to run a http server",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        },
        "webhookSecret": {
          "title": "WebhookSecret refers to K8s secret containing GitHub webhook secret\nhttps://developer.github.com/webhooks/securing/\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.GitlabEventSource": {
      "type": "object",
      "title": "GitlabEventSource refers to event-source related to Gitlab events",
      "properties": {
        "accessToken": {
          "title": "AccessToken references to k8 secret which holds the gitlab api access information",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "deleteHookOnFinish": {
          "type": "boolean",
          "title": "DeleteHookOnFinish determines whether to delete the GitLab hook for the project once the event source is stopped.\n+optional"
        },
        "enableSSLVerification": {
          "type": "boolean",
          "title": "EnableSSLVerification to enable ssl verification\n+optional"
        },
        "events": {
          "description": "Events are gitlab event to listen to.\nRefer https://github.com/xanzy/go-gitlab/blob/bf34eca5d13a9f4c3f501d8a97b8ac226d55e4d9/projects.go#L794.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "gitlabBaseURL": {
          "type": "string",
          "title": "GitlabBaseURL is the base URL for API requests to a custom endpoint"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "projectID": {
          "type": "string",
          "title": "DeprecatedProjectID is the id of project for which integration needs to setup\nDeprecated: use Projects instead. Will be unsupported in v 1.7\n+optional"
        },
        "projects": {
          "type": "array",
          "title": "List of project IDs or project namespace paths like \"whynowy/test\"",
          "items": {
            "type": "string"
          }
        },
        "secretToken": {
          "title": "SecretToken references to k8 secret which holds the Secret Token used by webhook config",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "webhook": {
          "title": "Webhook holds configuration to run a http server",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.HDFSEventSource": {
      "type": "object",
      "title": "HDFSEventSource refers to event-source for HDFS related events",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "checkInterval": {
          "type": "string",
          "title": "CheckInterval is a string that describes an interval duration to check the directory state, e.g. 1s, 30m, 2h... (defaults to 1m)"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "hdfsUser": {
          "description": "HDFSUser is the user to access HDFS file system.\nIt is ignored if either ccache or keytab is used.",
          "type": "string"
        },
        "krbCCacheSecret": {
          "description": "KrbCCacheSecret is the secret selector for Kerberos ccache\nEither ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbConfigConfigMap": {
          "description": "KrbConfig is the configmap selector for Kerberos config as string\nIt must be set if either ccache or keytab is used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "krbKeytabSecret": {
          "description": "KrbKeytabSecret is the secret selector for Kerberos keytab\nEither ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbRealm": {
          "description": "KrbRealm is the Kerberos realm used with Kerberos keytab\nIt must be set if keytab is used.",
          "type": "string"
        },
        "krbServicePrincipalName": {
          "description": "KrbServicePrincipalName is the principal name of Kerberos service\nIt must be set if either ccache or keytab is used.",
          "type": "string"
        },
        "krbUsername": {
          "description": "KrbUsername is the Kerberos username used with Kerberos keytab\nIt must be set if keytab is used.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "title": "Type of file operations to watch"
        },
        "watchPathConfig": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WatchPathConfig"
        }
      }
    },
    "io.argoproj.events.v1alpha1.HTTPTrigger": {
      "type": "object",
      "title": "HTTPTrigger is the trigger for the HTTP request",
      "properties": {
        "basicAuth": {
          "title": "BasicAuth configuration for the http request.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.BasicAuth"
        },
        "headers": {
          "type": "object",
          "title": "Headers for the HTTP request.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "type": "string",
          "title": "Method refers to the type of the HTTP request.\nRefer https://golang.org/src/net/http/method.go for more io.argoproj.workflow.v1alpha1.\nDefault value is POST.\n+optional"
        },
        "parameters": {
          "description": "Parameters is the list of key-value extracted from event's payload that are applied to\nthe HTTP trigger resource.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "secureHeaders": {
          "type": "array",
          "title": "Secure Headers stored in Kubernetes Secrets for the HTTP requests.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.SecureHeader"
          }
        },
        "timeout": {
          "type": "string",
          "title": "Timeout refers to the HTTP request timeout in seconds.\nDefault value is 60 seconds.\n+optional"
        },
        "tls": {
          "title": "TLS configuration for the HTTP client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "url": {
          "description": "URL refers to the URL to send HTTP request to.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Int64OrString": {
      "type": "object",
      "properties": {
        "int64Val": {
          "type": "string"
        },
        "strVal": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.K8SResourcePolicy": {
      "type": "object",
      "title": "K8SResourcePolicy refers to the policy used to check the state of K8s based triggers using labels",
      "properties": {
        "backoff": {
          "title": "Backoff before checking resource state",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "errorOnBackoffTimeout": {
          "type": "boolean",
          "title": "ErrorOnBackoffTimeout determines whether sensor should transition to error state if the trigger policy is unable to determine\nthe state of the resource"
        },
        "labels": {
          "type": "object",
          "title": "Labels required to identify whether a resource is in success state",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.KafkaConsumerGroup": {
      "type": "object",
      "properties": {
        "groupName": {
          "type": "string",
          "title": "The name for the consumer group to use"
        },
        "oldest": {
          "type": "boolean",
          "title": "When starting up a new group do we want to start from the oldest event (true) or the newest event (false), defaults to false\n+optional"
        },
        "rebalanceStrategy": {
          "type": "string",
          "title": "Rebalance strategy can be one of: sticky, roundrobin, range. Range is the default.\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.KafkaEventSource": {
      "type": "object",
      "title": "KafkaEventSource refers to event-source for Kafka related events",
      "properties": {
        "connectionBackoff": {
          "description": "Backoff holds parameters applied to connection.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "consumerGroup": {
          "title": "Consumer group for kafka client\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.KafkaConsumerGroup"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "limitEventsPerSecond": {
          "type": "string",
          "title": "Sets a limit on how many events get read from kafka per second.\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "partition": {
          "type": "string",
          "title": "Partition name"
        },
        "sasl": {
          "title": "SASL configuration for the kafka client\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.SASLConfig"
        },
        "tls": {
          "title": "TLS configuration for the kafka client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "topic": {
          "type": "string",
          "title": "Topic name"
        },
        "url": {
          "type": "string",
          "title": "URL to kafka cluster, multiple URLs separated by comma"
        },
        "version": {
          "type": "string",
          "title": "Specify what kafka version is being connected to enables certain features in sarama, defaults to 1.0.0\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.KafkaTrigger": {
      "description": "KafkaTrigger refers to the specification of the Kafka trigger.",
      "type": "object",
      "properties": {
        "compress": {
          "type": "boolean",
          "title": "Compress determines whether to compress message or not.\nDefaults to false.\nIf set to true, compresses message using snappy compression.\n+optional"
        },
        "flushFrequency": {
          "type": "integer",
          "title": "FlushFrequency refers to the frequency in milliseconds to flush batches.\nDefaults to 500 milliseconds.\n+optional"
        },
        "parameters": {
          "description": "Parameters is the list of parameters that is applied to resolved Kafka trigger object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "partition": {
          "description": "Partition to write data to.",
          "type": "integer"
        },
        "partitioningKey": {
          "description": "The partitioning key for the messages put on the Kafka topic.\nDefaults to broker url.\n+optional.",
          "type": "string"
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "requiredAcks": {
          "description": "RequiredAcks used in producer to tell the broker how many replica acknowledgements\nDefaults to 1 (Only wait for the leader to ack).\n+optional.",
          "type": "integer"
        },
        "sasl": {
          "title": "SASL configuration for the kafka client\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.SASLConfig"
        },
        "tls": {
          "title": "TLS configuration for the Kafka producer.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "topic": {
          "type": "string",
          "title": "Name of the topic.\nMore info at https://kafka.apache.org/documentation/#intro_topics"
        },
        "url": {
          "description": "URL of the Kafka broker, multiple URLs separated by comma.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "title": "Specify what kafka version is being connected to enables certain features in sarama, defaults to 1.0.0\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.LogTrigger": {
      "type": "object",
      "properties": {
        "intervalSeconds": {
          "type": "string",
          "format": "uint64",
          "title": "Only print messages every interval. Useful to prevent logging too much data for busy events.\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.MQTTEventSource": {
      "type": "object",
      "title": "MQTTEventSource refers to event-source for MQTT related events",
      "properties": {
        "clientId": {
          "type": "string",
          "title": "ClientID is the id of the client"
        },
        "connectionBackoff": {
          "description": "ConnectionBackoff holds backoff applied to connection.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tls": {
          "title": "TLS configuration for the mqtt client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "topic": {
          "type": "string",
          "title": "Topic name"
        },
        "url": {
          "type": "string",
          "title": "URL to connect to broker"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Metadata": {
      "type": "object",
      "title": "Metadata holds the annotations and labels of an event source pod",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.NATSAuth": {
      "type": "object",
      "title": "NATSAuth refers to the auth info for NATS EventSource",
      "properties": {
        "basic": {
          "title": "Baisc auth with username and password\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.BasicAuth"
        },
        "credential": {
          "title": "credential used to connect\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "nkey": {
          "title": "NKey used to connect\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "token": {
          "title": "Token used to connect\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.NATSEventsSource": {
      "type": "object",
      "title": "NATSEventsSource refers to event-source for NATS related events",
      "properties": {
        "auth": {
          "title": "Auth information\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.NATSAuth"
        },
        "connectionBackoff": {
          "description": "ConnectionBackoff holds backoff applied to connection.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "subject": {
          "type": "string",
          "title": "Subject holds the name of the subject onto which messages are published"
        },
        "tls": {
          "title": "TLS configuration for the nats client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "url": {
          "type": "string",
          "title": "URL to connect to NATS cluster"
        }
      }
    },
    "io.argoproj.events.v1alpha1.NATSTrigger": {
      "description": "NATSTrigger refers to the specification of the NATS trigger.",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "subject": {
          "description": "Name of the subject to put message on.",
          "type": "string"
        },
        "tls": {
          "title": "TLS configuration for the NATS producer.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "url": {
          "description": "URL of the NATS cluster.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.NSQEventSource": {
      "type": "object",
      "title": "NSQEventSource describes the event source for NSQ PubSub\nMore info at https://godoc.org/github.com/nsqio/go-nsq",
      "properties": {
        "channel": {
          "type": "string",
          "title": "Channel used for subscription"
        },
        "connectionBackoff": {
          "title": "Backoff holds parameters applied to connection.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "hostAddress": {
          "type": "string",
          "title": "HostAddress is the address of the host for NSQ lookup"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tls": {
          "title": "TLS configuration for the nsq client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "topic": {
          "description": "Topic to subscribe to.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.OpenWhiskTrigger": {
      "description": "OpenWhiskTrigger refers to the specification of the OpenWhisk trigger.",
      "type": "object",
      "properties": {
        "actionName": {
          "description": "Name of the action/function.",
          "type": "string"
        },
        "authToken": {
          "title": "AuthToken for authentication.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "host": {
          "description": "Host URL of the OpenWhisk.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace for the action.\nDefaults to \"_\".\n+optional.",
          "type": "string"
        },
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of key-value extracted from event's payload that are applied to\nthe trigger resource.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "version": {
          "type": "string",
          "title": "Version for the API.\nDefaults to v1.\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.OwnedRepositories": {
      "type": "object",
      "properties": {
        "names": {
          "type": "array",
          "title": "Repository names",
          "items": {
            "type": "string"
          }
        },
        "owner": {
          "type": "string",
          "title": "Organization or user name"
        }
      }
    },
    "io.argoproj.events.v1alpha1.PayloadField": {
      "description": "PayloadField binds a value at path within the event payload against a name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name acts as key that holds the value at the path.",
          "type": "string"
        },
        "path": {
          "description": "Path is the JSONPath of the event's (JSON decoded) data key\nPath is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'.\nTo access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'.\nSee https://github.com/tidwall/gjson#path-syntax for more information on how to use this.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.PubSubEventSource": {
      "description": "PubSubEventSource refers to event-source for GCP PubSub related events.",
      "type": "object",
      "properties": {
        "credentialSecret": {
          "title": "CredentialSecret references to the secret that contains JSON credentials to access GCP.\nIf it is missing, it implicitly uses Workload Identity to access.\nhttps://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "deleteSubscriptionOnFinish": {
          "type": "boolean",
          "title": "DeleteSubscriptionOnFinish determines whether to delete the GCP PubSub subscription once the event source is stopped.\n+optional"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "projectID": {
          "type": "string",
          "title": "ProjectID is GCP project ID for the subscription.\nRequired if you run Argo Events outside of GKE/GCE.\n(otherwise, the default value is its project)\n+optional"
        },
        "subscriptionID": {
          "type": "string",
          "title": "SubscriptionID is ID of subscription.\nRequired if you use existing subscription.\nThe default value will be auto generated hash based on this eventsource setting, so the subscription\nmight be recreated every time you update the setting, which has a possibility of event loss.\n+optional"
        },
        "topic": {
          "type": "string",
          "title": "Topic to which the subscription should belongs.\nRequired if you want the eventsource to create a new subscription.\nIf you specify this field along with an existing subscription,\nit will be verified whether it actually belongs to the specified topic.\n+optional"
        },
        "topicProjectID": {
          "type": "string",
          "title": "TopicProjectID is GCP project ID for the topic.\nBy default, it is same as ProjectID.\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.PulsarEventSource": {
      "type": "object",
      "title": "PulsarEventSource describes the event source for Apache Pulsar",
      "properties": {
        "authTokenSecret": {
          "title": "Authentication token for the pulsar client.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "connectionBackoff": {
          "title": "Backoff holds parameters applied to connection.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "tls": {
          "title": "TLS configuration for the pulsar client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "tlsAllowInsecureConnection": {
          "type": "boolean",
          "title": "Whether the Pulsar client accept untrusted TLS certificate from broker.\n+optional"
        },
        "tlsTrustCertsSecret": {
          "title": "Trusted TLS certificate secret.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "tlsValidateHostname": {
          "type": "boolean",
          "title": "Whether the Pulsar client verify the validity of the host name from broker.\n+optional"
        },
        "topics": {
          "type": "array",
          "title": "Name of the topics to subscribe to.\n+required",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "title": "Type of the subscription.\nOnly \"exclusive\" and \"shared\" is supported.\nDefaults to exclusive.\n+optional"
        },
        "url": {
          "type": "string",
          "title": "Configure the service URL for the Pulsar service.\n+required"
        }
      }
    },
    "io.argoproj.events.v1alpha1.PulsarTrigger": {
      "description": "PulsarTrigger refers to the specification of the Pulsar trigger.",
      "type": "object",
      "properties": {
        "authTokenSecret": {
          "title": "Authentication token for the pulsar client.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "connectionBackoff": {
          "title": "Backoff holds parameters applied to connection.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "parameters": {
          "description": "Parameters is the list of parameters that is applied to resolved Kafka trigger object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "payload": {
          "description": "Payload is the list of key-value extracted from an event payload to construct the request payload.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "tls": {
          "title": "TLS configuration for the pulsar client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        },
        "tlsAllowInsecureConnection": {
          "type": "boolean",
          "title": "Whether the Pulsar client accept untrusted TLS certificate from broker.\n+optional"
        },
        "tlsTrustCertsSecret": {
          "title": "Trusted TLS certificate secret.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "tlsValidateHostname": {
          "type": "boolean",
          "title": "Whether the Pulsar client verify the validity of the host name from broker.\n+optional"
        },
        "topic": {
          "type": "string",
          "title": "Name of the topic.\nSee https://pulsar.apache.org/docs/en/concepts-messaging/"
        },
        "url": {
          "type": "string",
          "title": "Configure the service URL for the Pulsar service.\n+required"
        }
      }
    },
    "io.argoproj.events.v1alpha1.RateLimit": {
      "type": "object",
      "properties": {
        "requestsPerUnit": {
          "type": "integer"
        },
        "unit": {
          "type": "string",
          "title": "Defaults to Second"
        }
      }
    },
    "io.argoproj.events.v1alpha1.RedisEventSource": {
      "type": "object",
      "title": "RedisEventSource describes an event source for the Redis PubSub.\nMore info at https://godoc.org/github.com/go-redis/redis#example-PubSub",
      "properties": {
        "channels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "db": {
          "type": "integer",
          "title": "DB to use. If not specified, default DB 0 will be used.\n+optional"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "hostAddress": {
          "type": "string",
          "title": "HostAddress refers to the address of the Redis host/server"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string",
          "title": "Namespace to use to retrieve the password from. It should only be specified if password is declared\n+optional"
        },
        "password": {
          "title": "Password required for authentication if any.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "tls": {
          "title": "TLS configuration for the redis client.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TLSConfig"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Resource": {
      "description": "Resource represent arbitrary structured data.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ResourceEventSource": {
      "description": "ResourceEventSource refers to a event-source for K8s resource related events.",
      "type": "object",
      "properties": {
        "eventTypes": {
          "description": "EventTypes is the list of event type to watch.\nPossible values are - ADD, UPDATE and DELETE.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "title": "Filter is applied on the metadata of the resource\nIf you apply filter, then the internal event informer will only monitor objects that pass the filter.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ResourceFilter"
        },
        "groupVersionResource": {
          "title": "Group of the resource",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionResource"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string",
          "title": "Namespace where resource is deployed"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ResourceFilter": {
      "type": "object",
      "title": "ResourceFilter contains K8s ObjectMeta information to further filter resource event objects",
      "properties": {
        "afterStart": {
          "type": "boolean",
          "title": "If the resource is created after the start time then the event is treated as valid.\n+optional"
        },
        "createdBy": {
          "title": "If resource is created before the specified time then the event is treated as valid.\n+optional",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "fields": {
          "type": "array",
          "title": "Fields provide field filters similar to K8s field selector\n(see https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors/).\nUnlike K8s field selector, it supports arbitrary fileds like \"spec.serviceAccountName\",\nand the value could be a string or a regex.\nSame as K8s field selector, operator \"=\", \"==\" and \"!=\" are supported.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.Selector"
          }
        },
        "labels": {
          "type": "array",
          "title": "Labels provide listing options to K8s API to watch resource/s.\nRefer https://kubernetes.io/docs/concepts/overview/working-with-objects/label-selectors/ for more io.argoproj.workflow.v1alpha1.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.Selector"
          }
        },
        "prefix": {
          "type": "string",
          "title": "Prefix filter is applied on the resource name.\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.S3Artifact": {
      "type": "object",
      "title": "S3Artifact contains information about an S3 connection and bucket",
      "properties": {
        "accessKey": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.S3Bucket"
        },
        "endpoint": {
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.S3Filter"
        },
        "insecure": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.S3Bucket": {
      "type": "object",
      "title": "S3Bucket contains information to describe an S3 Bucket",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.S3Filter": {
      "type": "object",
      "title": "S3Filter represents filters to apply to bucket notifications for specifying constraints on objects",
      "properties": {
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SASLConfig": {
      "type": "object",
      "title": "SASLConfig refers to SASL configuration for a client",
      "properties": {
        "mechanism": {
          "type": "string",
          "title": "SASLMechanism is the name of the enabled SASL mechanism.\nPossible values: OAUTHBEARER, PLAIN (defaults to PLAIN).\n+optional"
        },
        "password": {
          "title": "Password for SASL/PLAIN authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "user": {
          "title": "User is the authentication identity (authcid) to present for\nSASL/PLAIN or SASL/SCRAM authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SNSEventSource": {
      "type": "object",
      "title": "SNSEventSource refers to event-source for AWS SNS related events",
      "properties": {
        "accessKey": {
          "title": "AccessKey refers K8s secret containing aws access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region": {
          "type": "string",
          "title": "Region is AWS region"
        },
        "roleARN": {
          "type": "string",
          "title": "RoleARN is the Amazon Resource Name (ARN) of the role to assume.\n+optional"
        },
        "secretKey": {
          "title": "SecretKey refers K8s secret containing aws secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "topicArn": {
          "type": "string",
          "title": "TopicArn"
        },
        "validateSignature": {
          "type": "boolean",
          "title": "ValidateSignature is boolean that can be set to true for SNS signature verification\n+optional"
        },
        "webhook": {
          "title": "Webhook configuration for http server",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SQSEventSource": {
      "type": "object",
      "title": "SQSEventSource refers to event-source for AWS SQS related events",
      "properties": {
        "accessKey": {
          "title": "AccessKey refers K8s secret containing aws access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "dlq": {
          "type": "boolean",
          "title": "DLQ specifies if a dead-letter queue is configured for messages that can't be processed successfully.\nIf set to true, messages with invalid payload won't be acknowledged to allow to forward them farther to the dead-letter queue.\nThe default value is false.\n+optional"
        },
        "endpoint": {
          "type": "string",
          "title": "Endpoint configures connection to a specific SQS endpoint instead of Amazons servers\n+optional"
        },
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "jsonBody": {
          "type": "boolean",
          "title": "JSONBody specifies that all event body payload coming from this\nsource will be JSON\n+optional"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "queue": {
          "type": "string",
          "title": "Queue is AWS SQS queue to listen to for messages"
        },
        "queueAccountId": {
          "type": "string",
          "title": "QueueAccountID is the ID of the account that created the queue to monitor\n+optional"
        },
        "region": {
          "type": "string",
          "title": "Region is AWS region"
        },
        "roleARN": {
          "type": "string",
          "title": "RoleARN is the Amazon Resource Name (ARN) of the role to assume.\n+optional"
        },
        "secretKey": {
          "title": "SecretKey refers K8s secret containing aws secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "waitTimeSeconds": {
          "description": "WaitTimeSeconds is The duration (in seconds) for which the call waits for a message to arrive\nin the queue before returning.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SecureHeader": {
      "type": "object",
      "title": "SecureHeader refers to HTTP Headers with auth tokens as values",
      "properties": {
        "name": {
          "type": "string"
        },
        "valueFrom": {
          "title": "Values can be read from either secrets or configmaps",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ValueFromSource"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Selector": {
      "description": "Selector represents conditional operation to select K8s objects.",
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key name"
        },
        "operation": {
          "type": "string",
          "title": "Supported operations like ==, !=, \u003c=, \u003e= etc.\nDefaults to ==.\nRefer https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors for more io.argoproj.workflow.v1alpha1.\n+optional"
        },
        "value": {
          "type": "string",
          "title": "Value"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Sensor": {
      "type": "object",
      "title": "Sensor is the definition of a sensor resource\n+genclient\n+genclient:noStatus\n+kubebuilder:resource:shortName=sn\n+kubebuilder:subresource:status\n+k8s:deepcopy-gen:interfaces=io.k8s.apimachinery/pkg/runtime.Object\n+k8s:openapi-gen=true",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.SensorSpec"
        },
        "status": {
          "title": "+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.SensorStatus"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SensorList": {
      "type": "object",
      "title": "SensorList is the list of Sensor resources\n+k8s:deepcopy-gen:interfaces=io.k8s.apimachinery/pkg/runtime.Object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
          }
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SensorSpec": {
      "type": "object",
      "title": "SensorSpec represents desired sensor state",
      "properties": {
        "dependencies": {
          "description": "Dependencies is a list of the events that this sensor is dependent on.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventDependency"
          }
        },
        "errorOnFailedRound": {
          "description": "ErrorOnFailedRound if set to true, marks sensor state as `error` if the previous trigger round fails.\nOnce sensor state is set to `error`, no further triggers will be processed.",
          "type": "boolean"
        },
        "eventBusName": {
          "type": "string",
          "title": "EventBusName references to a EventBus name. By default the value is \"default\""
        },
        "replicas": {
          "type": "integer",
          "title": "Replicas is the sensor deployment replicas"
        },
        "template": {
          "title": "Template is the pod specification for the sensor\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Template"
        },
        "triggers": {
          "description": "Triggers is a list of the things that this sensor evokes. These are the outputs from this sensor.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.Trigger"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.SensorStatus": {
      "description": "SensorStatus contains information about the status of a sensor.",
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Status"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Service": {
      "type": "object",
      "title": "Service holds the service information eventsource exposes",
      "properties": {
        "clusterIP": {
          "type": "string",
          "title": "clusterIP is the IP address of the service and is usually assigned\nrandomly by the master. If an address is specified manually and is not in\nuse by others, it will be allocated to the service; otherwise, creation\nof the service will fail. This field can not be changed through updates.\nValid values are \"None\", empty string (\"\"), or a valid IP address. \"None\"\ncan be specified for headless services when proxying is not required.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n+optional"
        },
        "ports": {
          "type": "array",
          "title": "The list of ports that are exposed by this ClusterIP service.\n+patchMergeKey=port\n+patchStrategy=merge\n+listType=map\n+listMapKey=port\n+listMapKey=protocol",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ServicePort"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.SlackEventSource": {
      "type": "object",
      "title": "SlackEventSource refers to event-source for Slack related events",
      "properties": {
        "filter": {
          "title": "Filter\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.EventSourceFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "signingSecret": {
          "title": "Slack App signing secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "token": {
          "title": "Token for URL verification handshake",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "webhook": {
          "title": "Webhook holds configuration for a REST endpoint",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.SlackTrigger": {
      "description": "SlackTrigger refers to the specification of the slack notification trigger.",
      "type": "object",
      "properties": {
        "channel": {
          "type": "string",
          "title": "Channel refers to which Slack channel to send slack message.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "Message refers to the message to send to the Slack channel.\n+optional"
        },
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of key-value extracted from event's payload that are applied to\nthe trigger resource.\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "slackToken": {
          "description": "SlackToken refers to the Kubernetes secret that holds the slack token required to send messages.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.StandardK8STrigger": {
      "type": "object",
      "title": "StandardK8STrigger is the standard Kubernetes resource trigger",
      "properties": {
        "liveObject": {
          "type": "boolean",
          "title": "LiveObject specifies whether the resource should be directly fetched from K8s instead\nof being marshaled from the resource artifact. If set to true, the resource artifact\nmust contain the information required to uniquely identify the resource in the cluster,\nthat is, you must specify \"apiVersion\", \"kind\" as well as \"name\" and \"namespace\" meta\ndata.\nOnly valid for operation type `update`\n+optional"
        },
        "operation": {
          "type": "string",
          "title": "Operation refers to the type of operation performed on the k8s resource.\nDefault value is Create.\n+optional"
        },
        "parameters": {
          "description": "Parameters is the list of parameters that is applied to resolved K8s trigger object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "patchStrategy": {
          "type": "string",
          "title": "PatchStrategy controls the K8s object patching strategy when the trigger operation is specified as patch.\npossible values:\n\"application/json-patch+json\"\n\"application/merge-patch+json\"\n\"application/strategic-merge-patch+json\"\n\"application/apply-patch+yaml\".\nDefaults to \"application/merge-patch+json\"\n+optional"
        },
        "source": {
          "title": "Source of the K8s resource file(s)",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ArtifactLocation"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Status": {
      "description": "Status is a common structure which can be used for Status field.",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "title": "Conditions are the latest available observations of a resource's current state.\n+optional\n+patchMergeKey=type\n+patchStrategy=merge",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.Condition"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.StatusPolicy": {
      "type": "object",
      "title": "StatusPolicy refers to the policy used to check the state of the trigger using response status",
      "properties": {
        "allow": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.StorageGridEventSource": {
      "type": "object",
      "title": "StorageGridEventSource refers to event-source for StorageGrid related events",
      "properties": {
        "apiURL": {
          "description": "APIURL is the url of the storagegrid api.",
          "type": "string"
        },
        "authToken": {
          "title": "Auth token for storagegrid api",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "description": "Name of the bucket to register notifications for.",
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "filter": {
          "description": "Filter on object key which caused the notification.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.StorageGridFilter"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "region": {
          "type": "string",
          "title": "S3 region.\nDefaults to us-east-1\n+optional"
        },
        "topicArn": {
          "type": "string",
          "title": "TopicArn"
        },
        "webhook": {
          "title": "Webhook holds configuration for a REST endpoint",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.StorageGridFilter": {
      "type": "object",
      "title": "StorageGridFilter represents filters to apply to bucket notifications for specifying constraints on objects\n+k8s:openapi-gen=true",
      "properties": {
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.StripeEventSource": {
      "type": "object",
      "title": "StripeEventSource describes the event source for stripe webhook notifications\nMore info at https://stripe.com/docs/webhooks",
      "properties": {
        "apiKey": {
          "title": "APIKey refers to K8s secret that holds Stripe API key. Used only if CreateWebhook is enabled.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "createWebhook": {
          "type": "boolean",
          "title": "CreateWebhook if specified creates a new webhook programmatically.\n+optional"
        },
        "eventFilter": {
          "type": "array",
          "title": "EventFilter describes the type of events to listen to. If not specified, all types of events will be processed.\nMore info at https://stripe.com/docs/api/events/list\n+optional",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "webhook": {
          "title": "Webhook holds configuration for a REST endpoint",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.WebhookContext"
        }
      }
    },
    "io.argoproj.events.v1alpha1.TLSConfig": {
      "description": "TLSConfig refers to TLS configuration for a client.",
      "type": "object",
      "properties": {
        "caCertSecret": {
          "title": "CACertSecret refers to the secret that contains the CA cert",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "clientCertSecret": {
          "title": "ClientCertSecret refers to the secret that contains the client cert",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "clientKeySecret": {
          "title": "ClientKeySecret refers to the secret that contains the client key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "insecureSkipVerify": {
          "type": "boolean",
          "title": "If true, skips creation of TLSConfig with certs and creates an empty TLSConfig. (Defaults to false)\n+optional"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Template": {
      "type": "object",
      "title": "Template holds the information of a sensor deployment template",
      "properties": {
        "affinity": {
          "title": "If specified, the pod's scheduling constraints\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "container": {
          "title": "Container is the main container image to run in the sensor pod\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.Container"
        },
        "imagePullSecrets": {
          "type": "array",
          "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use. For example,\nin the case of docker, only DockerConfig type secrets are honored.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod\n+optional\n+patchMergeKey=name\n+patchStrategy=merge",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          }
        },
        "metadata": {
          "title": "Metadata sets the pods's metadata, i.e. annotations and labels",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Metadata"
        },
        "nodeSelector": {
          "type": "object",
          "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "priority": {
          "type": "integer",
          "title": "The priority value. Various system components use this field to find the\npriority of the EventSource pod. When Priority Admission Controller is enabled,\nit prevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\nMore info: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n+optional"
        },
        "priorityClassName": {
          "type": "string",
          "title": "If specified, indicates the EventSource pod's priority. \"system-node-critical\"\nand \"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\nMore info: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/\n+optional"
        },
        "securityContext": {
          "title": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccountName": {
          "type": "string",
          "title": "ServiceAccountName is the name of the ServiceAccount to use to run sensor pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
        },
        "tolerations": {
          "type": "array",
          "title": "If specified, the pod's tolerations.\n+optional",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          }
        },
        "volumes": {
          "type": "array",
          "title": "Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.\n+patchStrategy=merge\n+patchMergeKey=name\n+optional",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        }
      }
    },
    "io.argoproj.events.v1alpha1.TimeFilter": {
      "description": "TimeFilter describes a window in time.\nIt filters out events that occur outside the time limits.\nIn other words, only events that occur after Start and before Stop\nwill pass this filter.",
      "type": "object",
      "properties": {
        "start": {
          "description": "Start is the beginning of a time window in UTC.\nBefore this time, events for this dependency are ignored.\nFormat is hh:mm:ss.",
          "type": "string"
        },
        "stop": {
          "description": "Stop is the end of a time window in UTC.\nAfter or equal to this time, events for this dependency are ignored and\nFormat is hh:mm:ss.\nIf it is smaller than Start, it is treated as next day of Start\n(e.g.: 22:00:00-01:00:00 means 22:00:00-25:00:00).",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.Trigger": {
      "type": "object",
      "title": "Trigger is an action taken, output produced, an event created, a message sent",
      "properties": {
        "parameters": {
          "type": "array",
          "title": "Parameters is the list of parameters applied to the trigger template definition",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameter"
          }
        },
        "policy": {
          "title": "Policy to configure backoff and execution criteria for the trigger\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerPolicy"
        },
        "rateLimit": {
          "title": "Rate limit, default unit is Second\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.RateLimit"
        },
        "retryStrategy": {
          "title": "Retry strategy, defaults to no retry\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Backoff"
        },
        "template": {
          "description": "Template describes the trigger specification.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerTemplate"
        }
      }
    },
    "io.argoproj.events.v1alpha1.TriggerParameter": {
      "type": "object",
      "title": "TriggerParameter indicates a passed parameter to a service template",
      "properties": {
        "dest": {
          "description": "Dest is the JSONPath of a resource key.\nA path is a series of keys separated by a dot. The colon character can be escaped with '.'\nThe -1 key can be used to append a value to an existing array.\nSee https://github.com/tidwall/sjson#path-syntax for more information about how this is used.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is what to do with the existing value at Dest, whether to\n'prepend', 'overwrite', or 'append' it.",
          "type": "string"
        },
        "src": {
          "title": "Src contains a source reference to the value of the parameter from a dependency",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.TriggerParameterSource"
        }
      }
    },
    "io.argoproj.events.v1alpha1.TriggerParameterSource": {
      "type": "object",
      "title": "TriggerParameterSource defines the source for a parameter from a event event",
      "properties": {
        "contextKey": {
          "description": "ContextKey is the JSONPath of the event's (JSON decoded) context key\nContextKey is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'.\nTo access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'.\nSee https://github.com/tidwall/gjson#path-syntax for more information on how to use this.",
          "type": "string"
        },
        "contextTemplate": {
          "type": "string",
          "title": "ContextTemplate is a go-template for extracting a string from the event's context.\nIf a ContextTemplate is provided with a ContextKey, the template will be evaluated first and fallback to the ContextKey.\nThe templating follows the standard go-template syntax as well as sprig's extra functions.\nSee https://pkg.go.dev/text/template and https://masterminds.github.io/sprig/"
        },
        "dataKey": {
          "description": "DataKey is the JSONPath of the event's (JSON decoded) data key\nDataKey is a series of keys separated by a dot. A key may contain wildcard characters '*' and '?'.\nTo access an array value use the index as the key. The dot and wildcard characters can be escaped with '\\\\'.\nSee https://github.com/tidwall/gjson#path-syntax for more information on how to use this.",
          "type": "string"
        },
        "dataTemplate": {
          "type": "string",
          "title": "DataTemplate is a go-template for extracting a string from the event's data.\nIf a DataTemplate is provided with a DataKey, the template will be evaluated first and fallback to the DataKey.\nThe templating follows the standard go-template syntax as well as sprig's extra functions.\nSee https://pkg.go.dev/text/template and https://masterminds.github.io/sprig/"
        },
        "dependencyName": {
          "description": "DependencyName refers to the name of the dependency. The event which is stored for this dependency is used as payload\nfor the parameterization. Make sure to refer to one of the dependencies you have defined under Dependencies list.",
          "type": "string"
        },
        "value": {
          "description": "Value is the default literal value to use for this parameter source\nThis is only used if the DataKey is invalid.\nIf the DataKey is invalid and this is not defined, this param source will produce an error.",
          "type": "string"
        }
      }
    },
    "io.argoproj.events.v1alpha1.TriggerPolicy": {
      "type": "object",
      "title": "TriggerPolicy dictates the policy for the trigger retries",
      "properties": {
        "k8s": {
          "title": "K8SResourcePolicy refers to the policy used to check the state of K8s based triggers using using labels",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.K8SResourcePolicy"
        },
        "status": {
          "title": "Status refers to the policy used to check the state of the trigger using response status",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.StatusPolicy"
        }
      }
    },
    "io.argoproj.events.v1alpha1.TriggerTemplate": {
      "description": "TriggerTemplate is the template that describes trigger specification.",
      "type": "object",
      "properties": {
        "argoWorkflow": {
          "title": "ArgoWorkflow refers to the trigger that can perform various operations on an Argo io.argoproj.workflow.v1alpha1.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.ArgoWorkflowTrigger"
        },
        "awsLambda": {
          "title": "AWSLambda refers to the trigger designed to invoke AWS Lambda function with with on-the-fly constructable payload.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AWSLambdaTrigger"
        },
        "azureEventHubs": {
          "title": "AzureEventHubs refers to the trigger send an event to an Azure Event Hub.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.AzureEventHubsTrigger"
        },
        "conditions": {
          "type": "string",
          "title": "Conditions is the conditions to execute the trigger.\nFor example: \"(dep01 || dep02) \u0026\u0026 dep04\"\n+optional"
        },
        "conditionsReset": {
          "type": "array",
          "title": "Criteria to reset the conditons\n+optional",
          "items": {
            "$ref": "#/definitions/io.argoproj.events.v1alpha1.ConditionsResetCriteria"
          }
        },
        "custom": {
          "title": "CustomTrigger refers to the trigger designed to connect to a gRPC trigger server and execute a custom trigger.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.CustomTrigger"
        },
        "http": {
          "title": "HTTP refers to the trigger designed to dispatch a HTTP request with on-the-fly constructable payload.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.HTTPTrigger"
        },
        "k8s": {
          "title": "StandardK8STrigger refers to the trigger designed to create or update a generic Kubernetes resource.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.StandardK8STrigger"
        },
        "kafka": {
          "description": "Kafka refers to the trigger designed to place messages on Kafka topic.\n+optional.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.KafkaTrigger"
        },
        "log": {
          "title": "Log refers to the trigger designed to invoke log the io.argoproj.workflow.v1alpha1.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.LogTrigger"
        },
        "name": {
          "description": "Name is a unique name of the action to take.",
          "type": "string"
        },
        "nats": {
          "description": "NATS refers to the trigger designed to place message on NATS subject.\n+optional.",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.NATSTrigger"
        },
        "openWhisk": {
          "title": "OpenWhisk refers to the trigger designed to invoke OpenWhisk action.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.OpenWhiskTrigger"
        },
        "pulsar": {
          "title": "Pulsar refers to the trigger designed to place messages on Pulsar topic.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.PulsarTrigger"
        },
        "slack": {
          "title": "Slack refers to the trigger designed to send slack notification message.\n+optional",
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.SlackTrigger"
        }
      }
    },
    "io.argoproj.events.v1alpha1.URLArtifact": {
      "description": "URLArtifact contains information about an artifact at an http endpoint.",
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "title": "Path is the complete URL"
        },
        "verifyCert": {
          "type": "boolean",
          "title": "VerifyCert decides whether the connection is secure or not"
        }
      }
    },
    "io.argoproj.events.v1alpha1.ValueFromSource": {
      "type": "object",
      "title": "ValueFromSource allows you to reference keys from either a Configmap or Secret",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.events.v1alpha1.WatchPathConfig": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string",
          "title": "Directory to watch for events"
        },
        "path": {
          "type": "string",
          "title": "Path is relative path of object to watch with respect to the directory"
        },
        "pathRegexp": {
          "type": "string",
          "title": "PathRegexp is regexp of relative path of object to watch with respect to the directory"
        }
      }
    },
    "io.argoproj.events.v1alpha1.WebhookContext": {
      "type": "object",
      "title": "WebhookContext holds a general purpose REST API context",
      "properties": {
        "authSecret": {
          "title": "AuthSecret holds a secret selector that contains a bearer token for authentication\n+optional",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "endpoint": {
          "type": "string",
          "title": "REST API endpoint"
        },
        "metadata": {
          "type": "object",
          "title": "Metadata holds the user defined metadata which will passed along the event payload.\n+optional",
          "additionalProperties": {
            "type": "string"
          }
        },
        "method": {
          "type": "string",
          "title": "Method is HTTP request method that indicates the desired action to be performed for a given resource.\nSee RFC7231 Hypertext Transfer Protocol (HTTP/1.1): Semantics and Content"
        },
        "port": {
          "description": "Port on which HTTP server is listening for incoming events.",
          "type": "string"
        },
        "serverCertSecret": {
          "description": "ServerCertPath refers the file that contains the cert.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "serverKeySecret": {
          "title": "ServerKeyPath refers the file that contains private key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "url": {
          "description": "URL is the url of the server.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Amount": {
      "description": "Amount represent a numeric amount.",
      "type": "number"
    },
    "io.argoproj.workflow.v1alpha1.ArchiveStrategy": {
      "description": "ArchiveStrategy describes how to archive files/directory when saving artifacts",
      "type": "object",
      "properties": {
        "none": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.NoneStrategy"
        },
        "tar": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TarStrategy"
        },
        "zip": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ZipStrategy"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArchivedWorkflowDeletedResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.Arguments": {
      "description": "Arguments to a template",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Artifacts is the list of artifacts to pass to the template or workflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Artifact"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "parameters": {
          "description": "Parameters is the list of parameters to pass to the template or workflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Parameter"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Artifact": {
      "description": "Artifact indicates an artifact to place at a specified path",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "archive": {
          "description": "Archive controls how the artifact will be saved to the artifact repository.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArchiveStrategy"
        },
        "archiveLogs": {
          "description": "ArchiveLogs indicates if the container logs should be archived",
          "type": "boolean"
        },
        "artifactory": {
          "description": "Artifactory contains artifactory artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactoryArtifact"
        },
        "from": {
          "description": "From allows an artifact to reference an artifact from a previous step",
          "type": "string"
        },
        "fromExpression": {
          "description": "FromExpression, if defined, is evaluated to specify the value for the artifact",
          "type": "string"
        },
        "gcs": {
          "description": "GCS contains GCS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GCSArtifact"
        },
        "git": {
          "description": "Git contains git artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GitArtifact"
        },
        "globalName": {
          "description": "GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts",
          "type": "string"
        },
        "hdfs": {
          "description": "HDFS contains HDFS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HDFSArtifact"
        },
        "http": {
          "description": "HTTP contains HTTP artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTPArtifact"
        },
        "mode": {
          "description": "mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.",
          "type": "integer"
        },
        "name": {
          "description": "name of the artifact. must be unique within a template's inputs/outputs.",
          "type": "string"
        },
        "optional": {
          "description": "Make Artifacts optional, if Artifacts doesn't generate or exist",
          "type": "boolean"
        },
        "oss": {
          "description": "OSS contains OSS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSArtifact"
        },
        "path": {
          "description": "Path is the container path to the artifact",
          "type": "string"
        },
        "raw": {
          "description": "Raw contains raw artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RawArtifact"
        },
        "recurseMode": {
          "description": "If mode is set, apply the permission recursively into the artifact if it is a folder",
          "type": "boolean"
        },
        "s3": {
          "description": "S3 contains S3 artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3Artifact"
        },
        "subPath": {
          "description": "SubPath allows an artifact to be sourced from a subpath within the specified source",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactLocation": {
      "description": "ArtifactLocation describes a location for a single or multiple artifacts. It is used as single artifact in the context of inputs/outputs (e.g. outputs.artifacts.artname). It is also used to describe the location of multiple artifacts such as the archive location of a single workflow step, which the executor will use as a default location to store its files.",
      "type": "object",
      "properties": {
        "archiveLogs": {
          "description": "ArchiveLogs indicates if the container logs should be archived",
          "type": "boolean"
        },
        "artifactory": {
          "description": "Artifactory contains artifactory artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactoryArtifact"
        },
        "gcs": {
          "description": "GCS contains GCS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GCSArtifact"
        },
        "git": {
          "description": "Git contains git artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GitArtifact"
        },
        "hdfs": {
          "description": "HDFS contains HDFS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HDFSArtifact"
        },
        "http": {
          "description": "HTTP contains HTTP artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTPArtifact"
        },
        "oss": {
          "description": "OSS contains OSS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSArtifact"
        },
        "raw": {
          "description": "Raw contains raw artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RawArtifact"
        },
        "s3": {
          "description": "S3 contains S3 artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3Artifact"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactPaths": {
      "description": "ArtifactPaths expands a step from a collection of artifacts",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "archive": {
          "description": "Archive controls how the artifact will be saved to the artifact repository.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArchiveStrategy"
        },
        "archiveLogs": {
          "description": "ArchiveLogs indicates if the container logs should be archived",
          "type": "boolean"
        },
        "artifactory": {
          "description": "Artifactory contains artifactory artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactoryArtifact"
        },
        "from": {
          "description": "From allows an artifact to reference an artifact from a previous step",
          "type": "string"
        },
        "fromExpression": {
          "description": "FromExpression, if defined, is evaluated to specify the value for the artifact",
          "type": "string"
        },
        "gcs": {
          "description": "GCS contains GCS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GCSArtifact"
        },
        "git": {
          "description": "Git contains git artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GitArtifact"
        },
        "globalName": {
          "description": "GlobalName exports an output artifact to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.artifacts.XXXX}} and in workflow.status.outputs.artifacts",
          "type": "string"
        },
        "hdfs": {
          "description": "HDFS contains HDFS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HDFSArtifact"
        },
        "http": {
          "description": "HTTP contains HTTP artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTPArtifact"
        },
        "mode": {
          "description": "mode bits to use on this file, must be a value between 0 and 0777 set when loading input artifacts.",
          "type": "integer"
        },
        "name": {
          "description": "name of the artifact. must be unique within a template's inputs/outputs.",
          "type": "string"
        },
        "optional": {
          "description": "Make Artifacts optional, if Artifacts doesn't generate or exist",
          "type": "boolean"
        },
        "oss": {
          "description": "OSS contains OSS artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSArtifact"
        },
        "path": {
          "description": "Path is the container path to the artifact",
          "type": "string"
        },
        "raw": {
          "description": "Raw contains raw artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RawArtifact"
        },
        "recurseMode": {
          "description": "If mode is set, apply the permission recursively into the artifact if it is a folder",
          "type": "boolean"
        },
        "s3": {
          "description": "S3 contains S3 artifact location details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3Artifact"
        },
        "subPath": {
          "description": "SubPath allows an artifact to be sourced from a subpath within the specified source",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactRepository": {
      "description": "ArtifactRepository represents an artifact repository in which a controller will store its artifacts",
      "type": "object",
      "properties": {
        "archiveLogs": {
          "description": "ArchiveLogs enables log archiving",
          "type": "boolean"
        },
        "artifactory": {
          "description": "Artifactory stores artifacts to JFrog Artifactory",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactoryArtifactRepository"
        },
        "gcs": {
          "description": "GCS stores artifact in a GCS object store",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.GCSArtifactRepository"
        },
        "hdfs": {
          "description": "HDFS stores artifacts in HDFS",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HDFSArtifactRepository"
        },
        "oss": {
          "description": "OSS stores artifact in a OSS-compliant object store",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSArtifactRepository"
        },
        "s3": {
          "description": "S3 stores artifact in a S3-compliant object store",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3ArtifactRepository"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactRepositoryRef": {
      "type": "object",
      "properties": {
        "configMap": {
          "description": "The name of the config map. Defaults to \"artifact-repositories\".",
          "type": "string"
        },
        "key": {
          "description": "The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactRepositoryRefStatus": {
      "type": "object",
      "properties": {
        "artifactRepository": {
          "description": "The repository the workflow will use. This maybe empty before v3.1.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactRepository"
        },
        "configMap": {
          "description": "The name of the config map. Defaults to \"artifact-repositories\".",
          "type": "string"
        },
        "default": {
          "description": "If this ref represents the default artifact repository, rather than a config map.",
          "type": "boolean"
        },
        "key": {
          "description": "The config map key. Defaults to the value of the \"workflows.argoproj.io/default-artifact-repository\" annotation.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the config map. Defaults to the workflow's namespace, or the controller's namespace (if found).",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactoryArtifact": {
      "description": "ArtifactoryArtifact is the location of an artifactory artifact",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "passwordSecret": {
          "description": "PasswordSecret is the secret selector to the repository password",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "url": {
          "description": "URL of the artifact",
          "type": "string"
        },
        "usernameSecret": {
          "description": "UsernameSecret is the secret selector to the repository username",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ArtifactoryArtifactRepository": {
      "description": "ArtifactoryArtifactRepository defines the controller configuration for an artifactory artifact repository",
      "type": "object",
      "properties": {
        "passwordSecret": {
          "description": "PasswordSecret is the secret selector to the repository password",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "repoURL": {
          "description": "RepoURL is the url for artifactory repo.",
          "type": "string"
        },
        "usernameSecret": {
          "description": "UsernameSecret is the secret selector to the repository username",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Backoff": {
      "description": "Backoff is a backoff strategy to use within retryStrategy",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")",
          "type": "string"
        },
        "factor": {
          "description": "Factor is a factor to multiply the base duration after each failed retry",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "maxDuration": {
          "description": "MaxDuration is the maximum amount of time allowed for the backoff strategy",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Cache": {
      "description": "Cache is the configuration for the type of cache to be used",
      "type": "object",
      "required": [
        "configMap"
      ],
      "properties": {
        "configMap": {
          "description": "ConfigMap sets a ConfigMap-based cache",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate": {
      "description": "ClusterWorkflowTemplate is the definition of a workflow template resource in cluster scope",
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSpec"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateCreateRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateDeleteResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateLintRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateList": {
      "description": "ClusterWorkflowTemplateList is list of ClusterWorkflowTemplate resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplateUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "DEPRECATED: This field is ignored.",
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ClusterWorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Condition": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Message is the condition message",
          "type": "string"
        },
        "status": {
          "description": "Status is the status of the condition",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of condition",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ContainerNode": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ContainerSetRetryStrategy": {
      "type": "object",
      "required": [
        "retries"
      ],
      "properties": {
        "duration": {
          "description": "Duration is the time between each retry, examples values are \"300ms\", \"1s\" or \"5m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
          "type": "string"
        },
        "retries": {
          "description": "Nbr of retries",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ContainerSetTemplate": {
      "type": "object",
      "required": [
        "containers"
      ],
      "properties": {
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ContainerNode"
          }
        },
        "retryStrategy": {
          "description": "RetryStrategy describes how to retry a container nodes in the container set if it fails. Nbr of retries(default 0) and sleep duration between retries(default 0s, instant retry) can be set.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ContainerSetRetryStrategy"
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ContinueOn": {
      "description": "ContinueOn defines if a workflow should continue even if a task or step fails/errors. It can be specified if the workflow should continue when the pod errors, fails or both.",
      "type": "object",
      "properties": {
        "error": {
          "type": "boolean"
        },
        "failed": {
          "type": "boolean"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Counter": {
      "description": "Counter is a Counter prometheus metric",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "description": "Value is the value of the metric",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CreateCronWorkflowRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "cronWorkflow": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CreateS3BucketOptions": {
      "description": "CreateS3BucketOptions options used to determine automatic automatic bucket-creation process",
      "type": "object",
      "properties": {
        "objectLocking": {
          "description": "ObjectLocking Enable object locking",
          "type": "boolean"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflow": {
      "description": "CronWorkflow is the definition of a scheduled workflow resource",
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowSpec"
        },
        "status": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflowStatus"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowDeletedResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowList": {
      "description": "CronWorkflowList is list of CronWorkflow resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowResumeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowSpec": {
      "description": "CronWorkflowSpec is the specification of a CronWorkflow",
      "type": "object",
      "required": [
        "workflowSpec",
        "schedule"
      ],
      "properties": {
        "concurrencyPolicy": {
          "description": "ConcurrencyPolicy is the K8s-style concurrency policy that will be used",
          "type": "string"
        },
        "failedJobsHistoryLimit": {
          "description": "FailedJobsHistoryLimit is the number of failed jobs to be kept at a time",
          "type": "integer"
        },
        "schedule": {
          "description": "Schedule is a schedule to run the Workflow in Cron format",
          "type": "string"
        },
        "startingDeadlineSeconds": {
          "description": "StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.",
          "type": "integer"
        },
        "successfulJobsHistoryLimit": {
          "description": "SuccessfulJobsHistoryLimit is the number of successful jobs to be kept at a time",
          "type": "integer"
        },
        "suspend": {
          "description": "Suspend is a flag that will stop new CronWorkflows from running if set to true",
          "type": "boolean"
        },
        "timezone": {
          "description": "Timezone is the timezone against which the cron schedule will be calculated, e.g. \"Asia/Tokyo\". Default is machine's local time.",
          "type": "string"
        },
        "workflowMetadata": {
          "description": "WorkflowMetadata contains some metadata of the workflow to be run",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "workflowSpec": {
          "description": "WorkflowSpec is the spec of the workflow to be run",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSpec"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowStatus": {
      "description": "CronWorkflowStatus is the status of a CronWorkflow",
      "type": "object",
      "required": [
        "active",
        "lastScheduledTime",
        "conditions"
      ],
      "properties": {
        "active": {
          "description": "Active is a list of active workflows stemming from this CronWorkflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
          }
        },
        "conditions": {
          "description": "Conditions is a list of conditions the CronWorkflow may have",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Condition"
          }
        },
        "lastScheduledTime": {
          "description": "LastScheduleTime is the last time the CronWorkflow was scheduled",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.CronWorkflowSuspendRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.DAGTask": {
      "description": "DAGTask represents a node in the graph during DAG execution",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "arguments": {
          "description": "Arguments are the parameter and artifact arguments to the template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Arguments"
        },
        "continueOn": {
          "description": "ContinueOn makes argo to proceed with the following step even if this step fails. Errors and Failed states can be specified",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ContinueOn"
        },
        "dependencies": {
          "description": "Dependencies are name of other targets which this depends on",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "depends": {
          "description": "Depends are name of other targets which this depends on",
          "type": "string"
        },
        "hooks": {
          "description": "Hooks hold the lifecycle hook which is invoked at lifecycle of task, irrespective of the success, failure, or error status of the primary task",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LifecycleHook"
          }
        },
        "inline": {
          "description": "Inline is the template. Template must be empty if this is declared (and vice-versa).",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
        },
        "name": {
          "description": "Name is the name of the target",
          "type": "string"
        },
        "onExit": {
          "description": "OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.",
          "type": "string"
        },
        "template": {
          "description": "Name of template to execute",
          "type": "string"
        },
        "templateRef": {
          "description": "TemplateRef is the reference to the template resource to execute.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TemplateRef"
        },
        "when": {
          "description": "When is an expression in which the task should conditionally execute",
          "type": "string"
        },
        "withItems": {
          "description": "WithItems expands a task into multiple parallel tasks from the items in the list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Item"
          }
        },
        "withParam": {
          "description": "WithParam expands a task into multiple parallel tasks from the value in the parameter, which is expected to be a JSON list.",
          "type": "string"
        },
        "withSequence": {
          "description": "WithSequence expands a task into a numeric sequence",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Sequence"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.DAGTemplate": {
      "description": "DAGTemplate is a template subtype for directed acyclic graph templates",
      "type": "object",
      "required": [
        "tasks"
      ],
      "properties": {
        "failFast": {
          "description": "This flag is for DAG logic. The DAG logic has a built-in \"fail fast\" feature to stop scheduling new steps, as soon as it detects that one of the DAG nodes is failed. Then it waits until all DAG nodes are completed before failing the DAG itself. The FailFast flag default is true,  if set to false, it will allow a DAG to run all branches of the DAG to completion (either success or failure), regardless of the failed outcomes of branches in the DAG. More info and example about this feature at https://github.com/argoproj/argo-workflows/issues/1442",
          "type": "boolean"
        },
        "target": {
          "description": "Target are one or more names of targets to execute in a DAG",
          "type": "string"
        },
        "tasks": {
          "description": "Tasks are a list of DAG tasks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.DAGTask"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Data": {
      "description": "Data is a data template",
      "type": "object",
      "required": [
        "source",
        "transformation"
      ],
      "properties": {
        "source": {
          "description": "Source sources external data into a data template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.DataSource"
        },
        "transformation": {
          "description": "Transformation applies a set of transformations",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TransformationStep"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.DataSource": {
      "description": "DataSource sources external data into a data template",
      "type": "object",
      "properties": {
        "artifactPaths": {
          "description": "ArtifactPaths is a data transformation that collects a list of artifact paths",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactPaths"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Event": {
      "type": "object",
      "required": [
        "selector"
      ],
      "properties": {
        "selector": {
          "description": "Selector (https://github.com/antonmedv/expr) that we must must match the io.argoproj.workflow.v1alpha1. E.g. `payload.message == \"test\"`",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.EventResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.ExecutorConfig": {
      "description": "ExecutorConfig holds configurations of an executor container.",
      "type": "object",
      "properties": {
        "serviceAccountName": {
          "description": "ServiceAccountName specifies the service account name of the executor container.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.GCSArtifact": {
      "description": "GCSArtifact is the location of a GCS artifact",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "key": {
          "description": "Key is the path in the bucket where the artifact resides",
          "type": "string"
        },
        "serviceAccountKeySecret": {
          "description": "ServiceAccountKeySecret is the secret selector to the bucket's service account key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.GCSArtifactRepository": {
      "description": "GCSArtifactRepository defines the controller configuration for a GCS artifact repository",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "keyFormat": {
          "description": "KeyFormat is defines the format of how to store keys. Can reference workflow variables",
          "type": "string"
        },
        "serviceAccountKeySecret": {
          "description": "ServiceAccountKeySecret is the secret selector to the bucket's service account key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Gauge": {
      "description": "Gauge is a Gauge prometheus metric",
      "type": "object",
      "required": [
        "value",
        "realtime"
      ],
      "properties": {
        "realtime": {
          "description": "Realtime emits this metric in real time if applicable",
          "type": "boolean"
        },
        "value": {
          "description": "Value is the value of the metric",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.GetUserInfoResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "issuer": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.GitArtifact": {
      "description": "GitArtifact is the location of an git artifact",
      "type": "object",
      "required": [
        "repo"
      ],
      "properties": {
        "depth": {
          "description": "Depth specifies clones/fetches should be shallow and include the given number of commits from the branch tip",
          "type": "integer"
        },
        "disableSubmodules": {
          "description": "DisableSubmodules disables submodules during git clone",
          "type": "boolean"
        },
        "fetch": {
          "description": "Fetch specifies a number of refs that should be fetched before checkout",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "insecureIgnoreHostKey": {
          "description": "InsecureIgnoreHostKey disables SSH strict host key checking during git clone",
          "type": "boolean"
        },
        "passwordSecret": {
          "description": "PasswordSecret is the secret selector to the repository password",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "repo": {
          "description": "Repo is the git repository",
          "type": "string"
        },
        "revision": {
          "description": "Revision is the git commit, tag, branch to checkout",
          "type": "string"
        },
        "sshPrivateKeySecret": {
          "description": "SSHPrivateKeySecret is the secret selector to the repository ssh private key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "usernameSecret": {
          "description": "UsernameSecret is the secret selector to the repository username",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HDFSArtifact": {
      "description": "HDFSArtifact is the location of an HDFS artifact",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "addresses": {
          "description": "Addresses is accessible addresses of HDFS name nodes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "description": "Force copies a file forcibly even if it exists",
          "type": "boolean"
        },
        "hdfsUser": {
          "description": "HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.",
          "type": "string"
        },
        "krbCCacheSecret": {
          "description": "KrbCCacheSecret is the secret selector for Kerberos ccache Either ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbConfigConfigMap": {
          "description": "KrbConfig is the configmap selector for Kerberos config as string It must be set if either ccache or keytab is used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "krbKeytabSecret": {
          "description": "KrbKeytabSecret is the secret selector for Kerberos keytab Either ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbRealm": {
          "description": "KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.",
          "type": "string"
        },
        "krbServicePrincipalName": {
          "description": "KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.",
          "type": "string"
        },
        "krbUsername": {
          "description": "KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.",
          "type": "string"
        },
        "path": {
          "description": "Path is a file path in HDFS",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HDFSArtifactRepository": {
      "description": "HDFSArtifactRepository defines the controller configuration for an HDFS artifact repository",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "Addresses is accessible addresses of HDFS name nodes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "force": {
          "description": "Force copies a file forcibly even if it exists",
          "type": "boolean"
        },
        "hdfsUser": {
          "description": "HDFSUser is the user to access HDFS file system. It is ignored if either ccache or keytab is used.",
          "type": "string"
        },
        "krbCCacheSecret": {
          "description": "KrbCCacheSecret is the secret selector for Kerberos ccache Either ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbConfigConfigMap": {
          "description": "KrbConfig is the configmap selector for Kerberos config as string It must be set if either ccache or keytab is used.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "krbKeytabSecret": {
          "description": "KrbKeytabSecret is the secret selector for Kerberos keytab Either ccache or keytab can be set to use Kerberos.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "krbRealm": {
          "description": "KrbRealm is the Kerberos realm used with Kerberos keytab It must be set if keytab is used.",
          "type": "string"
        },
        "krbServicePrincipalName": {
          "description": "KrbServicePrincipalName is the principal name of Kerberos service It must be set if either ccache or keytab is used.",
          "type": "string"
        },
        "krbUsername": {
          "description": "KrbUsername is the Kerberos username used with Kerberos keytab It must be set if keytab is used.",
          "type": "string"
        },
        "pathFormat": {
          "description": "PathFormat is defines the format of path to store a file. Can reference workflow variables",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HTTP": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "body": {
          "description": "Body is content of the HTTP Request",
          "type": "string"
        },
        "headers": {
          "description": "Headers are an optional list of headers to send with HTTP requests",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTPHeader"
          }
        },
        "insecureSkipVerify": {
          "description": "insecureSkipVerify is a bool when if set to true will skip TLS verification for the HTTP client",
          "type": "boolean"
        },
        "method": {
          "description": "Method is HTTP methods for HTTP Request",
          "type": "string"
        },
        "successCondition": {
          "description": "SuccessCondition is an expression if evaluated to true is considered successful",
          "type": "string"
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds is request timeout for HTTP Request. Default is 30 seconds",
          "type": "integer"
        },
        "url": {
          "description": "URL of the HTTP Request",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HTTPArtifact": {
      "description": "HTTPArtifact allows a file served on HTTP to be placed as an input artifact in a container",
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "headers": {
          "description": "Headers are an optional list of headers to send with HTTP requests for artifacts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Header"
          }
        },
        "passwordSecret": {
          "description": "PasswordSecret is the secret selector to the repository password",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "url": {
          "description": "URL of the artifact",
          "type": "string"
        },
        "usernameSecret": {
          "description": "UsernameSecret is the secret selector to the repository username",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HTTPHeader": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTPHeaderSource"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.HTTPHeaderSource": {
      "type": "object",
      "properties": {
        "secretKeyRef": {
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Header": {
      "description": "Header indicate a key-value request header to be used when fetching artifacts over HTTP",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name is the header name",
          "type": "string"
        },
        "value": {
          "description": "Value is the literal value to use for the header",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Histogram": {
      "description": "Histogram is a Histogram prometheus metric",
      "type": "object",
      "required": [
        "value",
        "buckets"
      ],
      "properties": {
        "buckets": {
          "description": "Buckets is a list of bucket divisors for the histogram",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Amount"
          }
        },
        "value": {
          "description": "Value is the value of the metric",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.InfoResponse": {
      "type": "object",
      "properties": {
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Link"
          }
        },
        "managedNamespace": {
          "type": "string"
        },
        "modals": {
          "type": "object",
          "title": "which modals to show",
          "additionalProperties": {
            "type": "boolean"
          }
        },
        "navColor": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Inputs": {
      "description": "Inputs are the mechanism for passing parameters, artifacts, volumes from one template to another",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Artifact are a list of artifacts passed as inputs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Artifact"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "parameters": {
          "description": "Parameters are a list of parameters passed as inputs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Parameter"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Item": {
      "description": "Item expands a single workflow step into multiple parallel steps The value of Item can be a map, string, bool, or number"
    },
    "io.argoproj.workflow.v1alpha1.LabelKeys": {
      "description": "LabelKeys is list of keys",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.LabelValueFrom": {
      "type": "object",
      "required": [
        "expression"
      ],
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.LabelValues": {
      "description": "Labels is list of workflow labels",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.LifecycleHook": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "arguments": {
          "description": "Arguments hold arguments to the template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Arguments"
        },
        "expression": {
          "description": "Expression is a condition expression for when a node will be retried. If it evaluates to false, the node will not be retried and the retry strategy will be ignored",
          "type": "string"
        },
        "template": {
          "description": "Template is the name of the template to execute by the hook",
          "type": "string"
        },
        "templateRef": {
          "description": "TemplateRef is the reference to the template resource to execute by the hook",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TemplateRef"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Link": {
      "description": "A link to another app.",
      "type": "object",
      "required": [
        "name",
        "scope",
        "url"
      ],
      "properties": {
        "name": {
          "description": "The name of the link, E.g. \"Workflow Logs\" or \"Pod Logs\"",
          "type": "string"
        },
        "scope": {
          "description": "\"workflow\", \"pod\", \"pod-logs\", \"event-source-logs\", \"sensor-logs\" or \"chat\"",
          "type": "string"
        },
        "url": {
          "description": "The URL. Can contain \"${metadata.namespace}\", \"${metadata.name}\", \"${status.startedAt}\", \"${status.finishedAt}\" or any other element in workflow yaml, e.g. \"${io.argoproj.workflow.v1alpha1.metadata.annotations.userDefinedKey}\"",
          "type": "string"
        }
      },
      "x-kubernetes-patch-merge-key": "name",
      "x-kubernetes-patch-strategy": "merge"
    },
    "io.argoproj.workflow.v1alpha1.LintCronWorkflowRequest": {
      "type": "object",
      "properties": {
        "cronWorkflow": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.LogEntry": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "podName": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.MemoizationStatus": {
      "description": "MemoizationStatus is the status of this memoized node",
      "type": "object",
      "required": [
        "hit",
        "key",
        "cacheName"
      ],
      "properties": {
        "cacheName": {
          "description": "Cache is the name of the cache that was used",
          "type": "string"
        },
        "hit": {
          "description": "Hit indicates whether this node was created from a cache entry",
          "type": "boolean"
        },
        "key": {
          "description": "Key is the name of the key used for this node's cache",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Memoize": {
      "description": "Memoization enables caching for the Outputs of the template",
      "type": "object",
      "required": [
        "key",
        "cache",
        "maxAge"
      ],
      "properties": {
        "cache": {
          "description": "Cache sets and configures the kind of cache",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Cache"
        },
        "key": {
          "description": "Key is the key to use as the caching key",
          "type": "string"
        },
        "maxAge": {
          "description": "MaxAge is the maximum age (e.g. \"180s\", \"24h\") of an entry that is still considered valid. If an entry is older than the MaxAge, it will be ignored.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Metadata": {
      "description": "Pod metdata",
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.MetricLabel": {
      "description": "MetricLabel is a single label for a prometheus metric",
      "type": "object",
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Metrics": {
      "description": "Metrics are a list of metrics emitted from a Workflow/Template",
      "type": "object",
      "required": [
        "prometheus"
      ],
      "properties": {
        "prometheus": {
          "description": "Prometheus is a list of prometheus metrics to be emitted",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Prometheus"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Mutex": {
      "description": "Mutex holds Mutex configuration",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the mutex",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.MutexHolding": {
      "description": "MutexHolding describes the mutex and the object which is holding it.",
      "type": "object",
      "properties": {
        "holder": {
          "description": "Holder is a reference to the object which holds the Mutex. Holding Scenario:\n  1. Current workflow's NodeID which is holding the lock.\n     e.g: ${NodeID}\nWaiting Scenario:\n  1. Current workflow or other workflow NodeID which is holding the lock.\n     e.g: ${WorkflowName}/${NodeID}",
          "type": "string"
        },
        "mutex": {
          "description": "Reference for the mutex e.g: ${namespace}/mutex/${mutexName}",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.MutexStatus": {
      "description": "MutexStatus contains which objects hold  mutex locks, and which objects this workflow is waiting on to release locks.",
      "type": "object",
      "properties": {
        "holding": {
          "description": "Holding is a list of mutexes and their respective objects that are held by mutex lock for this io.argoproj.workflow.v1alpha1.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.MutexHolding"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "waiting": {
          "description": "Waiting is a list of mutexes and their respective objects this workflow is waiting for.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.MutexHolding"
          },
          "x-kubernetes-list-type": "atomic"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.NodeResult": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "outputs": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Outputs"
        },
        "phase": {
          "type": "string"
        },
        "progress": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.NodeStatus": {
      "description": "NodeStatus contains status information about an individual node in the workflow",
      "type": "object",
      "required": [
        "id",
        "name",
        "type"
      ],
      "properties": {
        "boundaryID": {
          "description": "BoundaryID indicates the node ID of the associated template root node in which this node belongs to",
          "type": "string"
        },
        "children": {
          "description": "Children is a list of child node IDs",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "daemoned": {
          "description": "Daemoned tracks whether or not this node was daemoned and need to be terminated",
          "type": "boolean"
        },
        "displayName": {
          "description": "DisplayName is a human readable representation of the node. Unique within a template boundary",
          "type": "string"
        },
        "estimatedDuration": {
          "description": "EstimatedDuration in seconds.",
          "type": "integer"
        },
        "finishedAt": {
          "description": "Time at which this node completed",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "hostNodeName": {
          "description": "HostNodeName name of the Kubernetes node on which the Pod is running, if applicable",
          "type": "string"
        },
        "id": {
          "description": "ID is a unique identifier of a node within the worklow It is implemented as a hash of the node name, which makes the ID deterministic",
          "type": "string"
        },
        "inputs": {
          "description": "Inputs captures input parameter values and artifact locations supplied to this template invocation",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Inputs"
        },
        "memoizationStatus": {
          "description": "MemoizationStatus holds information about cached nodes",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.MemoizationStatus"
        },
        "message": {
          "description": "A human readable message indicating details about why the node is in this condition.",
          "type": "string"
        },
        "name": {
          "description": "Name is unique name in the node tree used to generate the node ID",
          "type": "string"
        },
        "outboundNodes": {
          "description": "OutboundNodes tracks the node IDs which are considered \"outbound\" nodes to a template invocation. For every invocation of a template, there are nodes which we considered as \"outbound\". Essentially, these are last nodes in the execution sequence to run, before the template is considered completed. These nodes are then connected as parents to a following step.\n\nIn the case of single pod steps (i.e. container, script, resource templates), this list will be nil since the pod itself is already considered the \"outbound\" node. In the case of DAGs, outbound nodes are the \"target\" tasks (tasks with no children). In the case of steps, outbound nodes are all the containers involved in the last step group. NOTE: since templates are composable, the list of outbound nodes are carried upwards when a DAG/steps template invokes another DAG/steps template. In other words, the outbound nodes of a template, will be a superset of the outbound nodes of its last children.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "outputs": {
          "description": "Outputs captures output parameter values and artifact locations produced by this template invocation",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Outputs"
        },
        "phase": {
          "description": "Phase a simple, high-level summary of where the node is in its lifecycle. Can be used as a state machine.",
          "type": "string"
        },
        "podIP": {
          "description": "PodIP captures the IP of the pod for daemoned steps",
          "type": "string"
        },
        "progress": {
          "description": "Progress to completion",
          "type": "string"
        },
        "resourcesDuration": {
          "description": "ResourcesDuration is indicative, but not accurate, resource duration. This is populated when the nodes completes.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "startedAt": {
          "description": "Time at which this node started",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "synchronizationStatus": {
          "description": "SynchronizationStatus is the synchronization status of the node",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.NodeSynchronizationStatus"
        },
        "templateName": {
          "description": "TemplateName is the template name which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)",
          "type": "string"
        },
        "templateRef": {
          "description": "TemplateRef is the reference to the template resource which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TemplateRef"
        },
        "templateScope": {
          "description": "TemplateScope is the template scope in which the template of this node was retrieved.",
          "type": "string"
        },
        "type": {
          "description": "Type indicates type of node",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.NodeSynchronizationStatus": {
      "description": "NodeSynchronizationStatus stores the status of a node",
      "type": "object",
      "properties": {
        "waiting": {
          "description": "Waiting is the name of the lock that this node is waiting for",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.NoneStrategy": {
      "description": "NoneStrategy indicates to skip tar process and upload the files or directory tree as independent files. Note that if the artifact is a directory, the artifact driver must support the ability to save/load the directory appropriately.",
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.OSSArtifact": {
      "description": "OSSArtifact is the location of an Alibaba Cloud OSS artifact",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "accessKeySecret": {
          "description": "AccessKeySecret is the secret selector to the bucket's access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "createBucketIfNotPresent": {
          "description": "CreateBucketIfNotPresent tells the driver to attempt to create the OSS bucket for output artifacts, if it doesn't exist",
          "type": "boolean"
        },
        "endpoint": {
          "description": "Endpoint is the hostname of the bucket endpoint",
          "type": "string"
        },
        "key": {
          "description": "Key is the path in the bucket where the artifact resides",
          "type": "string"
        },
        "lifecycleRule": {
          "description": "LifecycleRule specifies how to manage bucket's lifecycle",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSLifecycleRule"
        },
        "secretKeySecret": {
          "description": "SecretKeySecret is the secret selector to the bucket's secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "securityToken": {
          "description": "SecurityToken is the user's temporary security token. For more details, check out: https://www.alibabacloud.com/help/doc-detail/100624.htm",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.OSSArtifactRepository": {
      "description": "OSSArtifactRepository defines the controller configuration for an OSS artifact repository",
      "type": "object",
      "properties": {
        "accessKeySecret": {
          "description": "AccessKeySecret is the secret selector to the bucket's access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "createBucketIfNotPresent": {
          "description": "CreateBucketIfNotPresent tells the driver to attempt to create the OSS bucket for output artifacts, if it doesn't exist",
          "type": "boolean"
        },
        "endpoint": {
          "description": "Endpoint is the hostname of the bucket endpoint",
          "type": "string"
        },
        "keyFormat": {
          "description": "KeyFormat is defines the format of how to store keys. Can reference workflow variables",
          "type": "string"
        },
        "lifecycleRule": {
          "description": "LifecycleRule specifies how to manage bucket's lifecycle",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.OSSLifecycleRule"
        },
        "secretKeySecret": {
          "description": "SecretKeySecret is the secret selector to the bucket's secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "securityToken": {
          "description": "SecurityToken is the user's temporary security token. For more details, check out: https://www.alibabacloud.com/help/doc-detail/100624.htm",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.OSSLifecycleRule": {
      "description": "OSSLifecycleRule specifies how to manage bucket's lifecycle",
      "type": "object",
      "properties": {
        "markDeletionAfterDays": {
          "description": "MarkDeletionAfterDays is the number of days before we delete objects in the bucket",
          "type": "integer"
        },
        "markInfrequentAccessAfterDays": {
          "description": "MarkInfrequentAccessAfterDays is the number of days before we convert the objects in the bucket to Infrequent Access (IA) storage type",
          "type": "integer"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Outputs": {
      "description": "Outputs hold parameters, artifacts, and results from a step",
      "type": "object",
      "properties": {
        "artifacts": {
          "description": "Artifacts holds the list of output artifacts produced by a step",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Artifact"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "exitCode": {
          "description": "ExitCode holds the exit code of a script template",
          "type": "string"
        },
        "parameters": {
          "description": "Parameters holds the list of output parameters produced by a step",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Parameter"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "result": {
          "description": "Result holds the result (stdout) of a script template",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ParallelSteps": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowStep"
      }
    },
    "io.argoproj.workflow.v1alpha1.Parameter": {
      "description": "Parameter indicate a passed string parameter to a service template with an optional default value",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "default": {
          "description": "Default is the default value to use for an input parameter if a value was not supplied",
          "type": "string"
        },
        "description": {
          "description": "Description is the parameter description",
          "type": "string"
        },
        "enum": {
          "description": "Enum holds a list of string values to choose from, for the actual value of the parameter",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "globalName": {
          "description": "GlobalName exports an output parameter to the global scope, making it available as '{{io.argoproj.workflow.v1alpha1.outputs.parameters.XXXX}} and in workflow.status.outputs.parameters",
          "type": "string"
        },
        "name": {
          "description": "Name is the parameter name",
          "type": "string"
        },
        "value": {
          "description": "Value is the literal value to use for the parameter. If specified in the context of an input parameter, the value takes precedence over any passed values",
          "type": "string"
        },
        "valueFrom": {
          "description": "ValueFrom is the source for the output parameter's value",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ValueFrom"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Plugin": {
      "description": "Plugin is an Object with exactly one key",
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.PodGC": {
      "description": "PodGC describes how to delete completed pods as they complete",
      "type": "object",
      "properties": {
        "labelSelector": {
          "description": "LabelSelector is the label selector to check if the pods match the labels before being added to the pod GC queue.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "strategy": {
          "description": "Strategy is the strategy to use. One of \"OnPodCompletion\", \"OnPodSuccess\", \"OnWorkflowCompletion\", \"OnWorkflowSuccess\"",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Prometheus": {
      "description": "Prometheus is a prometheus metric to be emitted",
      "type": "object",
      "required": [
        "name",
        "help"
      ],
      "properties": {
        "counter": {
          "description": "Counter is a counter metric",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Counter"
        },
        "gauge": {
          "description": "Gauge is a gauge metric",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Gauge"
        },
        "help": {
          "description": "Help is a string that describes the metric",
          "type": "string"
        },
        "histogram": {
          "description": "Histogram is a histogram metric",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Histogram"
        },
        "labels": {
          "description": "Labels is a list of metric labels",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.MetricLabel"
          }
        },
        "name": {
          "description": "Name is the name of the metric",
          "type": "string"
        },
        "when": {
          "description": "When is a conditional statement that decides when to emit the metric",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.RawArtifact": {
      "description": "RawArtifact allows raw string content to be placed as an artifact in a container",
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "description": "Data is the string contents of the artifact",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ResourceTemplate": {
      "description": "ResourceTemplate is a template subtype to manipulate kubernetes resources",
      "type": "object",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "description": "Action is the action to perform to the resource. Must be one of: get, create, apply, delete, replace, patch",
          "type": "string"
        },
        "failureCondition": {
          "description": "FailureCondition is a label selector expression which describes the conditions of the k8s resource in which the step was considered failed",
          "type": "string"
        },
        "flags": {
          "description": "Flags is a set of additional options passed to kubectl before submitting a resource I.e. to disable resource validation: flags: [\n\t\"--validate=false\"  # disable resource validation\n]",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "manifest": {
          "description": "Manifest contains the kubernetes manifest",
          "type": "string"
        },
        "mergeStrategy": {
          "description": "MergeStrategy is the strategy used to merge a patch. It defaults to \"strategic\" Must be one of: strategic, merge, json",
          "type": "string"
        },
        "setOwnerReference": {
          "description": "SetOwnerReference sets the reference to the workflow on the OwnerReference of generated resource.",
          "type": "boolean"
        },
        "successCondition": {
          "description": "SuccessCondition is a label selector expression which describes the conditions of the k8s resource in which it is acceptable to proceed to the following step",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ResubmitArchivedWorkflowRequest": {
      "type": "object",
      "properties": {
        "memoized": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.RetryAffinity": {
      "description": "RetryAffinity prevents running steps on the same host.",
      "type": "object",
      "properties": {
        "nodeAntiAffinity": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RetryNodeAntiAffinity"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.RetryArchivedWorkflowRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nodeFieldSelector": {
          "type": "string"
        },
        "restartSuccessful": {
          "type": "boolean"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.RetryNodeAntiAffinity": {
      "description": "RetryNodeAntiAffinity is a placeholder for future expansion, only empty nodeAntiAffinity is allowed. In order to prevent running steps on the same host, it uses \"kubernetes.io/hostname\".",
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.RetryStrategy": {
      "description": "RetryStrategy provides controls on how to retry a workflow step",
      "type": "object",
      "properties": {
        "affinity": {
          "description": "Affinity prevents running workflow's step on the same host",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RetryAffinity"
        },
        "backoff": {
          "description": "Backoff is a backoff strategy",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Backoff"
        },
        "expression": {
          "description": "Expression is a condition expression for when a node will be retried. If it evaluates to false, the node will not be retried and the retry strategy will be ignored",
          "type": "string"
        },
        "limit": {
          "description": "Limit is the maximum number of attempts when retrying a container",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "retryPolicy": {
          "description": "RetryPolicy is a policy of NodePhase statuses that will be retried",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.S3Artifact": {
      "description": "S3Artifact is the location of an S3 artifact",
      "type": "object",
      "properties": {
        "accessKeySecret": {
          "description": "AccessKeySecret is the secret selector to the bucket's access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "createBucketIfNotPresent": {
          "description": "CreateBucketIfNotPresent tells the driver to attempt to create the S3 bucket for output artifacts, if it doesn't exist. Setting Enabled Encryption will apply either SSE-S3 to the bucket if KmsKeyId is not set or SSE-KMS if it is.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CreateS3BucketOptions"
        },
        "encryptionOptions": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3EncryptionOptions"
        },
        "endpoint": {
          "description": "Endpoint is the hostname of the bucket endpoint",
          "type": "string"
        },
        "insecure": {
          "description": "Insecure will connect to the service with TLS",
          "type": "boolean"
        },
        "key": {
          "description": "Key is the key in the bucket where the artifact resides",
          "type": "string"
        },
        "region": {
          "description": "Region contains the optional bucket region",
          "type": "string"
        },
        "roleARN": {
          "description": "RoleARN is the Amazon Resource Name (ARN) of the role to assume.",
          "type": "string"
        },
        "secretKeySecret": {
          "description": "SecretKeySecret is the secret selector to the bucket's secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "useSDKCreds": {
          "description": "UseSDKCreds tells the driver to figure out credentials based on sdk defaults.",
          "type": "boolean"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.S3ArtifactRepository": {
      "description": "S3ArtifactRepository defines the controller configuration for an S3 artifact repository",
      "type": "object",
      "properties": {
        "accessKeySecret": {
          "description": "AccessKeySecret is the secret selector to the bucket's access key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "bucket": {
          "description": "Bucket is the name of the bucket",
          "type": "string"
        },
        "createBucketIfNotPresent": {
          "description": "CreateBucketIfNotPresent tells the driver to attempt to create the S3 bucket for output artifacts, if it doesn't exist. Setting Enabled Encryption will apply either SSE-S3 to the bucket if KmsKeyId is not set or SSE-KMS if it is.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CreateS3BucketOptions"
        },
        "encryptionOptions": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.S3EncryptionOptions"
        },
        "endpoint": {
          "description": "Endpoint is the hostname of the bucket endpoint",
          "type": "string"
        },
        "insecure": {
          "description": "Insecure will connect to the service with TLS",
          "type": "boolean"
        },
        "keyFormat": {
          "description": "KeyFormat is defines the format of how to store keys. Can reference workflow variables",
          "type": "string"
        },
        "keyPrefix": {
          "description": "KeyPrefix is prefix used as part of the bucket key in which the controller will store artifacts. DEPRECATED. Use KeyFormat instead",
          "type": "string"
        },
        "region": {
          "description": "Region contains the optional bucket region",
          "type": "string"
        },
        "roleARN": {
          "description": "RoleARN is the Amazon Resource Name (ARN) of the role to assume.",
          "type": "string"
        },
        "secretKeySecret": {
          "description": "SecretKeySecret is the secret selector to the bucket's secret key",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        },
        "useSDKCreds": {
          "description": "UseSDKCreds tells the driver to figure out credentials based on sdk defaults.",
          "type": "boolean"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.S3EncryptionOptions": {
      "description": "S3EncryptionOptions used to determine encryption options during s3 operations",
      "type": "object",
      "properties": {
        "enableEncryption": {
          "description": "EnableEncryption tells the driver to encrypt objects if set to true. If kmsKeyId and serverSideCustomerKeySecret are not set, SSE-S3 will be used",
          "type": "boolean"
        },
        "kmsEncryptionContext": {
          "description": "KmsEncryptionContext is a json blob that contains an encryption context. See https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#encrypt_context for more information",
          "type": "string"
        },
        "kmsKeyId": {
          "description": "KMSKeyId tells the driver to encrypt the object using the specified KMS Key.",
          "type": "string"
        },
        "serverSideCustomerKeySecret": {
          "description": "ServerSideCustomerKeySecret tells the driver to encrypt the output artifacts using SSE-C with the specified secret.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ScriptTemplate": {
      "description": "ScriptTemplate is a template subtype to enable scripting through code steps",
      "type": "object",
      "required": [
        "image",
        "source"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "source": {
          "description": "Source contains the source code of the script to execute",
          "type": "string"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SemaphoreHolding": {
      "type": "object",
      "properties": {
        "holders": {
          "description": "Holders stores the list of current holder names in the io.argoproj.workflow.v1alpha1.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "atomic"
        },
        "semaphore": {
          "description": "Semaphore stores the semaphore name.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SemaphoreRef": {
      "description": "SemaphoreRef is a reference of Semaphore",
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "description": "ConfigMapKeyRef is configmap selector for Semaphore configuration",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SemaphoreStatus": {
      "type": "object",
      "properties": {
        "holding": {
          "description": "Holding stores the list of resource acquired synchronization lock for workflows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SemaphoreHolding"
          }
        },
        "waiting": {
          "description": "Waiting indicates the list of current synchronization lock holders.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SemaphoreHolding"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Sequence": {
      "description": "Sequence expands a workflow step into numeric range",
      "type": "object",
      "properties": {
        "count": {
          "description": "Count is number of elements in the sequence (default: 0). Not to be used with end",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "end": {
          "description": "Number at which to end the sequence (default: 0). Not to be used with Count",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "format": {
          "description": "Format is a printf format string to format the value in the sequence",
          "type": "string"
        },
        "start": {
          "description": "Number at which to start the sequence (default: 0)",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Submit": {
      "type": "object",
      "required": [
        "workflowTemplateRef"
      ],
      "properties": {
        "arguments": {
          "description": "Arguments extracted from the event and then set as arguments to the workflow created.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Arguments"
        },
        "metadata": {
          "description": "Metadata optional means to customize select fields of the workflow metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "workflowTemplateRef": {
          "description": "WorkflowTemplateRef the workflow template to submit",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateRef"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SubmitOpts": {
      "description": "SubmitOpts are workflow submission options",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations adds to metadata.labels",
          "type": "string"
        },
        "dryRun": {
          "description": "DryRun validates the workflow on the client-side without creating it. This option is not supported in API",
          "type": "boolean"
        },
        "entryPoint": {
          "description": "Entrypoint overrides spec.entrypoint",
          "type": "string"
        },
        "generateName": {
          "description": "GenerateName overrides metadata.generateName",
          "type": "string"
        },
        "labels": {
          "description": "Labels adds to metadata.labels",
          "type": "string"
        },
        "name": {
          "description": "Name overrides metadata.name",
          "type": "string"
        },
        "ownerReference": {
          "description": "OwnerReference creates a metadata.ownerReference",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
        },
        "parameters": {
          "description": "Parameters passes input parameters to workflow",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "podPriorityClassName": {
          "description": "Set the podPriorityClassName of the workflow",
          "type": "string"
        },
        "priority": {
          "description": "Priority is used if controller is configured to process limited number of workflows in parallel, higher priority workflows are processed first.",
          "type": "integer"
        },
        "serverDryRun": {
          "description": "ServerDryRun validates the workflow on the server-side without creating it",
          "type": "boolean"
        },
        "serviceAccount": {
          "description": "ServiceAccount runs all pods in the workflow using specified ServiceAccount.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SuppliedValueFrom": {
      "description": "SuppliedValueFrom is a placeholder for a value to be filled in directly, either through the CLI, API, etc.",
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.SuspendTemplate": {
      "description": "SuspendTemplate is a template subtype to suspend a workflow at a predetermined point in time",
      "type": "object",
      "properties": {
        "duration": {
          "description": "Duration is the seconds to wait before automatically resuming a template",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Synchronization": {
      "description": "Synchronization holds synchronization lock configuration",
      "type": "object",
      "properties": {
        "mutex": {
          "description": "Mutex holds the Mutex lock details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Mutex"
        },
        "semaphore": {
          "description": "Semaphore holds the Semaphore configuration",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SemaphoreRef"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.SynchronizationStatus": {
      "description": "SynchronizationStatus stores the status of semaphore and mutex.",
      "type": "object",
      "properties": {
        "mutex": {
          "description": "Mutex stores this workflow's mutex holder details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.MutexStatus"
        },
        "semaphore": {
          "description": "Semaphore stores this workflow's Semaphore holder details",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SemaphoreStatus"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.TTLStrategy": {
      "description": "TTLStrategy is the strategy for the time to live depending on if the workflow succeeded or failed",
      "type": "object",
      "properties": {
        "secondsAfterCompletion": {
          "description": "SecondsAfterCompletion is the number of seconds to live after completion",
          "type": "integer"
        },
        "secondsAfterFailure": {
          "description": "SecondsAfterFailure is the number of seconds to live after failure",
          "type": "integer"
        },
        "secondsAfterSuccess": {
          "description": "SecondsAfterSuccess is the number of seconds to live after success",
          "type": "integer"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.TarStrategy": {
      "description": "TarStrategy will tar and gzip the file or directory when saving",
      "type": "object",
      "properties": {
        "compressionLevel": {
          "description": "CompressionLevel specifies the gzip compression level to use for the artifact. Defaults to gzip.DefaultCompression.",
          "type": "integer"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Template": {
      "description": "Template is a reusable and composable unit of execution in a workflow",
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "affinity": {
          "description": "Affinity sets the pod's scheduling constraints Overrides the affinity set at the workflow level (if any)",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "archiveLocation": {
          "description": "Location in which all files related to the step will be stored (logs, artifacts, etc...). Can be overridden by individual items in Outputs. If omitted, will use the default artifact repository location configured in the controller, appended with the \u003cworkflowname\u003e/\u003cnodename\u003e in the key.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactLocation"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.",
          "type": "boolean"
        },
        "container": {
          "description": "Container is the main container image to run in the pod",
          "$ref": "#/definitions/io.k8s.api.core.v1.Container"
        },
        "containerSet": {
          "description": "ContainerSet groups multiple containers within a single pod.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ContainerSetTemplate"
        },
        "daemon": {
          "description": "Deamon will allow a workflow to proceed to the next step so long as the container reaches readiness",
          "type": "boolean"
        },
        "dag": {
          "description": "DAG template subtype which runs a DAG",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.DAGTemplate"
        },
        "data": {
          "description": "Data is a data template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Data"
        },
        "executor": {
          "description": "Executor holds configurations of the executor container.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ExecutorConfig"
        },
        "failFast": {
          "description": "FailFast, if specified, will fail this template if any of its child pods has failed. This is useful for when this template is expanded with `withItems`, etc.",
          "type": "boolean"
        },
        "hostAliases": {
          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod spec",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "http": {
          "description": "HTTP makes a HTTP request",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.HTTP"
        },
        "initContainers": {
          "description": "InitContainers is a list of containers which run before the main container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.UserContainer"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "inputs": {
          "description": "Inputs describe what inputs parameters and artifacts are supplied to this template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Inputs"
        },
        "memoize": {
          "description": "Memoize allows templates to use outputs generated from already executed templates",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Memoize"
        },
        "metadata": {
          "description": "Metdata sets the pods's metadata, i.e. annotations and labels",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Metadata"
        },
        "metrics": {
          "description": "Metrics are a list of metrics emitted from this template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Metrics"
        },
        "name": {
          "description": "Name is the name of the template",
          "type": "string"
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "outputs": {
          "description": "Outputs describe the parameters and artifacts that this template produces",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Outputs"
        },
        "parallelism": {
          "description": "Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.",
          "type": "integer"
        },
        "plugin": {
          "description": "Plugin is a plugin template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Plugin"
        },
        "podSpecPatch": {
          "description": "PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).",
          "type": "string"
        },
        "priority": {
          "description": "Priority to apply to workflow pods.",
          "type": "integer"
        },
        "priorityClassName": {
          "description": "PriorityClassName to apply to workflow pods.",
          "type": "string"
        },
        "resource": {
          "description": "Resource template subtype which can run k8s resources",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ResourceTemplate"
        },
        "retryStrategy": {
          "description": "RetryStrategy describes how to retry a template when it fails",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RetryStrategy"
        },
        "schedulerName": {
          "description": "If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.",
          "type": "string"
        },
        "script": {
          "description": "Script runs a portion of code against an interpreter",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ScriptTemplate"
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName to apply to workflow pods",
          "type": "string"
        },
        "sidecars": {
          "description": "Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.UserContainer"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "steps": {
          "description": "Steps define a series of sequential/parallel workflow steps",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ParallelSteps"
          }
        },
        "suspend": {
          "description": "Suspend template subtype which can suspend a workflow when reaching the step",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SuspendTemplate"
        },
        "synchronization": {
          "description": "Synchronization holds synchronization lock configuration for this template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Synchronization"
        },
        "timeout": {
          "description": "Timeout allows to set the total node execution timeout duration counting from the node's start time. This duration also includes time in which the node spends in Pending state. This duration may not be applied to Step or DAG templates.",
          "type": "string"
        },
        "tolerations": {
          "description": "Tolerations to apply to workflow pods.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "description": "Volumes is a list of volumes that can be mounted by containers in a template.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.TemplateRef": {
      "description": "TemplateRef is a reference of template resource.",
      "type": "object",
      "properties": {
        "clusterScope": {
          "description": "ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).",
          "type": "boolean"
        },
        "name": {
          "description": "Name is the resource name of the template.",
          "type": "string"
        },
        "template": {
          "description": "Template is the name of referred template in the resource.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.TransformationStep": {
      "type": "object",
      "required": [
        "expression"
      ],
      "properties": {
        "expression": {
          "description": "Expression defines an expr expression to apply",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.UpdateCronWorkflowRequest": {
      "type": "object",
      "properties": {
        "cronWorkflow": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.CronWorkflow"
        },
        "name": {
          "description": "DEPRECATED: This field is ignored.",
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.UserContainer": {
      "description": "UserContainer is a container specified by a user.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
          "type": "string"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "mirrorVolumeMounts": {
          "description": "MirrorVolumeMounts will mount the same volumes specified in the main container to the container (including artifacts), at the same mountPaths. This enables dind daemon to partially see the same filesystem as the main container in order to use features such as docker volume binding",
          "type": "boolean"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ValueFrom": {
      "description": "ValueFrom describes a location in which to obtain the value to a parameter",
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "description": "ConfigMapKeyRef is configmap selector for input parameter configuration",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "default": {
          "description": "Default specifies a value to be used if retrieving the value from the specified source fails",
          "type": "string"
        },
        "event": {
          "description": "Selector (https://github.com/antonmedv/expr) that is evaluated against the event to get the value of the parameter. E.g. `payload.message`",
          "type": "string"
        },
        "expression": {
          "description": "Expression, if defined, is evaluated to specify the value for the parameter",
          "type": "string"
        },
        "jqFilter": {
          "description": "JQFilter expression against the resource object in resource templates",
          "type": "string"
        },
        "jsonPath": {
          "description": "JSONPath of a resource to retrieve an output parameter value from in resource templates",
          "type": "string"
        },
        "parameter": {
          "description": "Parameter reference to a step or dag task in which to retrieve an output parameter value from (e.g. '{{steps.mystep.outputs.myparam}}')",
          "type": "string"
        },
        "path": {
          "description": "Path in the container to retrieve an output parameter value from in container templates",
          "type": "string"
        },
        "supplied": {
          "description": "Supplied value to be filled in directly, either through the CLI, API, etc.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SuppliedValueFrom"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Version": {
      "type": "object",
      "required": [
        "version",
        "buildDate",
        "gitCommit",
        "gitTag",
        "gitTreeState",
        "goVersion",
        "compiler",
        "platform"
      ],
      "properties": {
        "buildDate": {
          "type": "string"
        },
        "compiler": {
          "type": "string"
        },
        "gitCommit": {
          "type": "string"
        },
        "gitTag": {
          "type": "string"
        },
        "gitTreeState": {
          "type": "string"
        },
        "goVersion": {
          "type": "string"
        },
        "platform": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.VolumeClaimGC": {
      "description": "VolumeClaimGC describes how to delete volumes from completed Workflows",
      "type": "object",
      "properties": {
        "strategy": {
          "description": "Strategy is the strategy to use. One of \"OnWorkflowCompletion\", \"OnWorkflowSuccess\"",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.Workflow": {
      "description": "Workflow is the definition of a workflow resource",
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSpec"
        },
        "status": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowStatus"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowCreateRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "instanceID": {
          "description": "This field is no longer used.",
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "serverDryRun": {
          "type": "boolean"
        },
        "workflow": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowDeleteResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.WorkflowEventBinding": {
      "description": "WorkflowEventBinding is the definition of an event resource",
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowEventBindingSpec"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowEventBindingList": {
      "description": "WorkflowEventBindingList is list of event resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowEventBinding"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowEventBindingSpec": {
      "type": "object",
      "required": [
        "event"
      ],
      "properties": {
        "event": {
          "description": "Event is the event to bind to",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Event"
        },
        "submit": {
          "description": "Submit is the workflow template to submit",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Submit"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowLintRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "workflow": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowList": {
      "description": "WorkflowList is list of Workflow resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowMetadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labelsFrom": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LabelValueFrom"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowResubmitRequest": {
      "type": "object",
      "properties": {
        "memoized": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowResumeRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nodeFieldSelector": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowRetryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nodeFieldSelector": {
          "type": "string"
        },
        "restartSuccessful": {
          "type": "boolean"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowSetRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nodeFieldSelector": {
          "type": "string"
        },
        "outputParameters": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowSpec": {
      "description": "WorkflowSpec is the specification of a Workflow.",
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "description": "Optional duration in seconds relative to the workflow start time which the workflow is allowed to run before the controller terminates the io.argoproj.workflow.v1alpha1. A value of zero is used to terminate a Running workflow",
          "type": "integer"
        },
        "affinity": {
          "description": "Affinity sets the scheduling constraints for all pods in the io.argoproj.workflow.v1alpha1. Can be overridden by an affinity specified in the template",
          "$ref": "#/definitions/io.k8s.api.core.v1.Affinity"
        },
        "archiveLogs": {
          "description": "ArchiveLogs indicates if the container logs should be archived",
          "type": "boolean"
        },
        "arguments": {
          "description": "Arguments contain the parameters and artifacts sent to the workflow entrypoint Parameters are referencable globally using the 'workflow' variable prefix. e.g. {{io.argoproj.workflow.v1alpha1.parameters.myparam}}",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Arguments"
        },
        "artifactRepositoryRef": {
          "description": "ArtifactRepositoryRef specifies the configMap name and key containing the artifact repository config.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactRepositoryRef"
        },
        "automountServiceAccountToken": {
          "description": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfig"
        },
        "dnsPolicy": {
          "description": "Set DNS policy for the pod. Defaults to \"ClusterFirst\". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.",
          "type": "string"
        },
        "entrypoint": {
          "description": "Entrypoint is a template reference to the starting point of the io.argoproj.workflow.v1alpha1.",
          "type": "string"
        },
        "executor": {
          "description": "Executor holds configurations of executor containers of the io.argoproj.workflow.v1alpha1.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ExecutorConfig"
        },
        "hooks": {
          "description": "Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LifecycleHook"
          }
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HostAlias"
          },
          "x-kubernetes-patch-merge-key": "ip",
          "x-kubernetes-patch-strategy": "merge"
        },
        "hostNetwork": {
          "description": "Host networking requested for this workflow pod. Default to false.",
          "type": "boolean"
        },
        "imagePullSecrets": {
          "description": "ImagePullSecrets is a list of references to secrets in the same namespace to use for pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are only accessed by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "metrics": {
          "description": "Metrics are a list of metrics emitted from this Workflow",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Metrics"
        },
        "nodeSelector": {
          "description": "NodeSelector is a selector which will result in all pods of the workflow to be scheduled on the selected node(s). This is able to be overridden by a nodeSelector specified in the template.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "onExit": {
          "description": "OnExit is a template reference which is invoked at the end of the workflow, irrespective of the success, failure, or error of the primary io.argoproj.workflow.v1alpha1.",
          "type": "string"
        },
        "parallelism": {
          "description": "Parallelism limits the max total parallel pods that can execute at the same time in a workflow",
          "type": "integer"
        },
        "podDisruptionBudget": {
          "description": "PodDisruptionBudget holds the number of concurrent disruptions that you allow for Workflow's Pods. Controller will automatically add the selector with workflow name, if selector is empty. Optional: Defaults to empty.",
          "$ref": "#/definitions/io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec"
        },
        "podGC": {
          "description": "PodGC describes the strategy to use when to deleting completed pods",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.PodGC"
        },
        "podMetadata": {
          "description": "PodMetadata defines additional metadata that should be applied to workflow pods",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Metadata"
        },
        "podPriority": {
          "description": "Priority to apply to workflow pods.",
          "type": "integer"
        },
        "podPriorityClassName": {
          "description": "PriorityClassName to apply to workflow pods.",
          "type": "string"
        },
        "podSpecPatch": {
          "description": "PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).",
          "type": "string"
        },
        "priority": {
          "description": "Priority is used if controller is configured to process limited number of workflows in parallel. Workflows with higher priority are processed first.",
          "type": "integer"
        },
        "retryStrategy": {
          "description": "RetryStrategy for all templates in the io.argoproj.workflow.v1alpha1.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.RetryStrategy"
        },
        "schedulerName": {
          "description": "Set scheduler name for all pods. Will be overridden if container/script template's scheduler name is set. Default scheduler will be used if neither specified.",
          "type": "string"
        },
        "securityContext": {
          "description": "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodSecurityContext"
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the ServiceAccount to run all pods of the workflow as.",
          "type": "string"
        },
        "shutdown": {
          "description": "Shutdown will shutdown the workflow according to its ShutdownStrategy",
          "type": "string"
        },
        "suspend": {
          "description": "Suspend will suspend the workflow and prevent execution of any future steps in the workflow",
          "type": "boolean"
        },
        "synchronization": {
          "description": "Synchronization holds synchronization lock configuration for this Workflow",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Synchronization"
        },
        "templateDefaults": {
          "description": "TemplateDefaults holds default template values that will apply to all templates in the Workflow, unless overridden on the template-level",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
        },
        "templates": {
          "description": "Templates is a list of workflow templates used in a workflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "tolerations": {
          "description": "Tolerations to apply to workflow pods.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Toleration"
          },
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "ttlStrategy": {
          "description": "TTLStrategy limits the lifetime of a Workflow that has finished execution depending on if it Succeeded or Failed. If this struct is set, once the Workflow finishes, it will be deleted after the time to live expires. If this field is unset, the controller config map will hold the default values.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TTLStrategy"
        },
        "volumeClaimGC": {
          "description": "VolumeClaimGC describes the strategy to use when to deleting volumes from completed workflows",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.VolumeClaimGC"
        },
        "volumeClaimTemplates": {
          "description": "VolumeClaimTemplates is a list of claims that containers are allowed to reference. The Workflow controller will create the claims at the beginning of the workflow and delete the claims upon completion of the workflow",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaim"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumes": {
          "description": "Volumes is a list of volumes that can be mounted by containers in a io.argoproj.workflow.v1alpha1.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workflowMetadata": {
          "description": "WorkflowMetadata contains some metadata of the workflow to be refer",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowMetadata"
        },
        "workflowTemplateRef": {
          "description": "WorkflowTemplateRef holds a reference to a WorkflowTemplate for execution",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplateRef"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowStatus": {
      "description": "WorkflowStatus contains overall status information about a workflow",
      "type": "object",
      "properties": {
        "artifactRepositoryRef": {
          "description": "ArtifactRepositoryRef is used to cache the repository to use so we do not need to determine it everytime we reconcile.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ArtifactRepositoryRefStatus"
        },
        "compressedNodes": {
          "description": "Compressed and base64 decoded Nodes map",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions is a list of conditions the Workflow may have",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Condition"
          }
        },
        "estimatedDuration": {
          "description": "EstimatedDuration in seconds.",
          "type": "integer"
        },
        "finishedAt": {
          "description": "Time at which this workflow completed",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "description": "A human readable message indicating details about why the workflow is in this condition.",
          "type": "string"
        },
        "nodes": {
          "description": "Nodes is a mapping between a node ID and the node's status.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.NodeStatus"
          }
        },
        "offloadNodeStatusVersion": {
          "description": "Whether on not node status has been offloaded to a database. If exists, then Nodes and CompressedNodes will be empty. This will actually be populated with a hash of the offloaded data.",
          "type": "string"
        },
        "outputs": {
          "description": "Outputs captures output values and artifact locations produced by the workflow via global outputs",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Outputs"
        },
        "persistentVolumeClaims": {
          "description": "PersistentVolumeClaims tracks all PVCs that were created as part of the io.argoproj.workflow.v1alpha1. The contents of this list are drained at the end of the workflow.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Volume"
          }
        },
        "phase": {
          "description": "Phase a simple, high-level summary of where the workflow is in its lifecycle.",
          "type": "string"
        },
        "progress": {
          "description": "Progress to completion",
          "type": "string"
        },
        "resourcesDuration": {
          "description": "ResourcesDuration is the total for the workflow",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "startedAt": {
          "description": "Time at which this workflow started",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "storedTemplates": {
          "description": "StoredTemplates is a mapping between a template ref and the node's status.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
          }
        },
        "storedWorkflowTemplateSpec": {
          "description": "StoredWorkflowSpec stores the WorkflowTemplate spec for future execution.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSpec"
        },
        "synchronization": {
          "description": "Synchronization stores the status of synchronization locks",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SynchronizationStatus"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowStep": {
      "description": "WorkflowStep is a reference to a template to execute in a series of step",
      "type": "object",
      "properties": {
        "arguments": {
          "description": "Arguments hold arguments to the template",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Arguments"
        },
        "continueOn": {
          "description": "ContinueOn makes argo to proceed with the following step even if this step fails. Errors and Failed states can be specified",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.ContinueOn"
        },
        "hooks": {
          "description": "Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.LifecycleHook"
          }
        },
        "inline": {
          "description": "Inline is the template. Template must be empty if this is declared (and vice-versa).",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
        },
        "name": {
          "description": "Name of the step",
          "type": "string"
        },
        "onExit": {
          "description": "OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.",
          "type": "string"
        },
        "template": {
          "description": "Template is the name of the template to execute as the step",
          "type": "string"
        },
        "templateRef": {
          "description": "TemplateRef is the reference to the template resource to execute as the step.",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.TemplateRef"
        },
        "when": {
          "description": "When is an expression in which the step should conditionally execute",
          "type": "string"
        },
        "withItems": {
          "description": "WithItems expands a step into multiple parallel steps from the items in the list",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Item"
          }
        },
        "withParam": {
          "description": "WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.",
          "type": "string"
        },
        "withSequence": {
          "description": "WithSequence expands a step into a numeric sequence",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Sequence"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowStopRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "nodeFieldSelector": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowSubmitRequest": {
      "type": "object",
      "properties": {
        "namespace": {
          "type": "string"
        },
        "resourceKind": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "submitOptions": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.SubmitOpts"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowSuspendRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTaskSetSpec": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Template"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTaskSetStatus": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.NodeResult"
          }
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplate": {
      "description": "WorkflowTemplate is the definition of a workflow template resource",
      "type": "object",
      "required": [
        "metadata",
        "spec"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowSpec"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateCreateRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "namespace": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateDeleteResponse": {
      "type": "object"
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateLintRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "namespace": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateList": {
      "description": "WorkflowTemplateList is list of WorkflowTemplate resources",
      "type": "object",
      "required": [
        "metadata",
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.io.k8s.community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateRef": {
      "description": "WorkflowTemplateRef is a reference to a WorkflowTemplate resource.",
      "type": "object",
      "properties": {
        "clusterScope": {
          "description": "ClusterScope indicates the referred template is cluster scoped (i.e. a ClusterWorkflowTemplate).",
          "type": "boolean"
        },
        "name": {
          "description": "Name is the resource name of the workflow template.",
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTemplateUpdateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "description": "DEPRECATED: This field is ignored.",
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "template": {
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.WorkflowTemplate"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowTerminateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.WorkflowWatchEvent": {
      "type": "object",
      "properties": {
        "object": {
          "title": "the workflow",
          "$ref": "#/definitions/io.argoproj.workflow.v1alpha1.Workflow"
        },
        "type": {
          "type": "string",
          "title": "the type of change"
        }
      }
    },
    "io.argoproj.workflow.v1alpha1.ZipStrategy": {
      "description": "ZipStrategy will unzip zipped input artifacts",
      "type": "object"
    },
    "io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource": {
      "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
          "type": "integer"
        },
        "readOnly": {
          "description": "Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "boolean"
        },
        "volumeID": {
          "description": "Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Affinity": {
      "description": "Affinity is a group of affinity scheduling rules.",
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "description": "Describes node affinity scheduling rules for the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeAffinity"
        },
        "podAffinity": {
          "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinity"
        },
        "podAntiAffinity": {
          "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAntiAffinity"
        }
      }
    },
    "io.k8s.api.core.v1.AzureDiskVolumeSource": {
      "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
      "type": "object",
      "required": [
        "diskName",
        "diskURI"
      ],
      "properties": {
        "cachingMode": {
          "description": "Host Caching mode: None, Read Only, Read Write.",
          "type": "string"
        },
        "diskName": {
          "description": "The Name of the data disk in the blob storage",
          "type": "string"
        },
        "diskURI": {
          "description": "The URI the data disk in the blob storage",
          "type": "string"
        },
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "kind": {
          "description": "Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.AzureFileVolumeSource": {
      "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
      "type": "object",
      "required": [
        "secretName",
        "shareName"
      ],
      "properties": {
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretName": {
          "description": "the name of secret that contains Azure Storage Account Name and Key",
          "type": "string"
        },
        "shareName": {
          "description": "Share Name",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CSIVolumeSource": {
      "description": "Represents a source location of a volume to mount, managed by an external CSI driver",
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "description": "Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.",
          "type": "string"
        },
        "fsType": {
          "description": "Filesystem type to mount. Ex. \"ext4\", \"xfs\", \"ntfs\". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.",
          "type": "string"
        },
        "nodePublishSecretRef": {
          "description": "NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "readOnly": {
          "description": "Specifies a read-only configuration for the volume. Defaults to false (read/write).",
          "type": "boolean"
        },
        "volumeAttributes": {
          "description": "VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.Capabilities": {
      "description": "Adds and removes POSIX capabilities from running containers.",
      "type": "object",
      "properties": {
        "add": {
          "description": "Added capabilities",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "drop": {
          "description": "Removed capabilities",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.CephFSVolumeSource": {
      "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod Cephfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "monitors"
      ],
      "properties": {
        "monitors": {
          "description": "Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "description": "Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
          "type": "string"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretFile": {
          "description": "Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        },
        "secretRef": {
          "description": "Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "description": "Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.CinderVolumeSource": {
      "description": "Represents a cinder volume resource in Openstack. A Cinder volume must exist before mounting to a container. The volume must also be in the same region as the kubelet. Cinder volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "boolean"
        },
        "secretRef": {
          "description": "Optional: points to a secret object containing parameters used to connect to OpenStack.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeID": {
          "description": "volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapEnvSource": {
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapKeySelector": {
      "description": "Selects a key from a ConfigMap.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key to select.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ConfigMapProjection": {
      "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.ConfigMapVolumeSource": {
      "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the ConfigMap or its keys must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.Container": {
      "description": "A single application container that you want to run within a pod.",
      "type": "object",
      "required": [
        "image"
      ],
      "properties": {
        "args": {
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "description": "List of environment variables to set in the container. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvVar"
          },
          "x-kubernetes-patch-merge-key": "name",
          "x-kubernetes-patch-strategy": "merge"
        },
        "envFrom": {
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.EnvFromSource"
          }
        },
        "image": {
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n\nPossible enum values:\n - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.\n - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.\n - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present",
          "type": "string",
          "enum": [
            "Always",
            "IfNotPresent",
            "Never"
          ]
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Lifecycle"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "ports": {
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.ContainerPort"
          },
          "x-kubernetes-list-map-keys": [
            "containerPort",
            "protocol"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-patch-merge-key": "containerPort",
          "x-kubernetes-patch-strategy": "merge"
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "securityContext": {
          "description": "SecurityContext defines the security options the container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext. More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecurityContext"
        },
        "startupProbe": {
          "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "#/definitions/io.k8s.api.core.v1.Probe"
        },
        "stdin": {
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
          "type": "boolean"
        },
        "stdinOnce": {
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
          "type": "boolean"
        },
        "terminationMessagePath": {
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
          "type": "string"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.\n\nPossible enum values:\n - `\"FallbackToLogsOnError\"` will read the most recent contents of the container logs for the container status message when the container exits with an error and the terminationMessagePath has no contents.\n - `\"File\"` is the default behavior and will set the container status message to the contents of the container's terminationMessagePath when the container exits.",
          "type": "string",
          "enum": [
            "FallbackToLogsOnError",
            "File"
          ]
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
          "type": "boolean"
        },
        "volumeDevices": {
          "description": "volumeDevices is the list of block devices to be used by the container.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeDevice"
          },
          "x-kubernetes-patch-merge-key": "devicePath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "volumeMounts": {
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeMount"
          },
          "x-kubernetes-patch-merge-key": "mountPath",
          "x-kubernetes-patch-strategy": "merge"
        },
        "workingDir": {
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ContainerPort": {
      "description": "ContainerPort represents a network port in a single container.",
      "type": "object",
      "required": [
        "containerPort"
      ],
      "properties": {
        "containerPort": {
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
          "type": "integer"
        },
        "hostIP": {
          "description": "What host IP to bind the external port to.",
          "type": "string"
        },
        "hostPort": {
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
          "type": "integer"
        },
        "name": {
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".\n\nPossible enum values:\n - `\"SCTP\"` is the SCTP protocol.\n - `\"TCP\"` is the TCP protocol.\n - `\"UDP\"` is the UDP protocol.",
          "type": "string",
          "enum": [
            "SCTP",
            "TCP",
            "UDP"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIProjection": {
      "description": "Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "Items is a list of DownwardAPIVolume file",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeFile": {
      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "fieldRef": {
          "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "path": {
          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
          "type": "string"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        }
      }
    },
    "io.k8s.api.core.v1.DownwardAPIVolumeSource": {
      "description": "DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "items": {
          "description": "Items is a list of downward API volume file",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeFile"
          }
        }
      }
    },
    "io.k8s.api.core.v1.EmptyDirVolumeSource": {
      "description": "Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "medium": {
          "description": "What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "type": "string"
        },
        "sizeLimit": {
          "description": "Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        }
      }
    },
    "io.k8s.api.core.v1.EnvFromSource": {
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "type": "object",
      "properties": {
        "configMapRef": {
          "description": "The ConfigMap to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapEnvSource"
        },
        "prefix": {
          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "secretRef": {
          "description": "The Secret to select from",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretEnvSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "value": {
          "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EnvVarSource"
        }
      }
    },
    "io.k8s.api.core.v1.EnvVarSource": {
      "description": "EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "description": "Selects a key of a ConfigMap.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapKeySelector"
        },
        "fieldRef": {
          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceFieldSelector"
        },
        "secretKeyRef": {
          "description": "Selects a key of a secret in the pod's namespace",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretKeySelector"
        }
      }
    },
    "io.k8s.api.core.v1.EphemeralVolumeSource": {
      "description": "Represents an ephemeral volume that is handled by a normal storage driver.",
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "description": "Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where `\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.\n\nRequired, must not be nil.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimTemplate"
        }
      }
    },
    "io.k8s.api.core.v1.Event": {
      "description": "Event is a report of an event somewhere in the cluster.  Events have a limited retention time and triggers and messages may evolve with time.  Event consumers should not rely on the timing of an event with a given Reason reflecting a consistent underlying trigger, or the continued existence of events with that Reason.  Events should be treated as informative, best-effort, supplemental data.",
      "type": "object",
      "required": [
        "metadata",
        "involvedObject"
      ],
      "properties": {
        "action": {
          "description": "What action was taken/failed regarding to the Regarding object.",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "count": {
          "description": "The number of times this event has occurred.",
          "type": "integer"
        },
        "eventTime": {
          "description": "Time when this Event was first observed.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        },
        "firstTimestamp": {
          "description": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "involvedObject": {
          "description": "The object that this event is about.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "lastTimestamp": {
          "description": "The time at which the most recent occurrence of this event was recorded.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.",
          "type": "string"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "reason": {
          "description": "This should be a short, machine understandable string that gives the reason for the transition into the object's current status.",
          "type": "string"
        },
        "related": {
          "description": "Optional secondary object for more complex actions.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ObjectReference"
        },
        "reportingComponent": {
          "description": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.",
          "type": "string"
        },
        "reportingInstance": {
          "description": "ID of the controller instance, e.g. `kubelet-xyzf`.",
          "type": "string"
        },
        "series": {
          "description": "Data about the Event series this event represents or nil if it's a singleton Event.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSeries"
        },
        "source": {
          "description": "The component reporting this event. Should be a short machine understandable string.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EventSource"
        },
        "type": {
          "description": "Type of this event (Normal, Warning), new types could be added in the future",
          "type": "string"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "Event",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.EventSeries": {
      "description": "EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time.",
      "type": "object",
      "properties": {
        "count": {
          "description": "Number of occurrences in this series up to the last heartbeat time",
          "type": "integer"
        },
        "lastObservedTime": {
          "description": "Time of the last occurrence observed",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime"
        }
      }
    },
    "io.k8s.api.core.v1.EventSource": {
      "description": "EventSource contains information for an event.",
      "type": "object",
      "properties": {
        "component": {
          "description": "Component from which the event is generated.",
          "type": "string"
        },
        "host": {
          "description": "Node name on which the event is generated.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "type": "object",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.FCVolumeSource": {
      "description": "Represents a Fibre Channel volume. Fibre Channel volumes can only be mounted as read/write once. Fibre Channel volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "lun": {
          "description": "Optional: FC target lun number",
          "type": "integer"
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "targetWWNs": {
          "description": "Optional: FC target worldwide names (WWNs)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wwids": {
          "description": "Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.FlexVolumeSource": {
      "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
      "type": "object",
      "required": [
        "driver"
      ],
      "properties": {
        "driver": {
          "description": "Driver is the name of the driver to use for this volume.",
          "type": "string"
        },
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
          "type": "string"
        },
        "options": {
          "description": "Optional: Extra command options if any.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readOnly": {
          "description": "Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        }
      }
    },
    "io.k8s.api.core.v1.FlockerVolumeSource": {
      "description": "Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "properties": {
        "datasetName": {
          "description": "Name of the dataset stored as metadata -\u003e name on the dataset for Flocker should be considered as deprecated",
          "type": "string"
        },
        "datasetUUID": {
          "description": "UUID of the dataset. This is unique identifier of a Flocker dataset",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GCEPersistentDiskVolumeSource": {
      "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "pdName"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "partition": {
          "description": "The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "integer"
        },
        "pdName": {
          "description": "Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.GRPCAction": {
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "port": {
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
          "type": "integer"
        },
        "service": {
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GitRepoVolumeSource": {
      "description": "Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
      "type": "object",
      "required": [
        "repository"
      ],
      "properties": {
        "directory": {
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.",
          "type": "string"
        },
        "repository": {
          "description": "Repository URL",
          "type": "string"
        },
        "revision": {
          "description": "Commit hash for the specified revision.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.GlusterfsVolumeSource": {
      "description": "Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "endpoints",
        "path"
      ],
      "properties": {
        "endpoints": {
          "description": "EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "path": {
          "description": "Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.HTTPGetAction": {
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.HTTPHeader"
          }
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.\n\nPossible enum values:\n - `\"HTTP\"` means that the scheme used will be http://\n - `\"HTTPS\"` means that the scheme used will be https://",
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.HostAlias": {
      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.",
      "type": "object",
      "properties": {
        "hostnames": {
          "description": "Hostnames for the above IP address.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "description": "IP address of the host file entry.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.HostPathVolumeSource": {
      "description": "Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "path": {
          "description": "Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        },
        "type": {
          "description": "Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ISCSIVolumeSource": {
      "description": "Represents an ISCSI disk. ISCSI volumes can only be mounted as read/write once. ISCSI volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "targetPortal",
        "iqn",
        "lun"
      ],
      "properties": {
        "chapAuthDiscovery": {
          "description": "whether support iSCSI Discovery CHAP authentication",
          "type": "boolean"
        },
        "chapAuthSession": {
          "description": "whether support iSCSI Session CHAP authentication",
          "type": "boolean"
        },
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
          "type": "string"
        },
        "initiatorName": {
          "description": "Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface \u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
          "type": "string"
        },
        "iqn": {
          "description": "Target iSCSI Qualified Name.",
          "type": "string"
        },
        "iscsiInterface": {
          "description": "iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).",
          "type": "string"
        },
        "lun": {
          "description": "iSCSI Target Lun number.",
          "type": "integer"
        },
        "portals": {
          "description": "iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "CHAP Secret for iSCSI target and initiator authentication",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "targetPortal": {
          "description": "iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.KeyToPath": {
      "description": "Maps a string key to a path within a volume.",
      "type": "object",
      "required": [
        "key",
        "path"
      ],
      "properties": {
        "key": {
          "description": "The key to project.",
          "type": "string"
        },
        "mode": {
          "description": "Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "path": {
          "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "type": "object",
      "properties": {
        "postStart": {
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        },
        "preStop": {
          "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The Pod's termination grace period countdown begins before the PreStop hook is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period (unless delayed by finalizers). Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
          "$ref": "#/definitions/io.k8s.api.core.v1.LifecycleHandler"
        }
      }
    },
    "io.k8s.api.core.v1.LifecycleHandler": {
      "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.",
      "type": "object",
      "properties": {
        "exec": {
          "description": "Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "tcpSocket": {
          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept for the backward compatibility. There are no validation of this field and lifecycle hooks will fail in runtime when tcp handler is specified.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        }
      }
    },
    "io.k8s.api.core.v1.LocalObjectReference": {
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NFSVolumeSource": {
      "description": "Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "server",
        "path"
      ],
      "properties": {
        "path": {
          "description": "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "boolean"
        },
        "server": {
          "description": "Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.NodeAffinity": {
      "description": "Node affinity is a group of node affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelector"
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelector": {
      "description": "A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.",
      "type": "object",
      "required": [
        "nodeSelectorTerms"
      ],
      "properties": {
        "nodeSelectorTerms": {
          "description": "Required. A list of node selector terms. The terms are ORed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.NodeSelectorRequirement": {
      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "The label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\nPossible enum values:\n - `\"DoesNotExist\"`\n - `\"Exists\"`\n - `\"Gt\"`\n - `\"In\"`\n - `\"Lt\"`\n - `\"NotIn\"`",
          "type": "string",
          "enum": [
            "DoesNotExist",
            "Exists",
            "Gt",
            "In",
            "Lt",
            "NotIn"
          ]
        },
        "values": {
          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.NodeSelectorTerm": {
      "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "A list of node selector requirements by node's labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "description": "A list of node selector requirements by node's fields.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorRequirement"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectFieldSelector": {
      "description": "ObjectFieldSelector selects an APIVersioned field of an object.",
      "type": "object",
      "required": [
        "fieldPath"
      ],
      "properties": {
        "apiVersion": {
          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
          "type": "string"
        },
        "fieldPath": {
          "description": "Path of the field to select in the specified API version.",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ObjectReference": {
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.PersistentVolumeClaim": {
      "description": "PersistentVolumeClaim is a user's request for and claim to a persistent volume",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the desired characteristics of a volume requested by a pod author. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        },
        "status": {
          "description": "Status represents the current information/status of a persistent volume claim. Read-only. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimStatus"
        }
      },
      "x-kubernetes-group-version-kind": [
        {
          "group": "",
          "kind": "PersistentVolumeClaim",
          "version": "v1"
        }
      ]
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimCondition": {
      "description": "PersistentVolumeClaimCondition contails details about state of pvc",
      "type": "object",
      "required": [
        "type",
        "status"
      ],
      "properties": {
        "lastProbeTime": {
          "description": "Last time we probed the condition.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. If it reports \"ResizeStarted\" that means the underlying persistent volume is being resized.",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "description": "\n\n\nPossible enum values:\n - `\"FileSystemResizePending\"` - controller resize is finished and a file system resize is pending on node\n - `\"Resizing\"` - a user trigger resize of pvc has been started",
          "type": "string",
          "enum": [
            "FileSystemResizePending",
            "Resizing"
          ]
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimSpec": {
      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While DataSource ignores disallowed values (dropping them), DataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n(Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TypedLocalObjectReference"
        },
        "resources": {
          "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "$ref": "#/definitions/io.k8s.api.core.v1.ResourceRequirements"
        },
        "selector": {
          "description": "A label query over volumes to consider for binding.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "storageClassName": {
          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
          "type": "string"
        },
        "volumeName": {
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimStatus": {
      "description": "PersistentVolumeClaimStatus is the current status of a persistent volume claim.",
      "type": "object",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the actual access modes the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allocatedResources": {
          "description": "The storage resource within AllocatedResources tracks the capacity allocated to a PVC. It may be larger than the actual capacity when a volume expansion operation is requested. For storage quota, the larger value from allocatedResources and PVC.spec.resources is used. If allocatedResources is not set, PVC.spec.resources alone is used for quota calculation. If a volume expansion capacity request is lowered, allocatedResources is only lowered if there are no expansion operations in progress and if the actual volume capacity is equal or lower than the requested capacity. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "capacity": {
          "description": "Represents the actual resources of the underlying volume.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "conditions": {
          "description": "Current Condition of persistent volume claim. If underlying persistent volume is being resized then the Condition will be set to 'ResizeStarted'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "phase": {
          "description": "Phase represents the current phase of PersistentVolumeClaim.\n\nPossible enum values:\n - `\"Bound\"` used for PersistentVolumeClaims that are bound\n - `\"Lost\"` used for PersistentVolumeClaims that lost their underlying PersistentVolume. The claim was bound to a PersistentVolume and this volume does not exist any longer and all data on it was lost.\n - `\"Pending\"` used for PersistentVolumeClaims that are not yet bound",
          "type": "string",
          "enum": [
            "Bound",
            "Lost",
            "Pending"
          ]
        },
        "resizeStatus": {
          "description": "ResizeStatus stores status of resize operation. ResizeStatus is not set by default but when expansion is complete resizeStatus is set to empty string by resize controller or kubelet. This is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimTemplate": {
      "description": "PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.",
      "type": "object",
      "required": [
        "spec"
      ],
      "properties": {
        "metadata": {
          "description": "May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimSpec"
        }
      }
    },
    "io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource": {
      "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace. This volume finds the bound PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another type of volume that is owned by someone else (the system).",
      "type": "object",
      "required": [
        "claimName"
      ],
      "properties": {
        "claimName": {
          "description": "ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "type": "string"
        },
        "readOnly": {
          "description": "Will force the ReadOnly setting in VolumeMounts. Default false.",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource": {
      "description": "Represents a Photon Controller persistent disk resource.",
      "type": "object",
      "required": [
        "pdID"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "pdID": {
          "description": "ID that identifies Photon Controller persistent disk",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodAffinity": {
      "description": "Pod affinity is a group of inter pod affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodAffinityTerm": {
      "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key \u003ctopologyKey\u003e matches that of any node on which a pod of the set of pods is running",
      "type": "object",
      "required": [
        "topologyKey"
      ],
      "properties": {
        "labelSelector": {
          "description": "A label query over a set of resources, in this case pods.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaceSelector": {
          "description": "A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means \"this pod's namespace\". An empty selector ({}) matches all namespaces. This field is beta-level and is only honored when PodAffinityNamespaceSelector feature is enabled.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        },
        "namespaces": {
          "description": "namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodAntiAffinity": {
      "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules.",
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfig": {
      "description": "PodDNSConfig defines the DNS parameters of a pod in addition to those generated from DNSPolicy.",
      "type": "object",
      "properties": {
        "nameservers": {
          "description": "A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "description": "A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.PodDNSConfigOption"
          }
        },
        "searches": {
          "description": "A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.api.core.v1.PodDNSConfigOption": {
      "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required.",
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PodSecurityContext": {
      "description": "PodSecurityContext holds pod-level security attributes and common container settings. Some fields are also present in container.securityContext.  Field values of container.securityContext take precedence over field values of PodSecurityContext.",
      "type": "object",
      "properties": {
        "fsGroup": {
          "description": "A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:\n\n1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer"
        },
        "fsGroupChangePolicy": {
          "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "description": "The seccomp options to use by the containers in this pod. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "supplementalGroups": {
          "description": "A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sysctls": {
          "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch. Note that this field cannot be set when spec.os.name is windows.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.Sysctl"
          }
        },
        "windowsOptions": {
          "description": "The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.PortworxVolumeSource": {
      "description": "PortworxVolumeSource represents a Portworx volume resource.",
      "type": "object",
      "required": [
        "volumeID"
      ],
      "properties": {
        "fsType": {
          "description": "FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "volumeID": {
          "description": "VolumeID uniquely identifies a Portworx volume",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.PreferredSchedulingTerm": {
      "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
      "type": "object",
      "required": [
        "weight",
        "preference"
      ],
      "properties": {
        "preference": {
          "description": "A node selector term, associated with the corresponding weight.",
          "$ref": "#/definitions/io.k8s.api.core.v1.NodeSelectorTerm"
        },
        "weight": {
          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
          "type": "integer"
        }
      }
    },
    "io.k8s.api.core.v1.Probe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "type": "object",
      "properties": {
        "exec": {
          "description": "Exec specifies the action to take.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ExecAction"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "type": "integer"
        },
        "grpc": {
          "description": "GRPC specifies an action involving a GRPC port. This is an alpha field and requires enabling GRPCContainerProbe feature gate.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GRPCAction"
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "$ref": "#/definitions/io.k8s.api.core.v1.HTTPGetAction"
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "type": "integer"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
          "type": "integer"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port.",
          "$ref": "#/definitions/io.k8s.api.core.v1.TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
          "type": "integer"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "type": "integer"
        }
      }
    },
    "io.k8s.api.core.v1.ProjectedVolumeSource": {
      "description": "Represents a projected volume source",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "sources": {
          "description": "list of volume projections",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.VolumeProjection"
          }
        }
      }
    },
    "io.k8s.api.core.v1.QuobyteVolumeSource": {
      "description": "Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte volumes do not support ownership management or SELinux relabeling.",
      "type": "object",
      "required": [
        "registry",
        "volume"
      ],
      "properties": {
        "group": {
          "description": "Group to map volume access to Default is no group",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.",
          "type": "boolean"
        },
        "registry": {
          "description": "Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes",
          "type": "string"
        },
        "tenant": {
          "description": "Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin",
          "type": "string"
        },
        "user": {
          "description": "User to map volume access to Defaults to serivceaccount user",
          "type": "string"
        },
        "volume": {
          "description": "Volume is a string that references an already created Quobyte volume by name.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.RBDVolumeSource": {
      "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod. RBD volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "required": [
        "monitors",
        "image"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
          "type": "string"
        },
        "image": {
          "description": "The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "keyring": {
          "description": "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "monitors": {
          "description": "A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "description": "The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        },
        "readOnly": {
          "description": "ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "boolean"
        },
        "secretRef": {
          "description": "SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "user": {
          "description": "The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ResourceFieldSelector": {
      "description": "ResourceFieldSelector represents container resources (cpu, memory) and their output format",
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "containerName": {
          "description": "Container name: required for volumes, optional for env vars",
          "type": "string"
        },
        "divisor": {
          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
        },
        "resource": {
          "description": "Required: resource to select",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.ResourceRequirements": {
      "description": "ResourceRequirements describes the compute resource requirements.",
      "type": "object",
      "properties": {
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.api.resource.Quantity"
          }
        }
      }
    },
    "io.k8s.api.core.v1.SELinuxOptions": {
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object",
      "properties": {
        "level": {
          "description": "Level is SELinux level label that applies to the container.",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.",
          "type": "string"
        },
        "user": {
          "description": "User is a SELinux user label that applies to the container.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ScaleIOVolumeSource": {
      "description": "ScaleIOVolumeSource represents a persistent ScaleIO volume",
      "type": "object",
      "required": [
        "gateway",
        "system",
        "secretRef"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Default is \"xfs\".",
          "type": "string"
        },
        "gateway": {
          "description": "The host address of the ScaleIO API Gateway.",
          "type": "string"
        },
        "protectionDomain": {
          "description": "The name of the ScaleIO Protection Domain for the configured storage.",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "sslEnabled": {
          "description": "Flag to enable/disable SSL communication with Gateway, default false",
          "type": "boolean"
        },
        "storageMode": {
          "description": "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.",
          "type": "string"
        },
        "storagePool": {
          "description": "The ScaleIO Storage Pool associated with the protection domain.",
          "type": "string"
        },
        "system": {
          "description": "The name of the storage system as configured in ScaleIO.",
          "type": "string"
        },
        "volumeName": {
          "description": "The name of a volume already created in the ScaleIO system that is associated with this volume source.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SeccompProfile": {
      "description": "SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "localhostProfile": {
          "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
          "type": "string"
        },
        "type": {
          "description": "type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.\n\nPossible enum values:\n - `\"Localhost\"` indicates a profile defined in a file on the node should be used. The file's location relative to \u003ckubelet-root-dir\u003e/seccomp.\n - `\"RuntimeDefault\"` represents the default container runtime seccomp profile.\n - `\"Unconfined\"` indicates no seccomp profile is applied (A.K.A. unconfined).",
          "type": "string",
          "enum": [
            "Localhost",
            "RuntimeDefault",
            "Unconfined"
          ]
        }
      },
      "x-kubernetes-unions": [
        {
          "discriminator": "type",
          "fields-to-discriminateBy": {
            "localhostProfile": "LocalhostProfile"
          }
        }
      ]
    },
    "io.k8s.api.core.v1.SecretEnvSource": {
      "description": "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretKeySelector": {
      "description": "SecretKeySelector selects a key of a Secret.",
      "type": "object",
      "required": [
        "key"
      ],
      "properties": {
        "key": {
          "description": "The key of the secret to select from.  Must be a valid secret key.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.SecretProjection": {
      "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.",
      "type": "object",
      "properties": {
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "optional": {
          "description": "Specify whether the Secret or its key must be defined",
          "type": "boolean"
        }
      }
    },
    "io.k8s.api.core.v1.SecretVolumeSource": {
      "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.",
      "type": "object",
      "properties": {
        "defaultMode": {
          "description": "Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "type": "integer"
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.api.core.v1.KeyToPath"
          }
        },
        "optional": {
          "description": "Specify whether the Secret or its keys must be defined",
          "type": "boolean"
        },
        "secretName": {
          "description": "Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.SecurityContext": {
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.",
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.Capabilities"
        },
        "privileged": {
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "procMount": {
          "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled. Note that this field cannot be set when spec.os.name is windows.",
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false. Note that this field cannot be set when spec.os.name is windows.",
          "type": "boolean"
        },
        "runAsGroup": {
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "boolean"
        },
        "runAsUser": {
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "type": "integer"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SELinuxOptions"
        },
        "seccompProfile": {
          "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod \u0026 container level, the container options override the pod options. Note that this field cannot be set when spec.os.name is windows.",
          "$ref": "#/definitions/io.k8s.api.core.v1.SeccompProfile"
        },
        "windowsOptions": {
          "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. Note that this field cannot be set when spec.os.name is linux.",
          "$ref": "#/definitions/io.k8s.api.core.v1.WindowsSecurityContextOptions"
        }
      }
    },
    "io.k8s.api.core.v1.ServiceAccountTokenProjection": {
      "description": "ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).",
      "type": "object",
      "required": [
        "path"
      ],
      "properties": {
        "audience": {
          "description": "Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.",
          "type": "string"
        },
        "expirationSeconds": {
          "description": "ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.",
          "type": "integer"
        },
        "path": {
          "description": "Path is the path relative to the mount point of the file to project the token into.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.ServicePort": {
      "description": "ServicePort contains information on service's port.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "appProtocol": {
          "description": "The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.",
          "type": "string"
        },
        "name": {
          "description": "The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.",
          "type": "string"
        },
        "nodePort": {
          "description": "The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
          "type": "integer"
        },
        "port": {
          "description": "The port that will be exposed by this service.",
          "type": "integer"
        },
        "protocol": {
          "description": "The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.\n\nPossible enum values:\n - `\"SCTP\"` is the SCTP protocol.\n - `\"TCP\"` is the TCP protocol.\n - `\"UDP\"` is the UDP protocol.",
          "type": "string",
          "enum": [
            "SCTP",
            "TCP",
            "UDP"
          ]
        },
        "targetPort": {
          "description": "Number or name of the port to access on the pods targeted by the service. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. If this is a string, it will be looked up as a named port in the target Pod's container ports. If this is not specified, the value of the 'port' field is used (an identity map). This field is ignored for services with clusterIP=None, and should be omitted or set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.core.v1.StorageOSVolumeSource": {
      "description": "Represents a StorageOS persistent volume resource.",
      "type": "object",
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "readOnly": {
          "description": "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.",
          "type": "boolean"
        },
        "secretRef": {
          "description": "SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.",
          "$ref": "#/definitions/io.k8s.api.core.v1.LocalObjectReference"
        },
        "volumeName": {
          "description": "VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.",
          "type": "string"
        },
        "volumeNamespace": {
          "description": "VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to \"default\" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.Sysctl": {
      "description": "Sysctl defines a kernel parameter to be set",
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "description": "Name of a property to set",
          "type": "string"
        },
        "value": {
          "description": "Value of a property to set",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TCPSocketAction": {
      "description": "TCPSocketAction describes an action based on opening a socket",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        }
      }
    },
    "io.k8s.api.core.v1.Toleration": {
      "description": "The pod this Toleration is attached to tolerates any taint that matches the triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
      "type": "object",
      "properties": {
        "effect": {
          "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\nPossible enum values:\n - `\"NoExecute\"` Evict any already-running pods that do not tolerate the taint. Currently enforced by NodeController.\n - `\"NoSchedule\"` Do not allow new pods to schedule onto the node unless they tolerate the taint, but allow all pods submitted to Kubelet without going through the scheduler to start, and allow all already-running pods to continue running. Enforced by the scheduler.\n - `\"PreferNoSchedule\"` Like TaintEffectNoSchedule, but the scheduler tries not to schedule new pods onto the node, rather than prohibiting new pods from scheduling onto the node entirely. Enforced by the scheduler.",
          "type": "string",
          "enum": [
            "NoExecute",
            "NoSchedule",
            "PreferNoSchedule"
          ]
        },
        "key": {
          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
          "type": "string"
        },
        "operator": {
          "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\nPossible enum values:\n - `\"Equal\"`\n - `\"Exists\"`",
          "type": "string",
          "enum": [
            "Equal",
            "Exists"
          ]
        },
        "tolerationSeconds": {
          "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
          "type": "integer"
        },
        "value": {
          "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.TypedLocalObjectReference": {
      "description": "TypedLocalObjectReference contains enough information to let you locate the typed referenced object inside the same namespace.",
      "type": "object",
      "required": [
        "kind",
        "name"
      ],
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.api.core.v1.Volume": {
      "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "awsElasticBlockStore": {
          "description": "AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
          "$ref": "#/definitions/io.k8s.api.core.v1.AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureDiskVolumeSource"
        },
        "azureFile": {
          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.AzureFileVolumeSource"
        },
        "cephfs": {
          "description": "CephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.CephFSVolumeSource"
        },
        "cinder": {
          "description": "Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.CinderVolumeSource"
        },
        "configMap": {
          "description": "ConfigMap represents a configMap that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapVolumeSource"
        },
        "csi": {
          "description": "CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
          "$ref": "#/definitions/io.k8s.api.core.v1.CSIVolumeSource"
        },
        "downwardAPI": {
          "description": "DownwardAPI represents downward API about the pod that should populate this volume",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "description": "EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
          "$ref": "#/definitions/io.k8s.api.core.v1.EmptyDirVolumeSource"
        },
        "ephemeral": {
          "description": "Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.\n\nUse this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.\n\nA pod can use both types of ephemeral volumes and persistent volumes at the same time.",
          "$ref": "#/definitions/io.k8s.api.core.v1.EphemeralVolumeSource"
        },
        "fc": {
          "description": "FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FCVolumeSource"
        },
        "flexVolume": {
          "description": "FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlexVolumeSource"
        },
        "flocker": {
          "description": "Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
          "$ref": "#/definitions/io.k8s.api.core.v1.FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "description": "GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
          "$ref": "#/definitions/io.k8s.api.core.v1.GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "description": "GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.",
          "$ref": "#/definitions/io.k8s.api.core.v1.GitRepoVolumeSource"
        },
        "glusterfs": {
          "description": "Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.GlusterfsVolumeSource"
        },
        "hostPath": {
          "description": "HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
          "$ref": "#/definitions/io.k8s.api.core.v1.HostPathVolumeSource"
        },
        "iscsi": {
          "description": "ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.ISCSIVolumeSource"
        },
        "name": {
          "description": "Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        },
        "nfs": {
          "description": "NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
          "$ref": "#/definitions/io.k8s.api.core.v1.NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
          "$ref": "#/definitions/io.k8s.api.core.v1.PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "description": "PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "description": "PortworxVolume represents a portworx volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.PortworxVolumeSource"
        },
        "projected": {
          "description": "Items for all in one resources secrets, configmaps, and downward API",
          "$ref": "#/definitions/io.k8s.api.core.v1.ProjectedVolumeSource"
        },
        "quobyte": {
          "description": "Quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
          "$ref": "#/definitions/io.k8s.api.core.v1.QuobyteVolumeSource"
        },
        "rbd": {
          "description": "RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md",
          "$ref": "#/definitions/io.k8s.api.core.v1.RBDVolumeSource"
        },
        "scaleIO": {
          "description": "ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.ScaleIOVolumeSource"
        },
        "secret": {
          "description": "Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretVolumeSource"
        },
        "storageos": {
          "description": "StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
          "$ref": "#/definitions/io.k8s.api.core.v1.StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "description": "VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
          "$ref": "#/definitions/io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeDevice": {
      "description": "volumeDevice describes a mapping of a raw block device within a container.",
      "type": "object",
      "required": [
        "name",
        "devicePath"
      ],
      "properties": {
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be mapped to.",
          "type": "string"
        },
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "type": "object",
      "required": [
        "name",
        "mountPath"
      ],
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
          "type": "string"
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
          "type": "string"
        },
        "name": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
          "type": "boolean"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "subPathExpr": {
          "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.VolumeProjection": {
      "description": "Projection that may be projected along with other supported volume types",
      "type": "object",
      "properties": {
        "configMap": {
          "description": "information about the configMap data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.ConfigMapProjection"
        },
        "downwardAPI": {
          "description": "information about the downwardAPI data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.DownwardAPIProjection"
        },
        "secret": {
          "description": "information about the secret data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.SecretProjection"
        },
        "serviceAccountToken": {
          "description": "information about the serviceAccountToken data to project",
          "$ref": "#/definitions/io.k8s.api.core.v1.ServiceAccountTokenProjection"
        }
      }
    },
    "io.k8s.api.core.v1.VsphereVirtualDiskVolumeSource": {
      "description": "Represents a vSphere volume resource.",
      "type": "object",
      "required": [
        "volumePath"
      ],
      "properties": {
        "fsType": {
          "description": "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
          "type": "string"
        },
        "storagePolicyID": {
          "description": "Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
          "type": "string"
        },
        "storagePolicyName": {
          "description": "Storage Policy Based Management (SPBM) profile name.",
          "type": "string"
        },
        "volumePath": {
          "description": "Path that identifies vSphere volume vmdk",
          "type": "string"
        }
      }
    },
    "io.k8s.api.core.v1.WeightedPodAffinityTerm": {
      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
      "type": "object",
      "required": [
        "weight",
        "podAffinityTerm"
      ],
      "properties": {
        "podAffinityTerm": {
          "description": "Required. A pod affinity term, associated with the corresponding weight.",
          "$ref": "#/definitions/io.k8s.api.core.v1.PodAffinityTerm"
        },
        "weight": {
          "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
          "type": "integer"
        }
      }
    },
    "io.k8s.api.core.v1.WindowsSecurityContextOptions": {
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials.",
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
          "type": "string"
        },
        "hostProcess": {
          "description": "HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.",
          "type": "boolean"
        },
        "runAsUserName": {
          "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
          "type": "string"
        }
      }
    },
    "io.k8s.api.policy.v1beta1.PodDisruptionBudgetSpec": {
      "description": "PodDisruptionBudgetSpec is a description of a PodDisruptionBudget.",
      "type": "object",
      "properties": {
        "maxUnavailable": {
          "description": "An eviction is allowed if at most \"maxUnavailable\" pods selected by \"selector\" are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. This is a mutually exclusive setting with \"minAvailable\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "minAvailable": {
          "description": "An eviction is allowed if at least \"minAvailable\" pods selected by \"selector\" will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying \"100%\".",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
        },
        "selector": {
          "description": "Label query over pods whose evictions are managed by the disruption budget. A null selector selects no pods. An empty selector ({}) also selects no pods, which differs from standard behavior of selecting all pods. In policy/v1, an empty selector will select all pods in the namespace.",
          "x-kubernetes-patch-strategy": "replace",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
        }
      }
    },
    "io.k8s.apimachinery.pkg.api.resource.Quantity": {
      "description": "Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n\u003cquantity\u003e        ::= \u003csignedNumber\u003e\u003csuffix\u003e\n  (Note that \u003csuffix\u003e may be empty, from the \"\" case in \u003cdecimalSI\u003e.)\n\u003cdigit\u003e           ::= 0 | 1 | ... | 9 \u003cdigits\u003e          ::= \u003cdigit\u003e | \u003cdigit\u003e\u003cdigits\u003e \u003cnumber\u003e          ::= \u003cdigits\u003e | \u003cdigits\u003e.\u003cdigits\u003e | \u003cdigits\u003e. | .\u003cdigits\u003e \u003csign\u003e            ::= \"+\" | \"-\" \u003csignedNumber\u003e    ::= \u003cnumber\u003e | \u003csign\u003e\u003cnumber\u003e \u003csuffix\u003e          ::= \u003cbinarySI\u003e | \u003cdecimalExponent\u003e | \u003cdecimalSI\u003e \u003cbinarySI\u003e        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\u003cdecimalSI\u003e       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\u003cdecimalExponent\u003e ::= \"e\" \u003csignedNumber\u003e | \"E\" \u003csignedNumber\u003e\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.",
      "type": "string"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Condition": {
      "description": "Condition contains details for one aspect of the current state of this API Resource.",
      "type": "object",
      "required": [
        "type",
        "status",
        "lastTransitionTime",
        "reason",
        "message"
      ],
      "properties": {
        "lastTransitionTime": {
          "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "message": {
          "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
          "type": "integer"
        },
        "reason": {
          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
          "type": "string"
        },
        "status": {
          "description": "status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions": {
      "description": "CreateOptions may be provided when creating an API object.",
      "type": "object",
      "properties": {
        "dryRun": {
          "type": "array",
          "title": "When present, indicates that modifications should not be\npersisted. An invalid or unrecognized dryRun directive will\nresult in an error response and no further processing of the\nrequest. Valid values are:\n- All: all dry run stages will be processed\n+optional",
          "items": {
            "type": "string"
          }
        },
        "fieldManager": {
          "type": "string",
          "title": "fieldManager is a name associated with the actor or entity\nthat is making these changes. The value must be less than or\n128 characters long, and only contain printable characters,\nas defined by https://golang.org/pkg/unicode/#IsPrint.\n+optional"
        },
        "fieldValidation": {
          "type": "string",
          "title": "fieldValidation determines how the server should respond to\nunknown/duplicate fields in the object in the request.\nIntroduced as alpha in 1.23, older servers or servers with the\n`ServerSideFieldValidation` feature disabled will discard valid values\nspecified in  this param and not perform any server side field validation.\nValid values are:\n- Ignore: ignores unknown/duplicate fields.\n- Warn: responds with a warning for each\nunknown/duplicate field, but successfully serves the request.\n- Strict: fails the request on unknown/duplicate fields.\n+optional"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Duration": {
      "description": "Duration is a wrapper around time.Duration which supports correct\nmarshaling to YAML and JSON. In particular, it marshals into strings, which\ncan be used as map keys in json.",
      "type": "object",
      "properties": {
        "duration": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1": {
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set, or a string representing a sub-field or item. The string will follow one of these four formats: 'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map 'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item 'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list 'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values If a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff",
      "type": "object"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.GroupVersionResource": {
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "title": "GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion\nto avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling",
      "properties": {
        "group": {
          "type": "string"
        },
        "resource": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
      "type": "object",
      "properties": {
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
      "type": "object",
      "required": [
        "key",
        "operator"
      ],
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string",
          "x-kubernetes-patch-merge-key": "key",
          "x-kubernetes-patch-strategy": "merge"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta": {
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a consistent list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response, unless you have received this token from an error message.",
          "type": "string"
        },
        "remainingItemCount": {
          "description": "remainingItemCount is the number of subsequent items in the list which are not included in this list response. If the list request contained label or field selectors, then the number of remaining items is unknown and the field will be left unset and omitted during serialization. If the list is complete (either because it is not chunking or because this is the last chunk), then there are no more remaining items and this field will be left unset and omitted during serialization. Servers older than v1.15 do not set this field. The intended use of the remainingItemCount is *estimating* the size of a collection. Clients should not rely on the remainingItemCount to be set or to be exact.",
          "type": "integer"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "selfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry": {
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource that the fieldset applies to.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the version of this resource that this field set applies to. The format is \"group/version\" just like the top-level APIVersion field. It is necessary to track the version of a field set because it cannot be automatically converted.",
          "type": "string"
        },
        "fieldsType": {
          "description": "FieldsType is the discriminator for the different fields format and version. There is currently only one possible value: \"FieldsV1\"",
          "type": "string"
        },
        "fieldsV1": {
          "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.FieldsV1"
        },
        "manager": {
          "description": "Manager is an identifier of the workflow managing these fields.",
          "type": "string"
        },
        "operation": {
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created. The only valid values for this field are 'Apply' and 'Update'.",
          "type": "string"
        },
        "subresource": {
          "description": "Subresource is the name of the subresource used to update that object, or empty string if the object was updated through the main resource. The value of this field is used to distinguish between managers, even if they share the same name. For example, a status update will be distinct from a regular update using the same manager name. Note that the APIVersion field is not related to the Subresource field and it always corresponds to the version of the main resource.",
          "type": "string"
        },
        "time": {
          "description": "Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.MicroTime": {
      "description": "MicroTime is version of Time with microsecond level precision.",
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta": {
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-patch-strategy": "merge"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.\n\nIf this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "description": "ManagedFields maps workflow-id and version to the set of fields that are managed by that workflow. This is mostly for internal housekeeping, and users typically shouldn't need to set or understand this field. A workflow can be the user's name, a controller's name, or the name of a specific apply path like \"ci-cd\". The set of fields is always in the version that the workflow used when modifying the object.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ManagedFieldsEntry"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference"
          },
          "x-kubernetes-patch-merge-key": "uid",
          "x-kubernetes-patch-strategy": "merge"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.\n\nDEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name",
        "uid"
      ],
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.",
          "type": "boolean"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        }
      },
      "x-kubernetes-map-type": "atomic"
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.StatusCause": {
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be presented as-is to a reader.",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available.",
          "type": "string"
        }
      }
    },
    "io.k8s.apimachinery.pkg.apis.meta.v1.Time": {
      "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.",
      "type": "string",
      "format": "date-time"
    },
    "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
      "type": "string"
    },
    "pipeline.DeletePipelineResponse": {
      "type": "object"
    },
    "pipeline.LogEntry": {
      "type": "object",
      "title": "structured log entry",
      "properties": {
        "msg": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pipelineName": {
          "type": "string"
        },
        "stepName": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        }
      }
    },
    "pipeline.PipelineWatchEvent": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Pipeline"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "pipeline.RestartPipelineResponse": {
      "type": "object"
    },
    "pipeline.StepWatchEvent": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/github.com.argoproj_labs.argo_dataflow.api.v1alpha1.Step"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "sensor.CreateSensorRequest": {
      "type": "object",
      "properties": {
        "createOptions": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.CreateOptions"
        },
        "namespace": {
          "type": "string"
        },
        "sensor": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
        }
      }
    },
    "sensor.DeleteSensorResponse": {
      "type": "object"
    },
    "sensor.LogEntry": {
      "type": "object",
      "title": "structured log entry",
      "properties": {
        "dependencyName": {
          "type": "string",
          "title": "optional - trigger dependency name"
        },
        "eventContext": {
          "type": "string",
          "title": "optional - Cloud Event context"
        },
        "level": {
          "type": "string"
        },
        "msg": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "sensorName": {
          "type": "string"
        },
        "time": {
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Time"
        },
        "triggerName": {
          "type": "string",
          "title": "optional - any trigger name"
        }
      }
    },
    "sensor.SensorWatchEvent": {
      "type": "object",
      "properties": {
        "object": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "sensor.UpdateSensorRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "sensor": {
          "$ref": "#/definitions/io.argoproj.events.v1alpha1.Sensor"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerToken": {
      "description": "Bearer Token authentication",
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "BearerToken": []
    }
  ]
}