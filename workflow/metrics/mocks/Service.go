// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	time "time"

	prometheus "github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// Metrics provides a mock function with given fields:
func (_m *Service) Metrics() []prometheus.Metric {
	ret := _m.Called()

	var r0 []prometheus.Metric
	if rf, ok := ret.Get(0).(func() []prometheus.Metric); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]prometheus.Metric)
		}
	}

	return r0
}

// PodProcessed provides a mock function with given fields:
func (_m *Service) PodProcessed() {
	_m.Called()
}

// UpdateReapplied provides a mock function with given fields:
func (_m *Service) UpdateReapplied() {
	_m.Called()
}

// UpdatesPersisted provides a mock function with given fields:
func (_m *Service) UpdatesPersisted() {
	_m.Called()
}

// WorkflowProcessed provides a mock function with given fields: duration
func (_m *Service) WorkflowProcessed(duration time.Duration) {
	_m.Called(duration)
}
