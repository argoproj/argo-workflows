// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	v1alpha1 "github.com/argoproj/argo/pkg/apis/workflow/v1alpha1"
	mock "github.com/stretchr/testify/mock"
)

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Dehydrate provides a mock function with given fields: wf
func (_m *Interface) Dehydrate(wf *v1alpha1.Workflow) error {
	ret := _m.Called(wf)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.Workflow) error); ok {
		r0 = rf(wf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Hydrate provides a mock function with given fields: wf
func (_m *Interface) Hydrate(wf *v1alpha1.Workflow) error {
	ret := _m.Called(wf)

	var r0 error
	if rf, ok := ret.Get(0).(func(*v1alpha1.Workflow) error); ok {
		r0 = rf(wf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HydrateWithNodes provides a mock function with given fields: wf, nodes
func (_m *Interface) HydrateWithNodes(wf *v1alpha1.Workflow, nodes v1alpha1.Nodes) {
	_m.Called(wf, nodes)
}

// IsHydrated provides a mock function with given fields: wf
func (_m *Interface) IsHydrated(wf *v1alpha1.Workflow) bool {
	ret := _m.Called(wf)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*v1alpha1.Workflow) bool); ok {
		r0 = rf(wf)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
