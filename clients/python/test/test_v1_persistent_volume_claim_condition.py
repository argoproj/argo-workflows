# coding: utf-8

"""
    Argo

    Workflow Service API performs CRUD actions against application resources  # noqa: E501

    The version of the OpenAPI document: latest
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.io.argoproj.argo.client.model.v1_persistent_volume_claim_condition import V1PersistentVolumeClaimCondition  # noqa: E501
from openapi_client.rest import ApiException

class TestV1PersistentVolumeClaimCondition(unittest.TestCase):
    """V1PersistentVolumeClaimCondition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1PersistentVolumeClaimCondition
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v1_persistent_volume_claim_condition.V1PersistentVolumeClaimCondition()  # noqa: E501
        if include_optional :
            return V1PersistentVolumeClaimCondition(
                last_probe_time = openapi_client.models.v1_time.v1Time(
                    nanos = 56, 
                    seconds = '0', ), 
                last_transition_time = openapi_client.models.v1_time.v1Time(
                    nanos = 56, 
                    seconds = '0', ), 
                message = '0', 
                reason = '0', 
                status = '0', 
                type = '0'
            )
        else :
            return V1PersistentVolumeClaimCondition(
        )

    def testV1PersistentVolumeClaimCondition(self):
        """Test V1PersistentVolumeClaimCondition"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
