# coding: utf-8

"""
    Argo

    Workflow Service API performs CRUD actions against application resources  # noqa: E501

    The version of the OpenAPI document: latest
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.io.argoproj.argo.client.model.v1alpha1_volume_projection import V1alpha1VolumeProjection  # noqa: E501
from openapi_client.rest import ApiException

class TestV1alpha1VolumeProjection(unittest.TestCase):
    """V1alpha1VolumeProjection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1VolumeProjection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v1alpha1_volume_projection.V1alpha1VolumeProjection()  # noqa: E501
        if include_optional :
            return V1alpha1VolumeProjection(
                config_map = openapi_client.models.v1alpha1_config_map_projection.v1alpha1ConfigMapProjection(
                    items = [
                        openapi_client.models.v1alpha1_key_to_path.v1alpha1KeyToPath(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    local_object_reference = openapi_client.models.v1alpha1_local_object_reference.v1alpha1LocalObjectReference(
                        name = '0', ), 
                    optional = True, ), 
                downward_api = openapi_client.models.v1alpha1_downward_api_projection.v1alpha1DownwardAPIProjection(
                    items = [
                        openapi_client.models.v1alpha1_downward_api_volume_file.v1alpha1DownwardAPIVolumeFile(
                            field_ref = openapi_client.models.v1alpha1_object_field_selector.v1alpha1ObjectFieldSelector(
                                api_version = '0', 
                                field_path = '0', ), 
                            mode = 56, 
                            path = '0', 
                            resource_field_ref = openapi_client.models.v1alpha1_resource_field_selector.v1alpha1ResourceFieldSelector(
                                container_name = '0', 
                                divisor = openapi_client.models.resource_quantity.resourceQuantity(
                                    string = '0', ), 
                                resource = '0', ), )
                        ], ), 
                secret = openapi_client.models.v1alpha1_secret_projection.v1alpha1SecretProjection(
                    items = [
                        openapi_client.models.v1alpha1_key_to_path.v1alpha1KeyToPath(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    local_object_reference = openapi_client.models.v1alpha1_local_object_reference.v1alpha1LocalObjectReference(
                        name = '0', ), 
                    optional = True, ), 
                service_account_token = openapi_client.models.v1alpha1_service_account_token_projection.v1alpha1ServiceAccountTokenProjection(
                    audience = '0', 
                    expiration_seconds = '0', 
                    path = '0', )
            )
        else :
            return V1alpha1VolumeProjection(
        )

    def testV1alpha1VolumeProjection(self):
        """Test V1alpha1VolumeProjection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
