# coding: utf-8

"""
    Argo

    Workflow Service API performs CRUD actions against application resources  # noqa: E501

    The version of the OpenAPI document: latest
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.io.argoproj.argo.client.model.v1alpha1_hdfs_artifact import V1alpha1HDFSArtifact  # noqa: E501
from openapi_client.rest import ApiException

class TestV1alpha1HDFSArtifact(unittest.TestCase):
    """V1alpha1HDFSArtifact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1alpha1HDFSArtifact
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.v1alpha1_hdfs_artifact.V1alpha1HDFSArtifact()  # noqa: E501
        if include_optional :
            return V1alpha1HDFSArtifact(
                force = True, 
                h_dfs_config = openapi_client.models.hdfs_config_is_configurations_for_hdfs.HDFSConfig is configurations for HDFS(
                    addresses = [
                        '0'
                        ], 
                    h_dfs_krb_config = openapi_client.models.hdfs_krb_config_is_auth_configurations_for_kerberos.HDFSKrbConfig is auth configurations for Kerberos(
                        krb_c_cache_secret = openapi_client.models.workflowv1alpha1_secret_key_selector.workflowv1alpha1SecretKeySelector(
                            key = '0', 
                            local_object_reference = openapi_client.models.workflowv1alpha1_local_object_reference.workflowv1alpha1LocalObjectReference(
                                name = '0', ), 
                            optional = True, ), 
                        krb_config_config_map = openapi_client.models.workflowv1alpha1_config_map_key_selector.workflowv1alpha1ConfigMapKeySelector(
                            key = '0', 
                            optional = True, ), 
                        krb_keytab_secret = openapi_client.models.workflowv1alpha1_secret_key_selector.workflowv1alpha1SecretKeySelector(
                            key = '0', 
                            optional = True, ), 
                        krb_realm = '0', 
                        krb_service_principal_name = '0', 
                        krb_username = '0', ), 
                    hdfs_user = '0', ), 
                path = '0'
            )
        else :
            return V1alpha1HDFSArtifact(
        )

    def testV1alpha1HDFSArtifact(self):
        """Test V1alpha1HDFSArtifact"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
