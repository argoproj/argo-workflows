/*
 * Argo Server API
 * The Argo Server based API for Argo
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.argo.client.model.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1alpha1GitArtifact
 */

public class V1alpha1GitArtifact {
  public static final String SERIALIZED_NAME_DEPTH = "depth";
  @SerializedName(SERIALIZED_NAME_DEPTH)
  private String depth;

  public static final String SERIALIZED_NAME_FETCH = "fetch";
  @SerializedName(SERIALIZED_NAME_FETCH)
  private List<String> fetch = null;

  public static final String SERIALIZED_NAME_INSECURE_IGNORE_HOST_KEY = "insecureIgnoreHostKey";
  @SerializedName(SERIALIZED_NAME_INSECURE_IGNORE_HOST_KEY)
  private Boolean insecureIgnoreHostKey;

  public static final String SERIALIZED_NAME_PASSWORD_SECRET = "passwordSecret";
  @SerializedName(SERIALIZED_NAME_PASSWORD_SECRET)
  private V1SecretKeySelector passwordSecret;

  public static final String SERIALIZED_NAME_REPO = "repo";
  @SerializedName(SERIALIZED_NAME_REPO)
  private String repo;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private String revision;

  public static final String SERIALIZED_NAME_SSH_PRIVATE_KEY_SECRET = "sshPrivateKeySecret";
  @SerializedName(SERIALIZED_NAME_SSH_PRIVATE_KEY_SECRET)
  private V1SecretKeySelector sshPrivateKeySecret;

  public static final String SERIALIZED_NAME_USERNAME_SECRET = "usernameSecret";
  @SerializedName(SERIALIZED_NAME_USERNAME_SECRET)
  private V1SecretKeySelector usernameSecret;


  public V1alpha1GitArtifact depth(String depth) {
    
    this.depth = depth;
    return this;
  }

   /**
   * Get depth
   * @return depth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepth() {
    return depth;
  }


  public void setDepth(String depth) {
    this.depth = depth;
  }


  public V1alpha1GitArtifact fetch(List<String> fetch) {
    
    this.fetch = fetch;
    return this;
  }

  public V1alpha1GitArtifact addFetchItem(String fetchItem) {
    if (this.fetch == null) {
      this.fetch = new ArrayList<String>();
    }
    this.fetch.add(fetchItem);
    return this;
  }

   /**
   * Get fetch
   * @return fetch
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getFetch() {
    return fetch;
  }


  public void setFetch(List<String> fetch) {
    this.fetch = fetch;
  }


  public V1alpha1GitArtifact insecureIgnoreHostKey(Boolean insecureIgnoreHostKey) {
    
    this.insecureIgnoreHostKey = insecureIgnoreHostKey;
    return this;
  }

   /**
   * Get insecureIgnoreHostKey
   * @return insecureIgnoreHostKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInsecureIgnoreHostKey() {
    return insecureIgnoreHostKey;
  }


  public void setInsecureIgnoreHostKey(Boolean insecureIgnoreHostKey) {
    this.insecureIgnoreHostKey = insecureIgnoreHostKey;
  }


  public V1alpha1GitArtifact passwordSecret(V1SecretKeySelector passwordSecret) {
    
    this.passwordSecret = passwordSecret;
    return this;
  }

   /**
   * Get passwordSecret
   * @return passwordSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getPasswordSecret() {
    return passwordSecret;
  }


  public void setPasswordSecret(V1SecretKeySelector passwordSecret) {
    this.passwordSecret = passwordSecret;
  }


  public V1alpha1GitArtifact repo(String repo) {
    
    this.repo = repo;
    return this;
  }

   /**
   * Get repo
   * @return repo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRepo() {
    return repo;
  }


  public void setRepo(String repo) {
    this.repo = repo;
  }


  public V1alpha1GitArtifact revision(String revision) {
    
    this.revision = revision;
    return this;
  }

   /**
   * Get revision
   * @return revision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRevision() {
    return revision;
  }


  public void setRevision(String revision) {
    this.revision = revision;
  }


  public V1alpha1GitArtifact sshPrivateKeySecret(V1SecretKeySelector sshPrivateKeySecret) {
    
    this.sshPrivateKeySecret = sshPrivateKeySecret;
    return this;
  }

   /**
   * Get sshPrivateKeySecret
   * @return sshPrivateKeySecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getSshPrivateKeySecret() {
    return sshPrivateKeySecret;
  }


  public void setSshPrivateKeySecret(V1SecretKeySelector sshPrivateKeySecret) {
    this.sshPrivateKeySecret = sshPrivateKeySecret;
  }


  public V1alpha1GitArtifact usernameSecret(V1SecretKeySelector usernameSecret) {
    
    this.usernameSecret = usernameSecret;
    return this;
  }

   /**
   * Get usernameSecret
   * @return usernameSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getUsernameSecret() {
    return usernameSecret;
  }


  public void setUsernameSecret(V1SecretKeySelector usernameSecret) {
    this.usernameSecret = usernameSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1GitArtifact v1alpha1GitArtifact = (V1alpha1GitArtifact) o;
    return Objects.equals(this.depth, v1alpha1GitArtifact.depth) &&
        Objects.equals(this.fetch, v1alpha1GitArtifact.fetch) &&
        Objects.equals(this.insecureIgnoreHostKey, v1alpha1GitArtifact.insecureIgnoreHostKey) &&
        Objects.equals(this.passwordSecret, v1alpha1GitArtifact.passwordSecret) &&
        Objects.equals(this.repo, v1alpha1GitArtifact.repo) &&
        Objects.equals(this.revision, v1alpha1GitArtifact.revision) &&
        Objects.equals(this.sshPrivateKeySecret, v1alpha1GitArtifact.sshPrivateKeySecret) &&
        Objects.equals(this.usernameSecret, v1alpha1GitArtifact.usernameSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(depth, fetch, insecureIgnoreHostKey, passwordSecret, repo, revision, sshPrivateKeySecret, usernameSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1GitArtifact {\n");
    sb.append("    depth: ").append(toIndentedString(depth)).append("\n");
    sb.append("    fetch: ").append(toIndentedString(fetch)).append("\n");
    sb.append("    insecureIgnoreHostKey: ").append(toIndentedString(insecureIgnoreHostKey)).append("\n");
    sb.append("    passwordSecret: ").append(toIndentedString(passwordSecret)).append("\n");
    sb.append("    repo: ").append(toIndentedString(repo)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    sshPrivateKeySecret: ").append(toIndentedString(sshPrivateKeySecret)).append("\n");
    sb.append("    usernameSecret: ").append(toIndentedString(usernameSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

