/*
 * Argo Server API
 * The Argo Server based API for Argo
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.argo.client.model.V1alpha1WorkflowSpec;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha1CronWorkflowSpec
 */

public class V1alpha1CronWorkflowSpec {
  public static final String SERIALIZED_NAME_CONCURRENCY_POLICY = "concurrencyPolicy";
  @SerializedName(SERIALIZED_NAME_CONCURRENCY_POLICY)
  private String concurrencyPolicy;

  public static final String SERIALIZED_NAME_FAILED_JOBS_HISTORY_LIMIT = "failedJobsHistoryLimit";
  @SerializedName(SERIALIZED_NAME_FAILED_JOBS_HISTORY_LIMIT)
  private Integer failedJobsHistoryLimit;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private String schedule;

  public static final String SERIALIZED_NAME_STARTING_DEADLINE_SECONDS = "startingDeadlineSeconds";
  @SerializedName(SERIALIZED_NAME_STARTING_DEADLINE_SECONDS)
  private String startingDeadlineSeconds;

  public static final String SERIALIZED_NAME_SUCCESSFUL_JOBS_HISTORY_LIMIT = "successfulJobsHistoryLimit";
  @SerializedName(SERIALIZED_NAME_SUCCESSFUL_JOBS_HISTORY_LIMIT)
  private Integer successfulJobsHistoryLimit;

  public static final String SERIALIZED_NAME_SUSPEND = "suspend";
  @SerializedName(SERIALIZED_NAME_SUSPEND)
  private Boolean suspend;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_WORKFLOW_SPEC = "workflowSpec";
  @SerializedName(SERIALIZED_NAME_WORKFLOW_SPEC)
  private V1alpha1WorkflowSpec workflowSpec;


  public V1alpha1CronWorkflowSpec concurrencyPolicy(String concurrencyPolicy) {
    
    this.concurrencyPolicy = concurrencyPolicy;
    return this;
  }

   /**
   * Get concurrencyPolicy
   * @return concurrencyPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConcurrencyPolicy() {
    return concurrencyPolicy;
  }


  public void setConcurrencyPolicy(String concurrencyPolicy) {
    this.concurrencyPolicy = concurrencyPolicy;
  }


  public V1alpha1CronWorkflowSpec failedJobsHistoryLimit(Integer failedJobsHistoryLimit) {
    
    this.failedJobsHistoryLimit = failedJobsHistoryLimit;
    return this;
  }

   /**
   * Get failedJobsHistoryLimit
   * @return failedJobsHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFailedJobsHistoryLimit() {
    return failedJobsHistoryLimit;
  }


  public void setFailedJobsHistoryLimit(Integer failedJobsHistoryLimit) {
    this.failedJobsHistoryLimit = failedJobsHistoryLimit;
  }


  public V1alpha1CronWorkflowSpec schedule(String schedule) {
    
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSchedule() {
    return schedule;
  }


  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }


  public V1alpha1CronWorkflowSpec startingDeadlineSeconds(String startingDeadlineSeconds) {
    
    this.startingDeadlineSeconds = startingDeadlineSeconds;
    return this;
  }

   /**
   * StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.
   * @return startingDeadlineSeconds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "StartingDeadlineSeconds is the K8s-style deadline that will limit the time a CronWorkflow will be run after its original scheduled time if it is missed.")

  public String getStartingDeadlineSeconds() {
    return startingDeadlineSeconds;
  }


  public void setStartingDeadlineSeconds(String startingDeadlineSeconds) {
    this.startingDeadlineSeconds = startingDeadlineSeconds;
  }


  public V1alpha1CronWorkflowSpec successfulJobsHistoryLimit(Integer successfulJobsHistoryLimit) {
    
    this.successfulJobsHistoryLimit = successfulJobsHistoryLimit;
    return this;
  }

   /**
   * Get successfulJobsHistoryLimit
   * @return successfulJobsHistoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSuccessfulJobsHistoryLimit() {
    return successfulJobsHistoryLimit;
  }


  public void setSuccessfulJobsHistoryLimit(Integer successfulJobsHistoryLimit) {
    this.successfulJobsHistoryLimit = successfulJobsHistoryLimit;
  }


  public V1alpha1CronWorkflowSpec suspend(Boolean suspend) {
    
    this.suspend = suspend;
    return this;
  }

   /**
   * Get suspend
   * @return suspend
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSuspend() {
    return suspend;
  }


  public void setSuspend(Boolean suspend) {
    this.suspend = suspend;
  }


  public V1alpha1CronWorkflowSpec timezone(String timezone) {
    
    this.timezone = timezone;
    return this;
  }

   /**
   * Timezone is the timezone against which the cron schedule will be calculated, e.g. \&quot;Asia/Tokyo\&quot;. Default is machine&#39;s local time.
   * @return timezone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Timezone is the timezone against which the cron schedule will be calculated, e.g. \"Asia/Tokyo\". Default is machine's local time.")

  public String getTimezone() {
    return timezone;
  }


  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  public V1alpha1CronWorkflowSpec workflowSpec(V1alpha1WorkflowSpec workflowSpec) {
    
    this.workflowSpec = workflowSpec;
    return this;
  }

   /**
   * Get workflowSpec
   * @return workflowSpec
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1WorkflowSpec getWorkflowSpec() {
    return workflowSpec;
  }


  public void setWorkflowSpec(V1alpha1WorkflowSpec workflowSpec) {
    this.workflowSpec = workflowSpec;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1CronWorkflowSpec v1alpha1CronWorkflowSpec = (V1alpha1CronWorkflowSpec) o;
    return Objects.equals(this.concurrencyPolicy, v1alpha1CronWorkflowSpec.concurrencyPolicy) &&
        Objects.equals(this.failedJobsHistoryLimit, v1alpha1CronWorkflowSpec.failedJobsHistoryLimit) &&
        Objects.equals(this.schedule, v1alpha1CronWorkflowSpec.schedule) &&
        Objects.equals(this.startingDeadlineSeconds, v1alpha1CronWorkflowSpec.startingDeadlineSeconds) &&
        Objects.equals(this.successfulJobsHistoryLimit, v1alpha1CronWorkflowSpec.successfulJobsHistoryLimit) &&
        Objects.equals(this.suspend, v1alpha1CronWorkflowSpec.suspend) &&
        Objects.equals(this.timezone, v1alpha1CronWorkflowSpec.timezone) &&
        Objects.equals(this.workflowSpec, v1alpha1CronWorkflowSpec.workflowSpec);
  }

  @Override
  public int hashCode() {
    return Objects.hash(concurrencyPolicy, failedJobsHistoryLimit, schedule, startingDeadlineSeconds, successfulJobsHistoryLimit, suspend, timezone, workflowSpec);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1CronWorkflowSpec {\n");
    sb.append("    concurrencyPolicy: ").append(toIndentedString(concurrencyPolicy)).append("\n");
    sb.append("    failedJobsHistoryLimit: ").append(toIndentedString(failedJobsHistoryLimit)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    startingDeadlineSeconds: ").append(toIndentedString(startingDeadlineSeconds)).append("\n");
    sb.append("    successfulJobsHistoryLimit: ").append(toIndentedString(successfulJobsHistoryLimit)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    workflowSpec: ").append(toIndentedString(workflowSpec)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

