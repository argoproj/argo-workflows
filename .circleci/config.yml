version: 2.1
commands:
  dep_ensure:
    steps:
      - restore_cache:
          keys:
            - vendor-v1-{{ checksum "Gopkg.lock" }}
      - run:
          name: Install Dep
          command: curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
      - run: dep ensure -v
      - save_cache:
          key: vendor-v1-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
  install_golang:
    steps:
      - run:
          name: Install Golang v1.12.6
          command: |
            go get golang.org/dl/go1.12.6
            [ -e /home/circleci/sdk/go1.12.6 ] || go1.12.6 download
            echo "export GOPATH=/home/circleci/.go_workspace" | tee -a $BASH_ENV
            echo "export PATH=/home/circleci/sdk/go1.12.6/bin:\$PATH" | tee -a $BASH_ENV
  save_go_cache:
    steps:
      - save_cache:
          key: go-v3-{{ .Branch }}
          paths:
            - /home/circleci/.go_workspace
            - /home/circleci/.cache/go-build
            - /home/circleci/sdk/go1.12.6
  restore_go_cache:
    steps:
      - restore_cache:
          keys:
            - go-v3-{{ .Branch }}
            - go-v3-master
jobs:
  e2e:
    working_directory: /home/circleci/.go_workspace/src/github.com/argoproj/argo
    machine:
      image: circleci/classic:201808-01
    steps:
      - run:
          name: Install and start K3S v0.5.0
          command: |
            curl -sfL https://get.k3s.io | sh -
            sudo chmod -R a+rw /etc/rancher/k3s
            kubectl version
          background: true
          environment:
            INSTALL_K3S_EXEC: --docker
            INSTALL_K3S_VERSION: v0.5.0
      - run:
          name: Pull some Docker images now, to save time later
          command: |
            docker pull golang:1.11.5
            docker pull docker/whalesay:latest
          background: true
      - restore_go_cache
      - install_golang
      - run:
          name: Install Go test report to Junit test report
          command: go get github.com/jstemmer/go-junit-report
      - checkout
      - dep_ensure
      - run:
          name: Configure K3S
          command: |
            # install the certificates (not 100% sure we need this)
            sudo cp /var/lib/rancher/k3s/server/tls/token-ca.crt /usr/local/share/ca-certificates/k3s.crt
            sudo update-ca-certificates
            # create the kubecfg, again - not sure we need this
            cat /etc/rancher/k3s/k3s.yaml | sed "s/localhost/`hostname`/" | tee ~/.kube/config
            echo "127.0.0.1 `hostname`" | sudo tee -a /etc/hosts
      - run: make start-e2e
      - save_go_cache
      - run:
          name: Follow controller logs, to help diagnose failures
          command: kubectl logs -f $(kubectl get pods -l app=workflow-controller -o name)
          background: true
      - run:
          name: Run tests
          command: |
            mkdir -p test-results
            make test-e2e | go-junit-report > test-results/go-test-report.xml
      - save_go_cache
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: .
workflows:
  version: 2
  workflow:
    jobs:
      - e2e